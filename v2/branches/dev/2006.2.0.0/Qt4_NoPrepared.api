ABSTRACTACTIONEDITOR_H
ABSTRACTBRUSHMANAGER_H
ABSTRACTDNDITEM_H
ABSTRACTFORMBUILDER_H
ABSTRACTFORMEDITORPLUGIN_H
ABSTRACTFORMEDITOR_H
ABSTRACTFORMWINDOWCURSOR_H
ABSTRACTFORMWINDOWMANAGER_H
ABSTRACTFORMWINDOWTOOL_H
ABSTRACTFORMWINDOW_H
ABSTRACTICONCACHE_H
ABSTRACTMETADATABASE_H
ABSTRACTOBJECTINSPECTOR_H
ABSTRACTPROPERTYEDITOR_H
ABSTRACTWIDGETBOX_H
ABSTRACTWIDGETDATABASE_H
ABSTRACTWIDGETFACTORY_H
ALPHA_QATOMIC_H
ARM_QATOMIC_H
AcceptMode
Access
Action
ActionEvent
ActivationReason
AdditionalStyleValues
AlignmentFlag
AnchorAttribute
AppleEvent
ApplicationAttribute
Arrangement
ArrowType
AspectRatioMode
Attribute
AttributeList
AttributeType
Attributes
AutoFormattingFlag
B0
BGMode
BOUNDSCHECKER_QATOMIC_H
BackgroundMode
BackgroundOrigin
BatchExecutionMode
BindFlag
BindingSyntax
Boundary
BrushStyle
BusType
Button
ButtonFeature
ButtonLayout
ButtonRole
ButtonState
ButtonState_enum
ButtonSymbols
ByteOrder
CGContextRef
CGImageRef
CGrafPtr
CMPP
CONTAINER_H
CUSTOMWIDGET_H
CacheMode
CacheModeFlag
Call
CallMode
Callback
Capability
CaretMode
CaseSensitivity
Category
CategoryList
CheckState
CheckType
ClipOperation
CloseMode
ColorGroup
ColorMode
ColorRole
ColorSpec
CombiningClass
Command
Communication
ComparisonFlags
CompletionMode
ComplexControl
CompositionMode
Confirm
ConnectionState
ConnectionType
ConstIterator
Constructor
ContentsType
ContextMenuPolicy
ControlElement
ControlRef
ConversionFlag
ConverterState
CoordinateMode
Corner
CornerWidget
CorrectionMode
Country
CursorAction
CursorMode
CursorPosition
CursorShape
CurveShape
DEFAULT_EXTENSIONFACTORY_H
DEPENDS_ON
DESIGNABLE(qobject_cast<QMainWindow *>(parentWidget()) != 0)
DTDHandler* DTDHandler() const
DTDHandler* DTDHandler() const = 0
Data
DateFormat
DayOfWeek
DecoderFn
Decomposition
DemarshallFunction
Destructor
DialogCode
DialogLabel
Direction
DirtyFlag
Display
DisplayMode
Dock
DockWidgetArea
DockWidgetAreaSizes
DockWidgetFeature
DockWindowData
DockWindows
DragDropMode
DragMode
DragRef
DriverFeature
DropAction
DropIndicatorPosition
DropType
DummyFrame
DummyNode
EXTENSION_GLOBAL_H
EXTENSION_H
EXTRAINFO_H
EchoMode
Edge
EditMode
EditStrategy
EditTrigger
EditType
Element
ElementType
EncoderFn
Encoding
EndEditHint
Endian
Error
ErrorType
Event
EventFilter
EventHandlerCallRef
EventHandlerRef
EventList
EventLoopTimerRef
EventRef
ExitStatus
ExpandData
Extension
ExtensionOption
ExtensionReturn
ExtraSelection
FALSE
FORMATETC
FORMBUILDER_H
FeatureFlag
FieldAlignment
FileError
FileFlag
FileMode
FileName
FileOwner
FileTime
FillRule
Filter
FilterSpec
FindFlag
Flag
Flow
FocusPolicy
FocusReason
FocusStyle
FontFilter
Format
FormatOption
FormatRange
FormatType
FormattingOption
FrameAnimationType
FrameFeature
GC
GDHandle
GENERIC_QATOMIC_H
GL_DOUBLE
GLdouble
GUID
GUID_DEFINED
GUIStyle
GWorldPtr
GlobalColor
GrafPtr
GraphicsItemChange
GraphicsItemFlag
HANDLE
HAVE_LONG_LONG
HBitmapFormat
HIViewRef
HandlePosition
Handler
Hash
HintReturnType
HitTestAccuracy
HorizontalHeaderFormat
HostInfoError
I386_QATOMIC_H
IA64_QATOMIC_H
IO_Append
IO_ModeMask
IO_ReadOnly
IO_ReadWrite
IO_Translate
IO_Truncate
IO_WriteOnly
Icon
IconRef
IconType
IdentifierType
ImageConversionFlag
ImageOption
ImageReaderError
ImageWriterError
InputMethodQuery
InsertMode
InsertPolicy
InterfaceFactory
InterfaceFlag
InternalFunction
IntersectType
InvalidDataPolicy
InvertMode
Item
ItemDataRole
ItemFlag
ItemIndexMethod
ItemSelectionMode
ItemTextPos
ItemType
Iterator
IteratorFlag
Joining
Key
KeyAction
KeyType
KeyboardAction
KeyboardModifier
LAYOUTDECORATION_H
LPARX
LPGUID
Language
LayoutDirection
LayoutMode
LibraryLocation
LineWrapMode
ListStyle
LoadHint
LoadOperator
Location
MAC_OS_X_VERSION_10_3
MAC_OS_X_VERSION_10_4
MAC_OS_X_VERSION_10_5
MAC_OS_X_VERSION_MIN_REQUIRED
MEMBERSHEET_H
METHOD
METHOD_CODE
MIPS_QATOMIC_H
MSG
MacVersion
MacintoshVersion
MailServer
Margin
MarshallFunction
MatchFlag
MenuBarHandle
MenuItemType
MenuRef
MenuRole
MessageIcon
MessageType
MetaInformation
Method
MethodType
Mode
ModelSorting
Modifier
MouseAction
MouseButton
MoveMode
MoveOperation
Movement
MovieState
NameAcquired(const QString &)
NameLost(const QString &)
NameOwnerChanged(const QString &, const QString &, const QString &)
Nav
NetworkLayerProtocol
Node
NodeType
NormalizationForm
Null
NumberFlag
NumberOption
OSStatus
ObjectTypes
Offset
Op
OpenGLVersionFlag
OpenModeFlag
Operation
Optimization
Option
OptionType
Order
Orientation
OutputFormat
PARISC_QATOMIC_H
PGconn
PGresult
PID
PMPageFormat
PMPrintSession
PMPrintSettings
POWERPC_QATOMIC_H
PROPERTYSHEET_H
PageBreakFlag
PageOrder
PageSize
PaintContext
PaintDeviceFlags
PaintDeviceMetric
PaintEngineFeature
PaintUnit
PaperSource
ParamTypeFlag
ParsingMode
PatternSyntax
PayloadNode
PenCapStyle
PenJoinStyle
PenStyle
Permission
PermissionSpec
PixelMetric
Place
PointerType
Policy
PolicyFlag
PolygonDrawMode
PopupAction
Position
PreviewMode
PrimitiveElement
PrintDialogOption
PrintEnginePropertyKey
PrintRange
PrinterMode
PrinterOption
PrinterState
Priority
Private
PrivateShared
ProcessChannel
ProcessChannelMode
ProcessError
ProcessEventsFlag
ProcessState
Property
Protocol
ProxyType
Q3ACCEL_H
Q3ACTION_H
Q3ASCIICACHE_H
Q3ASCIIDICT_H
Q3Accel
Q3Accel(QWidget *parent, const char *name=0 )
Q3Accel(QWidget* watch, QObject *parent, const char *name=0 )
Q3Action
Q3Action(QObject* parent, const char* name , bool toggle) // obsolete
Q3Action(QObject* parent, const char* name = 0)
Q3Action(const QIcon& icon, const QString& menuText, QKeySequence accel, QObject* parent, const char* name = 0)
Q3Action(const QString& menuText, QKeySequence accel, QObject* parent, const char* name = 0)
Q3Action(const QString& text, const QIcon& icon, const QString& menuText, QKeySequence accel, QObject* parent, const char* name = 0, bool toggle = false) // obsolete
Q3Action(const QString& text, const QString& menuText, QKeySequence accel, QObject* parent, const char* name = 0, bool toggle = false) // obsolete
Q3ActionGroup
Q3ActionGroup(QObject* parent, const char* name , bool exclusive ) // obsolete
Q3ActionGroup(QObject* parent, const char* name = 0)
Q3AsciiBucket
Q3AsciiCache
Q3AsciiCacheIterator
Q3AsciiDict
Q3AsciiDictIterator
Q3BOXLAYOUT_H
Q3BUTTONGROUP_H
Q3BUTTON_H
Q3BaseBucket
Q3BoxLayout
Q3Button
Q3Button(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0 )
Q3ButtonGroup
Q3ButtonGroup(QWidget* parent=0, const char* name=0)
Q3ButtonGroup(const QString &title, QWidget* parent=0, const char* name=0)
Q3ButtonGroup(int columns, Qt::Orientation o, QWidget* parent=0, const char* name=0)
Q3ButtonGroup(int columns, Qt::Orientation o, const QString &title, QWidget* parent=0, const char* name=0)
Q3CACHE_H
Q3CANVAS_H
Q3CLEANUPHANDLER_H
Q3COMBOBOX_H
Q3CSTRING_H
Q3CString
Q3Cache
Q3CacheIterator
Q3Canvas
Q3Canvas(QObject* parent = 0, const char* name = 0)
Q3Canvas(QPixmap p, int h, int v, int tilewidth, int tileheight)
Q3Canvas(int w, int h)
Q3CanvasEllipse
Q3CanvasEllipse(Q3Canvas* canvas)
Q3CanvasEllipse(int width, int height, Q3Canvas* canvas)
Q3CanvasEllipse(int width, int height, int startangle, int angle, Q3Canvas* canvas)
Q3CanvasItem
Q3CanvasItem(Q3Canvas* canvas)
Q3CanvasItemList
Q3CanvasLine
Q3CanvasLine(Q3Canvas* canvas)
Q3CanvasPixmap
Q3CanvasPixmap(const QImage& image)
Q3CanvasPixmap(const QPixmap&, const QPoint& hotspot)
Q3CanvasPixmap(const QString& datafilename)
Q3CanvasPixmapArray
Q3CanvasPixmapArray()
Q3CanvasPixmapArray(Q3PtrList<QPixmap>, Q3PtrList<QPoint> hotspots)
Q3CanvasPixmapArray(Q3ValueList<QPixmap>, Q3PointArray hotspots = Q3PointArray())
Q3CanvasPixmapArray(const QString& datafilenamepattern, int framecount=0)
Q3CanvasPolygon
Q3CanvasPolygon(Q3Canvas* canvas)
Q3CanvasPolygonalItem
Q3CanvasPolygonalItem(Q3Canvas* canvas)
Q3CanvasRectangle
Q3CanvasRectangle(Q3Canvas* canvas)
Q3CanvasRectangle(const QRect&, Q3Canvas* canvas)
Q3CanvasRectangle(int x, int y, int width, int height, Q3Canvas* canvas)
Q3CanvasSpline
Q3CanvasSpline(Q3Canvas* canvas)
Q3CanvasSprite
Q3CanvasSprite(Q3CanvasPixmapArray* array, Q3Canvas* canvas)
Q3CanvasText
Q3CanvasText(Q3Canvas* canvas)
Q3CanvasText(const QString&, Q3Canvas* canvas)
Q3CanvasText(const QString&, QFont, Q3Canvas* canvas)
Q3CanvasView
Q3CanvasView(Q3Canvas* viewing, QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0)
Q3CanvasView(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0)
Q3CheckListItem
Q3CheckListItem(Q3CheckListItem *parent, Q3ListViewItem *after, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3CheckListItem *parent, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3ListView *parent, Q3ListViewItem *after, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3ListView *parent, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3ListView *parent, const QString &text, const QPixmap &)
Q3CheckListItem(Q3ListViewItem *parent, Q3ListViewItem *after, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3ListViewItem *parent, const QString &text, Type = RadioButtonController)
Q3CheckListItem(Q3ListViewItem *parent, const QString &text, const QPixmap &)
Q3CheckTableItem
Q3CheckTableItem(Q3Table *table, const QString &txt)
Q3CleanupHandler
Q3ColorDrag
Q3ColorDrag(QWidget * dragSource = 0, const char * name = 0)
Q3ColorDrag(const QColor &col, QWidget *dragsource = 0, const char *name = 0)
Q3ComboBox
Q3ComboBox(QWidget* parent=0, const char* name=0 )
Q3ComboBox(bool rw, QWidget* parent=0, const char* name=0 )
Q3ComboBox(const Q3ComboBox & )
Q3ComboTableItem
Q3ComboTableItem(Q3Table *table, const QStringList &list, bool editable = false)
Q3DATABROWSER_H
Q3DATATABLE_H
Q3DATAVIEW_H
Q3DATETIMEEDIT_H
Q3DEEPCOPY_H
Q3DICT_H
Q3DNS_H
Q3DOCKAREA_H
Q3DOCKWINDOW_H
Q3DRAGOBJECT_H
Q3DROPSITE_H
Q3DataBrowser
Q3DataBrowser(QWidget* parent=0, const char* name=0, Qt::WindowFlags fl = 0)
Q3DataTable
Q3DataTable(Q3SqlCursor* cursor, bool autoPopulate = false, QWidget* parent=0, const char* name=0 )
Q3DataTable(QWidget* parent=0, const char* name=0 )
Q3DataTable(const Q3DataTable & )
Q3DataView
Q3DataView(QWidget* parent=0, const char* name=0, Qt::WindowFlags fl = 0)
Q3DateEdit
Q3DateEdit(QWidget* parent=0, const char* name=0)
Q3DateEdit(const QDate& date, QWidget* parent=0, const char* name=0)
Q3DateTimeEdit
Q3DateTimeEdit(QWidget* parent=0, const char* name=0)
Q3DateTimeEdit(const QDateTime& datetime, QWidget* parent=0, const char* name=0)
Q3DateTimeEditBase
Q3DeepCopy
Q3Dict
Q3DictIterator
Q3Dns
Q3Dns()
Q3Dns(const QHostAddress & address, RecordType rr = Ptr )
Q3Dns(const QString & label, RecordType rr = A )
Q3DnsSocket
Q3DnsSocket(QObject *, const char * )
Q3DockArea
Q3DockArea(Qt::Orientation o, HandlePosition h = Normal, QWidget* parent=0, const char* name=0)
Q3DockAreaLayout
Q3DockWindow
Q3DockWindow(Place p = InDock, QWidget* parent=0, const char* name=0, Qt::WindowFlags f = 0)
Q3DockWindow(Place p, QWidget* parent, const char* name, Qt::WindowFlags f, bool toolbar)
Q3DockWindow(QWidget* parent, const char* name=0, Qt::WindowFlags f = 0)
Q3DragObject
Q3DragObject(Q3DragObjectPrivate &, QWidget *dragSource = 0)
Q3DragObject(QWidget * dragSource = 0, const char *name = 0)
Q3DropSite
Q3DropSite(QWidget* parent)
Q3EDITORFACTORY_H
Q3EditorFactory
Q3EditorFactory(QObject * parent = 0)
Q3FILEDIALOG_H
Q3FRAME_H
Q3FTP_H
Q3FileDialog
Q3FileDialog(QWidget* parent=0, const char* name=0, bool modal = false)
Q3FileDialog(const QString& dirName, const QString& filter = QString(), QWidget* parent=0, const char* name=0, bool modal = false)
Q3FileIconProvider
Q3FileIconProvider(QObject * parent = 0, const char* name = 0)
Q3FilePreview
Q3FilePreview()
Q3Frame
Q3Frame(QWidget* parent, const char* name = 0, Qt::WindowFlags f = 0)
Q3Ftp
Q3Ftp() // ### Qt 4.0: get rid of this overload
Q3Ftp(QObject *parent, const char *name=0 )
Q3GARRAY_H
Q3GArray
Q3GArray()
Q3GArray(const Q3GArray &a) // shallow copy
Q3GArray(int size) // allocate 'size' bytes
Q3GArray(int, int) // dummy does not alloc
Q3GCACHE_H
Q3GCache
Q3GCache(const Q3GCache &) // not allowed, calls fatal()
Q3GCache(int maxCost, uint size, KeyType kt, bool caseSensitive, bool copyKeys)
Q3GCacheIterator
Q3GCacheIterator(const Q3GCache &)
Q3GCacheIterator(const Q3GCacheIterator &)
Q3GDICT_H
Q3GDict
Q3GDict(const Q3GDict & )
Q3GDict(uint len, KeyType kt, bool cs, bool ck )
Q3GDictIterator
Q3GDictIterator(const Q3GDict & )
Q3GDictIterator(const Q3GDictIterator & )
Q3GLIST_H
Q3GList
Q3GList() // create empty list
Q3GList(const Q3GList & ) // make copy of other list
Q3GListIterator
Q3GListIterator(const Q3GList & )
Q3GListIterator(const Q3GListIterator & )
Q3GListStdIterator
Q3GRIDLAYOUT_H
Q3GRIDVIEW_H
Q3GRID_H
Q3GROUPBOX_H
Q3GVECTOR_H
Q3GVector
Q3GVector() // create empty vector
Q3GVector(const Q3GVector &v ) // make copy of other vector
Q3GVector(uint size ) // create vector with nullptrs
Q3Grid
Q3Grid(int n, QWidget* parent=0, const char* name=0, Qt::WindowFlags f = 0)
Q3Grid(int n, Qt::Orientation orient, QWidget* parent=0, const char* name=0, Qt::WindowFlags f = 0)
Q3GridLayout
Q3GridView
Q3GridView(QWidget *parent=0, const char *name=0, Qt::WindowFlags f=0)
Q3GroupBox
Q3GroupBox(QWidget* parent=0, const char* name=0)
Q3GroupBox(const QString &title, QWidget* parent=0, const char* name=0)
Q3GroupBox(int strips, Qt::Orientation o, QWidget* parent=0, const char* name=0)
Q3GroupBox(int strips, Qt::Orientation o, const QString &title, QWidget* parent=0, const char* name=0)
Q3HBOX_H
Q3HBox
Q3HBox(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0)
Q3HBox(bool horizontal, QWidget* parent, const char* name, Qt::WindowFlags f = 0)
Q3HBoxLayout
Q3HButtonGroup
Q3HEADER_H
Q3HGROUPBOX_H
Q3HGroupBox
Q3HGroupBox(QWidget* parent=0, const char* name=0 )
Q3HGroupBox(const QString &title, QWidget* parent=0, const char* name=0 )
Q3HTTP_H
Q3Header
Q3Header(QWidget* parent=0, const char* name=0)
Q3Header(int, QWidget* parent=0, const char* name=0)
Q3Http
Q3Http()
Q3Http(QObject* parent, const char* name = 0 ) // ### Qt 4.0: make parent=0 and get rid of the Q3Http() constructor
Q3Http(const QString &hostname, Q_UINT16 port=80, QObject* parent=0, const char* name = 0 )
Q3HttpHeader
Q3HttpHeader()
Q3HttpHeader(const Q3HttpHeader& header )
Q3HttpHeader(const QString& str )
Q3HttpRequestHeader
Q3HttpRequestHeader()
Q3HttpRequestHeader(const Q3HttpRequestHeader& header )
Q3HttpRequestHeader(const QString& method, const QString& path, int majorVer = 1, int minorVer = 1 )
Q3HttpRequestHeader(const QString& str )
Q3HttpResponseHeader
Q3HttpResponseHeader()
Q3HttpResponseHeader(const Q3HttpResponseHeader& header )
Q3HttpResponseHeader(const QString& str )
Q3HttpResponseHeader(int code, const QString& text = QString(), int majorVer = 1, int minorVer = 1 )
Q3ICONVIEW_H
Q3INTCACHE_H
Q3INTDICT_H
Q3IconDrag
Q3IconDrag(QWidget * dragSource, const char* name = 0)
Q3IconDragItem
Q3IconDragItem()
Q3IconView
Q3IconView(QWidget* parent=0, const char* name=0, Qt::WindowFlags f = 0)
Q3IconViewItem
Q3IconViewItem(Q3IconView *parent)
Q3IconViewItem(Q3IconView *parent, Q3IconViewItem *after)
Q3IconViewItem(Q3IconView *parent, Q3IconViewItem *after, const QString &text)
Q3IconViewItem(Q3IconView *parent, Q3IconViewItem *after, const QString &text, const QPicture &picture)
Q3IconViewItem(Q3IconView *parent, Q3IconViewItem *after, const QString &text, const QPixmap &icon)
Q3IconViewItem(Q3IconView *parent, const QString &text)
Q3IconViewItem(Q3IconView *parent, const QString &text, const QPicture &picture)
Q3IconViewItem(Q3IconView *parent, const QString &text, const QPixmap &icon)
Q3ImageDrag
Q3ImageDrag(Q3ImageDragPrivate &, QWidget * dragSource = 0)
Q3ImageDrag(QImage image, QWidget * dragSource = 0, const char * name = 0)
Q3ImageDrag(QWidget * dragSource = 0, const char * name = 0)
Q3IntBucket
Q3IntCache
Q3IntCacheIterator
Q3IntDict
Q3IntDictIterator
Q3LISTBOX_H
Q3LISTVIEW_H
Q3LNode
Q3LOCALFS_H
Q3ListBox
Q3ListBox(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0 )
Q3ListBoxItem
Q3ListBoxItem(Q3ListBox* listbox = 0)
Q3ListBoxItem(Q3ListBox* listbox, Q3ListBoxItem *after)
Q3ListBoxPixmap
Q3ListBoxPixmap(Q3ListBox* listbox, const QPixmap & pix, Q3ListBoxItem *after)
Q3ListBoxPixmap(Q3ListBox* listbox, const QPixmap & pix, const QString&, Q3ListBoxItem *after)
Q3ListBoxPixmap(Q3ListBox* listbox, const QPixmap &)
Q3ListBoxPixmap(Q3ListBox* listbox, const QPixmap &, const QString&)
Q3ListBoxPixmap(const QPixmap &)
Q3ListBoxPixmap(const QPixmap &, const QString&)
Q3ListBoxText
Q3ListBoxText(Q3ListBox* listbox, const QString & text, Q3ListBoxItem *after)
Q3ListBoxText(Q3ListBox* listbox, const QString & text=QString())
Q3ListBoxText(const QString & text=QString())
Q3ListView
Q3ListView(QWidget* parent=0, const char* name=0, Qt::WindowFlags f = 0)
Q3ListViewItem
Q3ListViewItem(Q3ListView * parent)
Q3ListViewItem(Q3ListView * parent, Q3ListViewItem * after)
Q3ListViewItem(Q3ListView * parent, Q3ListViewItem * after, const QString&, const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString())
Q3ListViewItem(Q3ListView * parent, const QString&, const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString())
Q3ListViewItem(Q3ListViewItem * parent)
Q3ListViewItem(Q3ListViewItem * parent, Q3ListViewItem * after)
Q3ListViewItem(Q3ListViewItem * parent, Q3ListViewItem * after, const QString&, const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString())
Q3ListViewItem(Q3ListViewItem * parent, const QString&, const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString(), const QString& = QString())
Q3ListViewItemFeature
Q3ListViewItemIterator
Q3ListViewItemIterator()
Q3ListViewItemIterator(Q3ListView *lv)
Q3ListViewItemIterator(Q3ListView *lv, int iteratorFlags)
Q3ListViewItemIterator(Q3ListViewItem *item)
Q3ListViewItemIterator(Q3ListViewItem *item, int iteratorFlags)
Q3ListViewItemIterator(const Q3ListViewItemIterator &it)
Q3LocalFs
Q3LocalFs()
Q3MAINWINDOW_H
Q3MEMARRAY_H
Q3MIMEFACTORY_H
Q3MULTILINEEDIT_H
Q3MainWindow
Q3MainWindow(QWidget* parent=0, const char* name=0, Qt::WindowFlags f = Qt::WType_TopLevel)
Q3MemArray
Q3MemArray(const QVector<type> &vector)
Q3MimeSourceFactory
Q3MimeSourceFactory()
Q3MultiLineEdit
Q3MultiLineEdit(QWidget* parent=0, const char* name=0)
Q3NETWORKPROTOCOL_H
Q3NETWORK_H
Q3NetworkOperation
Q3NetworkOperation(Q3NetworkProtocol::Operation operation, const QByteArray &arg0, const QByteArray &arg1, const QByteArray &arg2 )
Q3NetworkOperation(Q3NetworkProtocol::Operation operation, const QString &arg0, const QString &arg1, const QString &arg2 )
Q3NetworkOperation(const Q3NetworkOperation & )
Q3NetworkProtocol
Q3NetworkProtocol()
Q3NetworkProtocol(const Q3NetworkProtocol & )
Q3NetworkProtocolDict
Q3NetworkProtocolFactory
Q3NetworkProtocolFactoryBase
Q3OBJECTDICT_H
Q3ObjectDictionary
Q3PAINTDEVICEMETRICS_H
Q3PAINTER_H
Q3PICTURE_H
Q3POINTARRAY_H
Q3POLYGONSCANNER_H
Q3POPUPMENU_H
Q3PROCESS_H
Q3PROGRESSBAR_H
Q3PROGRESSDIALOG_H
Q3PTRCOLLECTION_H
Q3PTRDICT_H
Q3PTRLIST_H
Q3PTRQUEUE_H
Q3PTRSTACK_H
Q3PTRVECTOR_H
Q3PaintDeviceMetrics
Q3Painter
Q3Picture
Q3PointArray
Q3PolygonScanner
Q3PopupMenu
Q3Process
Q3Process(QObject *parent=0, const char *name=0 )
Q3Process(const Q3Process & )
Q3Process(const QString& arg0, QObject *parent=0, const char *name=0 )
Q3Process(const QStringList& args, QObject *parent=0, const char *name=0 )
Q3ProgressBar
Q3ProgressBar(QWidget *parent = 0, Qt::WindowFlags f = 0)
Q3ProgressBar(QWidget *parent, const char *name, Qt::WindowFlags f=0)
Q3ProgressBar(int totalSteps, QWidget *parent = 0, Qt::WindowFlags f=0)
Q3ProgressBar(int totalSteps, QWidget *parent, const char *name, Qt::WindowFlags f=0)
Q3ProgressDialog
Q3ProgressDialog(QWidget* parent = 0, Qt::WindowFlags f = 0)
Q3ProgressDialog(QWidget* parent, const char* name, bool modal=false, Qt::WindowFlags f=0)
Q3ProgressDialog(const QString& labelText, const QString &cancelButtonText, int totalSteps, QWidget* parent=0, Qt::WindowFlags f=0)
Q3ProgressDialog(const QString& labelText, const QString &cancelButtonText, int totalSteps, QWidget* parent=0, const char* name=0, bool modal=false, Qt::WindowFlags f=0)
Q3PtrBucket
Q3PtrCollection
Q3PtrDict
Q3PtrDictIterator
Q3PtrList
Q3PtrListIterator
Q3PtrListStdIterator
Q3PtrQueue
Q3PtrStack
Q3PtrVector
Q3RANGECONTROL_H
Q3RangeControl
Q3RangeControl()
Q3RangeControl(int minValue, int maxValue, int lineStep, int pageStep, int value)
Q3SCROLLVIEW_H
Q3SEMAPHORE_H
Q3SERVERSOCKET_H
Q3SHARED_H
Q3SIGNAL_H
Q3SIMPLERICHTEXT_H
Q3SOCKETDEVICE_H
Q3SOCKET_H
Q3SORTEDLIST_H
Q3SQLCURSOR_H
Q3SQLEDITORFACTORY_H
Q3SQLFIELDINFO_H
Q3SQLFORM_H
Q3SQLPROPERTYMAP_H
Q3SQLRECORDINFO_H
Q3SQLSELECTCURSOR_H
Q3STRLIST_H
Q3STRVEC_H
Q3STYLESHEET_H
Q3SYNTAXHIGHLIGHTER_H
Q3ScrollView
Q3ScrollView(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0)
Q3Semaphore
Q3Semaphore(int)
Q3ServerSocket
Q3ServerSocket(QObject *parent=0, const char *name=0 )
Q3ServerSocket(Q_UINT16 port, int backlog = 1, QObject *parent=0, const char *name=0 )
Q3ServerSocket(const QHostAddress & address, Q_UINT16 port, int backlog = 1, QObject *parent=0, const char *name=0 )
Q3Shared
Q3Signal
Q3Signal(QObject *parent=0, const char *name=0)
Q3SimpleRichText
Q3SimpleRichText(const QString& text, const QFont& fnt, const QString& context = QString(), const Q3StyleSheet* sheet = 0)
Q3SimpleRichText(const QString& text, const QFont& fnt, const QString& context, const Q3StyleSheet *sheet, const Q3MimeSourceFactory* factory, int pageBreak = -1, const QColor& linkColor = Qt::blue, bool linkUnderline = true)
Q3SingleCleanupHandler
Q3Socket
Q3Socket(QObject *parent=0, const char *name=0 )
Q3Socket(const Q3Socket & )
Q3SocketDevice
Q3SocketDevice(Type type = Stream )
Q3SocketDevice(Type type, Protocol protocol, int dummy )
Q3SocketDevice(const Q3SocketDevice & )
Q3SocketDevice(int socket, Type type )
Q3SortedList
Q3SpinWidget
Q3SpinWidget(QWidget* parent=0, const char* name=0)
Q3SqlCursor
Q3SqlCursor(const Q3SqlCursor & other)
Q3SqlCursor(const QString & name = QString(), bool autopopulate = true, QSqlDatabase db = QSqlDatabase())
Q3SqlEditorFactory
Q3SqlEditorFactory(QObject * parent = 0)
Q3SqlFieldInfo
Q3SqlFieldInfoList
Q3SqlForm
Q3SqlForm(QObject * parent = 0)
Q3SqlPropertyMap
Q3SqlPropertyMap()
Q3SqlRecordInfo
Q3SqlSelectCursor
Q3SqlSelectCursor(const Q3SqlSelectCursor& other)
Q3SqlSelectCursor(const QString& query = QString(), QSqlDatabase db = QSqlDatabase())
Q3StoredDrag
Q3StoredDrag(Q3StoredDragPrivate &, const char *mimeType, QWidget *dragSource = 0)
Q3StoredDrag(const char *mimeType, QWidget *dragSource = 0, const char *name = 0)
Q3StrIList
Q3StrIVec
Q3StrList
Q3StrList(const Q3StrList & )
Q3StrListIterator
Q3StrVec
Q3StringBucket
Q3StyleSheet
Q3StyleSheet(QObject *parent=0, const char *name=0)
Q3StyleSheetItem
Q3StyleSheetItem(Q3StyleSheet* parent, const QString& name)
Q3StyleSheetItem(const Q3StyleSheetItem &)
Q3SyntaxHighlighter
Q3SyntaxHighlighter(Q3TextEdit *textEdit)
Q3TABDIALOG_H
Q3TABLE_H
Q3TEXTBROWSER_H
Q3TEXTEDIT_H
Q3TEXTSTREAM_H
Q3TEXTVIEW_H
Q3TL_H
Q3TOOLBAR_H
Q3TSFUNC
Q3TSMFI
Q3TSManip
Q3TabDialog
Q3TabDialog(QWidget* parent=0, const char* name=0, bool modal=false, Qt::WindowFlags f=0)
Q3Table
Q3Table(QWidget* parent=0, const char* name=0)
Q3Table(int numRows, int numCols, QWidget* parent=0, const char* name=0)
Q3TableItem
Q3TableItem(Q3Table *table, EditType et)
Q3TableItem(Q3Table *table, EditType et, const QString &text)
Q3TableItem(Q3Table *table, EditType et, const QString &text, const QPixmap &p)
Q3TableSelection
Q3TableSelection()
Q3TableSelection(int start_row, int start_col, int end_row, int end_col)
Q3TextBrowser
Q3TextBrowser(QWidget* parent=0, const char* name=0)
Q3TextDrag
Q3TextDrag(Q3TextDragPrivate &, QWidget * dragSource = 0)
Q3TextDrag(QWidget * dragSource = 0, const char * name = 0)
Q3TextDrag(const QString &, QWidget *dragSource = 0, const char *name = 0)
Q3TextEdit
Q3TextEdit(QWidget* parent=0, const char* name=0)
Q3TextEdit(const QString& text, const QString& context = QString(), QWidget* parent=0, const char* name=0)
Q3TextEditOptimPrivate
Q3TextStream
Q3TextStream()
Q3TextStream(FILE *, int mode )
Q3TextStream(QByteArray&, int mode )
Q3TextStream(QIODevice * )
Q3TextStream(QString&, int mode ) // obsolete
Q3TextStream(QString*, int mode )
Q3TextStream(const Q3TextStream & )
Q3TextView
Q3TextView(QWidget* parent=0, const char* name=0)
Q3TextView(const QString& text, const QString& context = QString(), QWidget* parent=0, const char* name=0)
Q3TimeEdit
Q3TimeEdit(QWidget* parent=0, const char* name=0)
Q3TimeEdit(const QTime& time, QWidget* parent=0, const char* name=0)
Q3ToolBar
Q3ToolBar(Q3MainWindow* parent=0, const char* name=0)
Q3ToolBar(const QString &label, Q3MainWindow *, QWidget *, bool newLine = false, const char* name=0, Qt::WindowFlags f = 0)
Q3ToolBar(const QString &label, Q3MainWindow *, Qt::ToolBarDock = Qt::DockTop, bool newLine = false, const char* name=0)
Q3URLOPERATOR_H
Q3URL_H
Q3UriDrag
Q3UriDrag(QWidget * dragSource = 0, const char * name = 0)
Q3UriDrag(const Q3StrList &uris, QWidget * dragSource = 0, const char * name = 0)
Q3Url
Q3Url()
Q3Url(const Q3Url& url )
Q3Url(const Q3Url& url, const QString& relUrl, bool checkSlash = false )
Q3Url(const QString& url )
Q3UrlOperator
Q3UrlOperator()
Q3UrlOperator(const Q3UrlOperator& url )
Q3UrlOperator(const Q3UrlOperator& url, const QString& relUrl, bool checkSlash = false )
Q3UrlOperator(const QString &urL )
Q3VALUELIST_H
Q3VALUESTACK_H
Q3VALUEVECTOR_H
Q3VBOX_H
Q3VBox
Q3VBox(QWidget* parent=0, const char* name=0, Qt::WindowFlags f=0)
Q3VBoxLayout
Q3VButtonGroup
Q3VGROUPBOX_H
Q3VGroupBox
Q3VGroupBox(QWidget* parent=0, const char* name=0 )
Q3VGroupBox(const QString &title, QWidget* parent=0, const char* name=0 )
Q3ValueList
Q3ValueListConstIterator
Q3ValueListIterator
Q3ValueStack
Q3ValueVector
Q3WHATSTHIS_H
Q3WIDGETSTACK_H
Q3WIZARD_H
Q3WhatsThis
Q3WhatsThis(QWidget *)
Q3WidgetStack
Q3WidgetStack(QWidget* parent, const char* name=0, Qt::WindowFlags f=0)
Q3Wizard
Q3Wizard(QWidget* parent=0, const char* name=0, bool modal=false, Qt::WindowFlags f=0 )
QABS
QABSTRACTBUTTON_H
QABSTRACTEVENTDISPATCHER_H
QABSTRACTFILEENGINE_H
QABSTRACTITEMDELEGATE_H
QABSTRACTITEMMODEL_H
QABSTRACTITEMVIEW_H
QABSTRACTPAGESETUPDIALOG_H
QABSTRACTPRINTDIALOG_H
QABSTRACTPROXYMODEL_H
QABSTRACTSCROLLAREA_H
QABSTRACTSLIDER_H
QABSTRACTSOCKET_H
QABSTRACTSPINBOX_H
QABSTRACTTEXTDOCUMENTLAYOUT_H
QACCESSIBLEBRIDGE_H
QACCESSIBLEOBJECT_H
QACCESSIBLEPLUGIN_H
QACCESSIBLEWIDGET_H
QACCESSIBLE_H
QACTIONGROUP_H
QACTION_H
QALGORITHMS_H
QAPPLICATION_H
QASSISTANTCLIENT_GLOBAL_H
QASSISTANTCLIENT_H
QATOMIC_ARCH_H
QATOMIC_H
QAbstractButton
QAbstractButton(QAbstractButtonPrivate &dd, QWidget* parent = 0)
QAbstractButton(QWidget *parent, const char *name, Qt::WindowFlags f=0)
QAbstractButton(QWidget* parent=0)
QAbstractEventDispatcher
QAbstractEventDispatcher(QAbstractEventDispatcherPrivate &, QObject *parent)
QAbstractEventDispatcher(QObject *parent = 0)
QAbstractExtensionFactory
QAbstractExtensionManager
QAbstractFileEngine
QAbstractFileEngine()
QAbstractFileEngine(QAbstractFileEnginePrivate &)
QAbstractFileEngineHandler
QAbstractFileEngineHandler()
QAbstractFormBuilder
QAbstractFormBuilder()
QAbstractFormBuilder(const QAbstractFormBuilder &other)
QAbstractGraphicsShapeItem
QAbstractGraphicsShapeItem(QAbstractGraphicsShapeItemPrivate &dd, QGraphicsItem *parent, QGraphicsScene *scene)
QAbstractGraphicsShapeItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QAbstractItemDelegate
QAbstractItemDelegate(QObject *parent = 0)
QAbstractItemDelegate(QObjectPrivate &, QObject *parent = 0)
QAbstractItemModel
QAbstractItemModel(QAbstractItemModelPrivate &dd, QObject *parent = 0)
QAbstractItemModel(QObject *parent = 0)
QAbstractItemView
QAbstractItemView(QAbstractItemViewPrivate &, QWidget *parent = 0)
QAbstractItemView(QWidget *parent = 0)
QAbstractListModel
QAbstractListModel(QAbstractItemModelPrivate &dd, QObject *parent)
QAbstractListModel(QObject *parent = 0)
QAbstractPageSetupDialog
QAbstractPageSetupDialog(QAbstractPageSetupDialogPrivate &ptr, QPrinter *printer, QWidget *parent = 0)
QAbstractPageSetupDialog(QPrinter *printer, QWidget *parent = 0)
QAbstractPrintDialog
QAbstractPrintDialog(QAbstractPrintDialogPrivate &ptr, QPrinter *printer, QWidget *parent = 0)
QAbstractPrintDialog(QPrinter *printer, QWidget *parent = 0)
QAbstractProxyModel
QAbstractProxyModel(QAbstractProxyModelPrivate &, QObject *parent)
QAbstractProxyModel(QObject *parent = 0)
QAbstractScrollArea
QAbstractScrollArea(QAbstractScrollAreaPrivate &dd, QWidget *parent = 0)
QAbstractScrollArea(QWidget* parent=0)
QAbstractSlider
QAbstractSlider(QAbstractSliderPrivate &dd, QWidget *parent=0)
QAbstractSlider(QWidget *parent=0)
QAbstractSocket
QAbstractSocket(SocketType socketType, QAbstractSocketPrivate &dd, QObject *parent = 0)
QAbstractSocket(SocketType socketType, QObject *parent)
QAbstractSpinBox
QAbstractSpinBox(QAbstractSpinBoxPrivate &dd, QWidget *parent = 0)
QAbstractSpinBox(QWidget *parent = 0)
QAbstractTableModel
QAbstractTableModel(QAbstractItemModelPrivate &dd, QObject *parent)
QAbstractTableModel(QObject *parent = 0)
QAbstractTextDocumentLayout
QAbstractTextDocumentLayout(QAbstractTextDocumentLayoutPrivate &, QTextDocument *)
QAbstractTextDocumentLayout(QTextDocument *doc)
QAbstractUndoItem
QAccessible
QAccessibleApplication
QAccessibleApplication()
QAccessibleBridge
QAccessibleBridgeFactoryInterface
QAccessibleBridgeFactoryInterface_iid
QAccessibleBridgePlugin
QAccessibleBridgePlugin(QObject *parent = 0)
QAccessibleEvent
QAccessibleEvent(Type type, int child)
QAccessibleFactoryInterface
QAccessibleFactoryInterface_iid
QAccessibleInterface
QAccessibleInterfaceEx
QAccessibleInterface_iid
QAccessibleObject
QAccessibleObject(QObject *object)
QAccessibleObjectEx
QAccessibleObjectEx(QObject *object)
QAccessiblePlugin
QAccessiblePlugin(QObject *parent = 0)
QAccessibleWidget
QAccessibleWidget(QWidget *o, Role r = Client, const QString& name = QString())
QAccessibleWidgetEx
QAccessibleWidgetEx(QWidget *o, Role r = Client, const QString& name = QString())
QAction
QAction(QActionPrivate &dd, QObject *parent)
QAction(QObject* parent)
QAction(QObject* parent, const char* name)
QAction(const QIcon &icon, const QString &text, QObject* parent)
QAction(const QIcon &icon, const QString &text, const QKeySequence &shortcut, QObject* parent, const char* name)
QAction(const QString &text, QObject* parent)
QAction(const QString &text, const QKeySequence &shortcut, QObject* parent, const char* name)
QActionEvent
QActionEvent(int type, QAction *action, QAction *before = 0)
QActionGroup
QActionGroup(QObject* parent)
QApplication
QApplication(Display *dpy, int &argc, char **argv, Qt::HANDLE visual = 0, Qt::HANDLE cmap= 0)
QApplication(Display *dpy, int &argc, char **argv, Qt::HANDLE visual = 0, Qt::HANDLE cmap= 0, int = QT_VERSION)
QApplication(Display* dpy, Qt::HANDLE visual = 0, Qt::HANDLE cmap = 0)
QApplication(Display* dpy, Qt::HANDLE visual = 0, Qt::HANDLE cmap = 0, int = QT_VERSION)
QApplication(int &argc, char **argv)
QApplication(int &argc, char **argv, Type)
QApplication(int &argc, char **argv, Type, int = QT_VERSION)
QApplication(int &argc, char **argv, bool GUIenabled)
QApplication(int &argc, char **argv, bool GUIenabled, int = QT_VERSION)
QApplication(int &argc, char **argv, int = QT_VERSION)
QArgument
QAssistantClient
QAssistantClient(const QString &path, QObject *parent = 0)
QAtomic
QAtomicPointer
QBASICTIMER_H
QBITARRAY_H
QBITMAP_H
QBOXLAYOUT_H
QBRUSH_H
QBUFFER_H
QBUTTONGROUP_H
QBYTEARRAYMATCHER_H
QBYTEARRAY_H
QBasicAtomic
QBasicAtomicPointer
QBasicTimer
QBitArray
QBitArray(int size, bool val = false)
QBitRef
QBitmap
QBitmap()
QBitmap(const QPixmap &)
QBitmap(const QSize &)
QBitmap(const QSize &, bool clear)
QBitmap(const QSize &, const uchar *bits, bool isXbitmap=false)
QBitmap(const QString &fileName, const char *format=0)
QBitmap(int w, int h)
QBitmap(int w, int h, bool clear)
QBitmap(int w, int h, const uchar *bits, bool isXbitmap=false)
QBool
QBoxLayout
QBoxLayout(Direction, QWidget *parent = 0)
QBoxLayout(Direction, int spacing, const char *name = 0)
QBoxLayout(QLayout *parentLayout, Direction, int spacing = -1, const char *name = 0)
QBoxLayout(QWidget *parent, Direction, int border = 0, int spacing = -1, const char *name = 0)
QBrush
QBrush()
QBrush(Qt::BrushStyle bs)
QBrush(Qt::GlobalColor color, Qt::BrushStyle bs=Qt::SolidPattern)
QBrush(Qt::GlobalColor color, const QPixmap &pixmap)
QBrush(const QBrush &brush)
QBrush(const QColor &color, Qt::BrushStyle bs=Qt::SolidPattern)
QBrush(const QColor &color, const QPixmap &pixmap)
QBrush(const QGradient &gradient)
QBrush(const QImage &image)
QBrush(const QPixmap &pixmap)
QBrushData
QBuffer
QBuffer(QByteArray *buf, QObject *parent = 0)
QBuffer(QObject *parent = 0)
QButtonGroup
QButtonGroup(QObject *parent = 0)
QByteArray
QByteArray()
QByteArray(const QByteArray &)
QByteArray(const char *)
QByteArray(const char *, int size)
QByteArray(int size)
QByteArray(int size, char c)
QByteArrayMatcher
QByteArrayMatcher()
QByteArrayMatcher(const QByteArray &pattern)
QByteArrayMatcher(const QByteArrayMatcher &other)
QByteRef
QCACHE_H
QCALENDARWIDGET_H
QCDESTYLE_H
QCDEStyle
QCDEStyle(bool useHighlightCols = false)
QCHAR_H
QCHECKBOX_H
QCLEANLOOKSSTYLE_H
QCLIPBOARD_H
QCOLORDIALOG_H
QCOLORMAP_H
QCOLOR_H
QCOMBOBOX_H
QCOMMONSTYLE_H
QCOMPARE
QCOMPLETER_H
QCONTAINERFWD_H
QCOORD
QCOREAPPLICATION_H
QCOREEVENT_H
QCURSOR_H
QCache
QCache(int maxCost = 100)
QCalendarWidget
QCalendarWidget(QWidget *parent = 0)
QChar
QChar()
QChar(QLatin1Char ch)
QChar(SpecialCharacter sc)
QChar(char c)
QChar(int rc)
QChar(short rc)
QChar(uchar c)
QChar(uchar c, uchar r)
QChar(uint rc)
QCharRef
QCheckBox
QCheckBox(QWidget *parent, const char* name)
QCheckBox(QWidget *parent=0)
QCheckBox(const QString &text, QWidget *parent, const char* name)
QCheckBox(const QString &text, QWidget *parent=0)
QChildEvent
QChildEvent(Type type, QObject *child )
QCleanlooksStyle
QCleanlooksStyle()
QClipboard
QClipboard(QObject *parent)
QClipboardEvent
QClipboardEvent(QEventPrivate *data)
QCloseEvent
QCloseEvent()
QColor
QColor()
QColor(QRgb rgb)
QColor(Qt::GlobalColor color)
QColor(Spec spec)
QColor(const QColor &color)
QColor(const QString& name)
QColor(const char *name)
QColor(int r, int g, int b, int a = 255)
QColor(int, int, int, Spec)
QColorDialog
QColorDialog(QWidget* parent=0, bool modal=false)
QColorGroup
QColormap
QColormap()
QColormap(const QColormap &colormap)
QComboBox
QComboBox(QComboBoxPrivate &, QWidget *)
QComboBox(QWidget *parent = 0)
QComboBox(QWidget *parent, const char *name)
QComboBox(bool rw, QWidget *parent, const char *name = 0)
QCommonStyle
QCommonStyle()
QCommonStyle(QCommonStylePrivate &dd)
QCompleter
QCompleter(QAbstractItemModel *model, QObject *parent = 0)
QCompleter(QObject *parent = 0)
QCompleter(const QStringList& completions, QObject *parent = 0)
QConicalGradient
QConicalGradient()
QConicalGradient(const QPointF &center, qreal startAngle)
QConicalGradient(qreal cx, qreal cy, qreal startAngle)
QConstString
QContextMenuEvent
QContextMenuEvent(Reason reason, const QPoint &pos)
QContextMenuEvent(Reason reason, const QPoint &pos, const QPoint &globalPos)
QContextMenuEvent(Reason reason, const QPoint &pos, const QPoint &globalPos, int)
QContextMenuEvent(Reason reason, const QPoint &pos, int)
QCoreApplication
QCoreApplication(QCoreApplicationPrivate &p)
QCoreApplication(int &argc, char **argv)
QCursor
QCursor()
QCursor(HCURSOR cursor)
QCursor(Qt::CursorShape shape)
QCursor(Qt::HANDLE cursor)
QCursor(const QBitmap &bitmap, const QBitmap &mask, int hotX=-1, int hotY=-1)
QCursor(const QCursor &cursor)
QCursor(const QPixmap &pixmap, int hotX=-1, int hotY=-1)
QCursorShape
QCustomEvent
QCustomEvent(int type, void *data = 0)
QDATASTREAM_H
QDATAWIDGETMAPPER_H
QDATETIMEEDIT_H
QDATETIME_H
QDBUSABSTRACTADAPTOR_H
QDBUSABSTRACTINTERFACE_H
QDBUSARGUMENT_H
QDBUSBUS_H
QDBUSCONNECTION_H
QDBUSERROR_H
QDBUSEXTRATYPES_H
QDBUSINTERFACE_H
QDBUSMACROS_H
QDBUSMESSAGE_H
QDBUSMETATYPE_H
QDBUSREPLY_H
QDBUSSERVER_H
QDBUS_EXPORT
QDBusAbstractAdaptor
QDBusAbstractAdaptor(QObject *parent)
QDBusAbstractInterface
QDBusAbstractInterface(QDBusAbstractInterfacePrivate &, QObject *parent)
QDBusAbstractInterface(const QString &service, const QString &path, const char *interface, const QDBusConnection &connection, QObject *parent)
QDBusArgument
QDBusArgument()
QDBusArgument(const QDBusArgument &other)
QDBusConnection
QDBusConnection(QDBusConnectionPrivate *dd)
QDBusConnection(const QDBusConnection &other)
QDBusConnection(const QString &name)
QDBusConnectionInterface
QDBusConnectionInterface(const QDBusConnection &connection, QObject *parent)
QDBusError
QDBusError(ErrorType error, const QString &message)
QDBusError(const DBusError *error = 0)
QDBusError(const QDBusError &other)
QDBusError(const QDBusMessage& msg)
QDBusInterface
QDBusInterface(QDBusInterfacePrivate *p)
QDBusInterface(const QString &service, const QString &path, const QString &interface = QString(), const QDBusConnection &connection = QDBusConnection::sessionBus(), QObject *parent = 0)
QDBusMessage
QDBusMessage()
QDBusMessage(const QDBusMessage &other)
QDBusMetaType
QDBusObjectPath
QDBusObjectPath(const QLatin1String &path)
QDBusObjectPath(const QString &path)
QDBusObjectPath(const char *path)
QDBusReply
QDBusServer
QDBusServer(const QString &address, QObject *parent = 0)
QDBusSignature
QDBusSignature(const QLatin1String &signature)
QDBusSignature(const QString &signature)
QDBusSignature(const char *signature)
QDBusVariant
QDBusVariant(const QVariant &variant)
QDEBUG_H
QDESIGNEREXPORTWIDGET_H
QDESIGNER_ABTRACT_LANGUAGE_H
QDESIGNER_COMPONENTS_EXPORT
QDESIGNER_COMPONENTS_EXTERN
QDESIGNER_COMPONENTS_GLOBAL_H
QDESIGNER_COMPONENTS_H
QDESIGNER_COMPONENTS_IMPORT
QDESIGNER_EXTENSION_EXPORT
QDESIGNER_EXTENSION_EXTERN
QDESIGNER_EXTENSION_IMPORT
QDESIGNER_SDK_EXPORT
QDESIGNER_SDK_EXTERN
QDESIGNER_SDK_IMPORT
QDESIGNER_UILIB_EXPORT
QDESIGNER_UILIB_EXTERN
QDESIGNER_UILIB_IMPORT
QDESIGNER_WIDGET_EXPORT
QDESKTOPSERVICES_H
QDESKTOPWIDGET_H
QDIALOGBUTTONBOX_H
QDIALOG_H
QDIAL_H
QDIRMODEL_H
QDIR_H
QDOC_PROPERTY
QDOM_H
QDRAG_H
QDRAWUTIL_H
QDYNAMICDOCKWIDGET_H
QDYNAMICMAINWINDOW_H
QDYNAMICTOOLBAR_H
QDataStream
QDataStream()
QDataStream(QByteArray *, QIODevice::OpenMode flags)
QDataStream(QByteArray *, int mode)
QDataStream(QIODevice *)
QDataStream(const QByteArray &)
QDataWidgetMapper
QDataWidgetMapper(QObject *parent = 0)
QDate
QDate(int y, int m, int d)
QDateEdit
QDateEdit(QWidget *parent = 0)
QDateEdit(const QDate &date, QWidget *parent = 0)
QDateTime
QDateTime()
QDateTime(const QDate &)
QDateTime(const QDate &, const QTime &, Qt::TimeSpec spec = Qt::LocalTime)
QDateTime(const QDateTime &other)
QDateTimeEdit
QDateTimeEdit(QWidget *parent = 0)
QDateTimeEdit(const QDate &d, QWidget *parent = 0)
QDateTimeEdit(const QDateTime &dt, QWidget *parent = 0)
QDateTimeEdit(const QTime &t, QWidget *parent = 0)
QDebug
QDesignerActionEditorInterface
QDesignerActionEditorInterface(QWidget *parent, Qt::WindowFlags flags = 0)
QDesignerBrushManagerInterface
QDesignerComponents
QDesignerContainerExtension
QDesignerCustomWidgetCollectionInterface
QDesignerCustomWidgetInterface
QDesignerDnDItemInterface
QDesignerExtraInfoExtension
QDesignerFormEditorInterface
QDesignerFormEditorInterface(QObject *parent = 0)
QDesignerFormEditorInterface(const QDesignerFormEditorInterface &other)
QDesignerFormEditorPluginInterface
QDesignerFormWindowCursorInterface
QDesignerFormWindowInterface
QDesignerFormWindowInterface(QWidget *parent = 0, Qt::WindowFlags flags = 0)
QDesignerFormWindowManagerInterface
QDesignerFormWindowManagerInterface(QObject *parent = 0)
QDesignerFormWindowToolInterface
QDesignerFormWindowToolInterface(QObject *parent = 0)
QDesignerIconCacheInterface
QDesignerLanguageExtension
QDesignerLayoutDecorationExtension
QDesignerMemberSheetExtension
QDesignerMetaDataBaseInterface
QDesignerMetaDataBaseInterface(QObject *parent = 0)
QDesignerMetaDataBaseItemInterface
QDesignerObjectInspectorInterface
QDesignerObjectInspectorInterface(QWidget *parent, Qt::WindowFlags flags = 0)
QDesignerPropertyEditorInterface
QDesignerPropertyEditorInterface(QWidget *parent, Qt::WindowFlags flags = 0)
QDesignerPropertySheetExtension
QDesignerTaskMenuExtension
QDesignerWidgetBoxInterface
QDesignerWidgetBoxInterface(QWidget *parent = 0, Qt::WindowFlags flags = 0)
QDesignerWidgetDataBaseInterface
QDesignerWidgetDataBaseInterface(QObject *parent = 0)
QDesignerWidgetDataBaseItemInterface
QDesignerWidgetFactoryInterface
QDesignerWidgetFactoryInterface(QObject *parent = 0)
QDesktopServices
QDesktopWidget
QDesktopWidget()
QDial
QDial(QWidget *parent = 0)
QDial(QWidget *parent, const char *name)
QDial(int minValue, int maxValue, int pageStep, int value, QWidget* parent = 0, const char* name = 0)
QDialog
QDialog(QDialogPrivate &, QWidget *parent, Qt::WindowFlags f = 0)
QDialog(QWidget *parent = 0, Qt::WindowFlags f = 0)
QDialog(QWidget *parent, const char *name, bool modal = false, Qt::WindowFlags f = 0)
QDialogButtonBox
QDialogButtonBox(QWidget *parent = 0)
QDialogButtonBox(Qt::Orientation orientation, QWidget *parent = 0)
QDialogButtonBox(StandardButtons buttons, Qt::Orientation orientation = Qt::Horizontal, QWidget *parent = 0)
QDir
QDir(const QDir &)
QDir(const QString &path = QString())
QDir(const QString &path, const QString &nameFilter, SortFlags sort = SortFlags(Name | IgnoreCase), Filters filter = AllEntries)
QDirModel
QDirModel(QDirModelPrivate &, QObject *parent = 0)
QDirModel(QObject *parent = 0)
QDirModel(const QStringList &nameFilters, QDir::Filters filters, QDir::SortFlags sort, QObject *parent = 0)
QDockWidget
QDockWidget(QWidget *parent = 0, Qt::WindowFlags flags = 0)
QDockWidget(const QString &title, QWidget *parent = 0, Qt::WindowFlags flags = 0)
QDomAttr
QDomAttr()
QDomAttr(QDomAttrPrivate*)
QDomAttr(const QDomAttr& x)
QDomCDATASection
QDomCDATASection()
QDomCDATASection(QDomCDATASectionPrivate*)
QDomCDATASection(const QDomCDATASection& x)
QDomCharacterData
QDomCharacterData()
QDomCharacterData(QDomCharacterDataPrivate*)
QDomCharacterData(const QDomCharacterData& x)
QDomComment
QDomComment()
QDomComment(QDomCommentPrivate*)
QDomComment(const QDomComment& x)
QDomDocument
QDomDocument()
QDomDocument(QDomDocumentPrivate*)
QDomDocument(const QDomDocument& x)
QDomDocument(const QDomDocumentType& doctype)
QDomDocument(const QString& name)
QDomDocumentFragment
QDomDocumentFragment()
QDomDocumentFragment(QDomDocumentFragmentPrivate*)
QDomDocumentFragment(const QDomDocumentFragment& x)
QDomDocumentType
QDomDocumentType()
QDomDocumentType(QDomDocumentTypePrivate*)
QDomDocumentType(const QDomDocumentType& x)
QDomElement
QDomElement()
QDomElement(QDomElementPrivate*)
QDomElement(const QDomElement& x)
QDomEntity
QDomEntity()
QDomEntity(QDomEntityPrivate*)
QDomEntity(const QDomEntity& x)
QDomEntityReference
QDomEntityReference()
QDomEntityReference(QDomEntityReferencePrivate*)
QDomEntityReference(const QDomEntityReference& x)
QDomImplementation
QDomImplementation()
QDomImplementation(QDomImplementationPrivate*)
QDomImplementation(const QDomImplementation&)
QDomNamedNodeMap
QDomNamedNodeMap()
QDomNamedNodeMap(QDomNamedNodeMapPrivate*)
QDomNamedNodeMap(const QDomNamedNodeMap&)
QDomNode
QDomNode()
QDomNode(QDomNodePrivate*)
QDomNode(const QDomNode&)
QDomNodeList
QDomNodeList()
QDomNodeList(QDomNodeListPrivate*)
QDomNodeList(const QDomNodeList&)
QDomNotation
QDomNotation()
QDomNotation(QDomNotationPrivate*)
QDomNotation(const QDomNotation& x)
QDomProcessingInstruction
QDomProcessingInstruction()
QDomProcessingInstruction(QDomProcessingInstructionPrivate*)
QDomProcessingInstruction(const QDomProcessingInstruction& x)
QDomText
QDomText()
QDomText(QDomTextPrivate*)
QDomText(const QDomText& x)
QDoubleSpinBox
QDoubleSpinBox(QWidget *parent = 0)
QDoubleValidator
QDoubleValidator(QObject * parent)
QDoubleValidator(QObject * parent, const char *name)
QDoubleValidator(double bottom, double top, int decimals, QObject * parent)
QDoubleValidator(double bottom, double top, int decimals, QObject * parent, const char *name)
QDrag
QDrag(QWidget *dragSource)
QDragEnterEvent
QDragEnterEvent(const QPoint &pos, Qt::DropActions actions, const QMimeData *data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)
QDragLeaveEvent
QDragLeaveEvent()
QDragMoveEvent
QDragMoveEvent(const QPoint &pos, Qt::DropActions actions, const QMimeData *data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Type type = DragMove)
QDragResponseEvent
QDragResponseEvent(bool accepted)
QDropEvent
QDropEvent(const QPoint& pos, Qt::DropActions actions, const QMimeData *data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Type type = Drop)
QDynamicPropertyChangeEvent
QDynamicPropertyChangeEvent(const QByteArray &name)
QENDIAN_H
QERRORMESSAGE_H
QEVENTLOOP_H
QEVENT_H
QEXPECT_FAIL
QEXTENSIONMANAGER_H
QErrorMessage
QErrorMessage(QWidget* parent = 0)
QEvent
QEvent(Type type)
QEventLoop
QEventLoop(QObject *parent = 0)
QEventSizeOfChecker
QExtensionFactory
QExtensionFactory(QExtensionManager *parent = 0)
QExtensionManager
QExtensionManager(QObject *parent = 0)
QFACTORYINTERFACE_H
QFAIL
QFETCH
QFETCH_GLOBAL
QFILEDIALOG_H
QFILEINFO_H
QFILESYSTEMWATCHER_H
QFILE_H
QFOCUSFRAME_H
QFONTCOMBOBOX_H
QFONTDATABASE_H
QFONTDIALOG_H
QFONTINFO_H
QFONTMETRICS_H
QFONT_H
QFRAME_H
QFSFILEENGINE_H
QFSFileEngine
QFSFileEngine()
QFSFileEngine(QFSFileEnginePrivate &dd)
QFSFileEngine(const QString &file)
QFTP_H
QFactoryInterface
QFile
QFile()
QFile(QFilePrivate &dd)
QFile(QFilePrivate &dd, QObject *parent = 0)
QFile(QObject *parent)
QFile(const QString &name)
QFile(const QString &name, QObject *parent)
QFileDialog
QFileDialog(QWidget *parent = 0, const QString &caption = QString(), const QString &directory = QString(), const QString &filter = QString())
QFileDialog(QWidget *parent, Qt::WindowFlags f)
QFileDialog(const QFileDialogArgs &args)
QFileIconProvider
QFileIconProvider()
QFileInfo
QFileInfo()
QFileInfo(const QDir &dir, const QString &file)
QFileInfo(const QFile &file)
QFileInfo(const QFileInfo &fileinfo)
QFileInfo(const QString &file)
QFileInfoList
QFileInfoListIterator
QFileOpenEvent
QFileOpenEvent(const QString &file)
QFileSystemWatcher
QFileSystemWatcher(QObject *parent = 0)
QFileSystemWatcher(const QStringList &paths, QObject *parent = 0)
QFlag
QFlag(int i)
QFlags
QFocusEvent
QFocusEvent(Type type, Qt::FocusReason reason=Qt::OtherFocusReason)
QFocusFrame
QFocusFrame(QWidget *parent=0)
QFont
QFont()
QFont(QFontPrivate *)
QFont(const QFont &)
QFont(const QFont &, QPaintDevice *pd)
QFont(const QString &family, int pointSize = -1, int weight = -1, bool italic = false)
QFontComboBox
QFontComboBox(QWidget *parent = 0)
QFontDatabase
QFontDatabase()
QFontDialog
QFontDialog(QWidget* parent=0, bool modal=false, Qt::WindowFlags f=0)
QFontInfo
QFontInfo(const QFont &)
QFontInfo(const QFontInfo &)
QFontMetrics
QFontMetrics(const QFont &)
QFontMetrics(const QFont &, QPaintDevice *pd)
QFontMetrics(const QFontMetrics &)
QFontMetricsF
QFontMetricsF(const QFont &)
QFontMetricsF(const QFont &, QPaintDevice *pd)
QFontMetricsF(const QFontMetrics &)
QFontMetricsF(const QFontMetricsF &)
QForeachContainer
QForeachContainerBase
QFormBuilder
QFormBuilder()
QFrame
QFrame(QFramePrivate &dd, QWidget* parent = 0, Qt::WindowFlags f = 0)
QFrame(QWidget* parent = 0, Qt::WindowFlags f = 0)
QFrame(QWidget* parent, const char* name, Qt::WindowFlags f = 0)
QFtp
QFtp(QObject *parent = 0)
QFtp(QObject *parent, const char *name)
QGLCOLORMAP_H
QGLColormap
QGLColormap()
QGLColormap(const QGLColormap &)
QGLColormapData
QGLContext
QGLContext(const QGLFormat& format)
QGLContext(const QGLFormat& format, QPaintDevice* device)
QGLFRAMEBUFFEROBJECT_H
QGLFormat
QGLFormat()
QGLFormat(QGL::FormatOptions options, int plane = 0)
QGLFormat(const QGLFormat &other)
QGLFramebufferObject
QGLFramebufferObject(const QSize &size, GLenum target = GL_TEXTURE_2D)
QGLFramebufferObject(int width, int height, GLenum target = GL_TEXTURE_2D)
QGLOBAL_H
QGLPIXELBUFFER_H
QGLPixelBuffer
QGLPixelBuffer(const QSize &size, const QGLFormat &format = QGLFormat::defaultFormat(), QGLWidget *shareWidget = 0)
QGLPixelBuffer(int width, int height, const QGLFormat &format = QGLFormat::defaultFormat(), QGLWidget *shareWidget = 0)
QGLWidget
QGLWidget(QGLContext *context, QWidget* parent, const char* name, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGLWidget(QGLContext *context, QWidget* parent=0, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGLWidget(QWidget* parent, const char* name, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGLWidget(QWidget* parent=0, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGLWidget(const QGLFormat& format, QWidget* parent, const char* name, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGLWidget(const QGLFormat& format, QWidget* parent=0, const QGLWidget* shareWidget = 0, Qt::WindowFlags f=0)
QGL_H
QGL_VERSION
QGL_VERSION_STR
QGRAPHICSITEMANIMATION_H
QGRAPHICSITEM_H
QGRAPHICSSCENEEVENT_H
QGRAPHICSSCENE_H
QGRAPHICSSVGITEM_H
QGRAPHICSVIEW_H
QGRIDLAYOUT_H
QGROUPBOX_H
QGenericArgument
QGenericReturnArgument
QGlobalStatic
QGradient
QGradient()
QGradientStop
QGradientStops
QGraphicsEllipseItem
QGraphicsEllipseItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsEllipseItem(const QRectF &rect, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsEllipseItem(qreal x, qreal y, qreal w, qreal h, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsItem
QGraphicsItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsItem(QGraphicsItemPrivate &dd, QGraphicsItem *parent, QGraphicsScene *scene)
QGraphicsItemAnimation
QGraphicsItemAnimation(QObject *parent = 0)
QGraphicsItemGroup
QGraphicsItemGroup(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsLineItem
QGraphicsLineItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsLineItem(const QLineF &line, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsLineItem(qreal x1, qreal y1, qreal x2, qreal y2, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPathItem
QGraphicsPathItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPathItem(const QPainterPath &path, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPixmapItem
QGraphicsPixmapItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPixmapItem(const QPixmap &pixmap, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPolygonItem
QGraphicsPolygonItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsPolygonItem(const QPolygonF &polygon, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsRectItem
QGraphicsRectItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsRectItem(const QRectF &rect, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsRectItem(qreal x, qreal y, qreal w, qreal h, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsScene
QGraphicsScene(QObject *parent = 0)
QGraphicsScene(const QRectF &sceneRect, QObject *parent = 0)
QGraphicsScene(qreal x, qreal y, qreal width, qreal height, QObject *parent = 0)
QGraphicsSceneContextMenuEvent
QGraphicsSceneContextMenuEvent(Type type = None)
QGraphicsSceneDragDropEvent
QGraphicsSceneDragDropEvent(Type type = None)
QGraphicsSceneEvent
QGraphicsSceneEvent(QGraphicsSceneEventPrivate &dd, Type type = None)
QGraphicsSceneEvent(Type type)
QGraphicsSceneHelpEvent
QGraphicsSceneHelpEvent(Type type = None)
QGraphicsSceneHoverEvent
QGraphicsSceneHoverEvent(Type type = None)
QGraphicsSceneMouseEvent
QGraphicsSceneMouseEvent(Type type = None)
QGraphicsSceneWheelEvent
QGraphicsSceneWheelEvent(Type type = None)
QGraphicsSimpleTextItem
QGraphicsSimpleTextItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsSimpleTextItem(const QString &text, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsSvgItem
QGraphicsSvgItem(QGraphicsItem *parentItem=0)
QGraphicsSvgItem(const QString &fileName, QGraphicsItem *parentItem=0)
QGraphicsTextItem
QGraphicsTextItem(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsTextItem(const QString &text, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
QGraphicsView
QGraphicsView(QGraphicsScene *scene, QWidget *parent = 0)
QGraphicsView(QWidget *parent = 0)
QGridLayout
QGridLayout()
QGridLayout(QLayout *parentLayout, int nRows =1, int nCols = 1, int spacing = -1, const char *name = 0)
QGridLayout(QWidget *parent)
QGridLayout(QWidget *parent, int nRows, int nCols = 1, int border = 0, int spacing = -1, const char *name = 0)
QGridLayout(int nRows, int nCols = 1, int spacing = -1, const char *name = 0)
QGroupBox
QGroupBox(QWidget* parent, const char* name)
QGroupBox(QWidget* parent=0)
QGroupBox(const QString &title, QWidget* parent, const char* name)
QGroupBox(const QString &title, QWidget* parent=0)
QHASH_H
QHBoxLayout
QHBoxLayout()
QHBoxLayout(QLayout *parentLayout, int spacing = -1, const char *name = 0)
QHBoxLayout(QWidget *parent)
QHBoxLayout(QWidget *parent, int border, int spacing = -1, const char *name = 0)
QHBoxLayout(int spacing, const char *name = 0)
QHEADERVIEW_H
QHOSTADDRESS_H
QHOSTINFO_H
QHTTP_H
QHash
QHashData
QHashDummyNode
QHashDummyValue
QHashNode
QHeaderView
QHeaderView(QHeaderViewPrivate &dd, Qt::Orientation orientation, QWidget *parent = 0)
QHeaderView(Qt::Orientation orientation, QWidget *parent = 0)
QHelpEvent
QHelpEvent(Type type, const QPoint &pos, const QPoint &globalPos)
QHideEvent
QHideEvent()
QHostAddress
QHostAddress()
QHostAddress(SpecialAddress address)
QHostAddress(const QHostAddress &copy)
QHostAddress(const QString &address)
QHostAddress(const Q_IPV6ADDR &ip6Addr)
QHostAddress(const sockaddr *sockaddr)
QHostAddress(quint32 ip4Addr)
QHostAddress(quint8 *ip6Addr)
QHostInfo
QHostInfo(const QHostInfo &d)
QHostInfo(int lookupId = -1)
QHoverEvent
QHoverEvent(Type type, const QPoint &pos, const QPoint &oldPos)
QHttp
QHttp(QObject *parent = 0)
QHttp(const QString &hostname, quint16 port = 80, QObject *parent = 0)
QHttpHeader
QHttpHeader()
QHttpHeader(QHttpHeaderPrivate &dd, const QHttpHeader &header)
QHttpHeader(QHttpHeaderPrivate &dd, const QString &str = QString())
QHttpHeader(const QHttpHeader &header)
QHttpHeader(const QString &str)
QHttpRequestHeader
QHttpRequestHeader()
QHttpRequestHeader(const QHttpRequestHeader &header)
QHttpRequestHeader(const QString &method, const QString &path, int majorVer = 1, int minorVer = 1)
QHttpRequestHeader(const QString &str)
QHttpResponseHeader
QHttpResponseHeader()
QHttpResponseHeader(const QHttpResponseHeader &header)
QHttpResponseHeader(const QString &str)
QHttpResponseHeader(int code, const QString &text = QString(), int majorVer = 1, int minorVer = 1)
QIBaseDriver
QIBaseDriver(QObject *parent = 0)
QIBaseDriver(void *connection, QObject *parent = 0)
QIBaseResult
QIBaseResult(const QIBaseDriver* db)
QICONENGINEPLUGIN_H
QICONENGINE_H
QICON_H
QIMAGEIOHANDLER_H
QIMAGEREADER_H
QIMAGEWRITER_H
QIMAGE_H
QINPUTCONTEXTFACTORY_H
QINPUTCONTEXTPLUGIN_H
QINPUTCONTEXT_H
QINPUTDIALOG_H
QIODEVICE_H
QIODevice
QIODevice()
QIODevice(QIODevicePrivate &dd)
QIODevice(QIODevicePrivate &dd, QObject *parent = 0)
QIODevice(QObject *parent)
QIPv6Address
QITEMDELEGATE_H
QITEMEDITORFACTORY_H
QITEMSELECTIONMODEL_H
QITERATOR_H
QIcon
QIcon()
QIcon(QIconEngine *engine)
QIcon(const QIcon &other)
QIcon(const QPixmap &pixmap)
QIcon(const QString &fileName) // file or resource name
QIconDragEvent
QIconDragEvent()
QIconEngine
QIconEngineFactoryInterface
QIconEngineFactoryInterface_iid
QIconEnginePlugin
QIconEnginePlugin(QObject *parent = 0)
QIconSet
QImage
QImage()
QImage(const QImage &)
QImage(const QSize &size, Format format)
QImage(const QSize&, int depth, int numColors=0, Endian bitOrder=IgnoreEndian)
QImage(const QString &fileName, const char *format = 0)
QImage(const char * const xpm[])
QImage(const char *fileName, const char *format = 0)
QImage(const uchar *data, int width, int height, Format format)
QImage(int width, int height, Format format)
QImage(int width, int height, int depth, int numColors=0, Endian bitOrder=IgnoreEndian)
QImage(uchar *data, int w, int h, int depth, const QRgb *colortable, int numColors, Endian bitOrder)
QImage(uchar *data, int w, int h, int depth, int pbl, const QRgb *colortable, int numColors, Endian bitOrder)
QImage(uchar *data, int width, int height, Format format)
QImageIOHandler
QImageIOHandler()
QImageIOHandler(QImageIOHandlerPrivate &dd)
QImageIOHandlerFactoryInterface
QImageIOHandlerFactoryInterface_iid
QImageIOPlugin
QImageIOPlugin(QObject *parent = 0)
QImageReader
QImageReader()
QImageReader(QIODevice *device, const QByteArray &format = QByteArray())
QImageReader(const QString &fileName, const QByteArray &format = QByteArray())
QImageTextKeyLang
QImageWriter
QImageWriter()
QImageWriter(QIODevice *device, const QByteArray &format)
QImageWriter(const QString &fileName, const QByteArray &format = QByteArray())
QInputContext
QInputContext(QObject* parent = 0)
QInputContext(const QInputContext & )
QInputContextFactory
QInputContextFactoryInterface
QInputContextFactoryInterface_iid
QInputContextPlugin
QInputContextPlugin(QObject *parent = 0)
QInputDialog
QInputDialog(const QString &label, QWidget* parent, Type type, Qt::WindowFlags f)
QInputEvent
QInputEvent(Type type, Qt::KeyboardModifiers modifiers = Qt::NoModifier)
QInputMethodEvent
QInputMethodEvent()
QInputMethodEvent(const QInputMethodEvent &other)
QInputMethodEvent(const QString &preeditText, const QList<Attribute> &attributes)
QIntForSize
QIntForType
QIntValidator
QIntValidator(QObject * parent)
QIntValidator(QObject * parent, const char *name)
QIntValidator(int bottom, int top, QObject * parent)
QIntValidator(int bottom, int top, QObject * parent, const char *name)
QInternal
QItemDelegate
QItemDelegate(QObject *parent = 0)
QItemEditorCreator
QItemEditorCreator(const QByteArray &valuePropertyName)
QItemEditorCreatorBase
QItemEditorFactory
QItemSelection
QItemSelection(const QModelIndex &topLeft, const QModelIndex &bottomRight)
QItemSelectionModel
QItemSelectionModel(QAbstractItemModel *model)
QItemSelectionModel(QAbstractItemModel *model, QObject *parent)
QItemSelectionModel(QItemSelectionModelPrivate &dd, QAbstractItemModel *model)
QItemSelectionRange
QItemSelectionRange(const QModelIndex &topLeft, const QModelIndex &bottomRight)
QKEYSEQUENCE_H
QKeyEvent
QKeyEvent(Type type, int key, Qt::KeyboardModifiers modifiers, const QString& text = QString(), bool autorep = false, ushort count = 1)
QKeySequence
QKeySequence()
QKeySequence(StandardKey key)
QKeySequence(const QKeySequence &ks)
QKeySequence(const QString &key)
QKeySequence(int k1, int k2 = 0, int k3 = 0, int k4 = 0)
QLABEL_H
QLAYOUTITEM_H
QLAYOUT_H
QLCDNUMBER_H
QLCDNumber
QLCDNumber(QWidget* parent = 0)
QLCDNumber(QWidget* parent, const char* name)
QLCDNumber(uint numDigits, QWidget* parent = 0)
QLCDNumber(uint numDigits, QWidget* parent, const char* name)
QLIBRARYINFO_H
QLIBRARY_H
QLINEEDIT_H
QLINE_H
QLINKEDLIST_H
QLISTVIEW_H
QLISTWIDGET_H
QLIST_H
QLOCALE_H
QLabel
QLabel(QWidget *buddy, const QString &, QWidget *parent=0, const char* name=0, Qt::WindowFlags f=0)
QLabel(QWidget *parent, const char* name, Qt::WindowFlags f=0)
QLabel(QWidget *parent=0, Qt::WindowFlags f=0)
QLabel(const QString &text, QWidget *parent, const char* name, Qt::WindowFlags f=0)
QLabel(const QString &text, QWidget *parent=0, Qt::WindowFlags f=0)
QLatin1Char
QLatin1String
QLayout
QLayout()
QLayout(QLayout *parentLayout, int spacing = -1, const char *name = 0)
QLayout(QLayoutPrivate &d, QLayout*, QWidget*)
QLayout(QWidget *parent)
QLayout(QWidget *parent, int margin, int spacing = -1, const char *name = 0)
QLayout(int spacing, const char *name = 0)
QLayoutItem
QLayoutItem(Qt::Alignment alignment = 0)
QLayoutIterator
QLibrary
QLibrary(QObject *parent = 0)
QLibrary(const QString& fileName, QObject *parent = 0)
QLibrary(const QString& fileName, int verNum, QObject *parent = 0)
QLibraryInfo
QLibraryInfo()
QLine
QLine()
QLine(const QPoint &pt1, const QPoint &pt2)
QLine(int x1, int y1, int x2, int y2)
QLineEdit
QLineEdit(QWidget* parent, const char* name)
QLineEdit(QWidget* parent=0)
QLineEdit(const QString &, QWidget* parent, const char* name)
QLineEdit(const QString &, QWidget* parent=0)
QLineEdit(const QString &, const QString &, QWidget* parent=0, const char* name=0)
QLineF
QLineF()
QLineF(const QPointF &pt1, const QPointF &pt2)
QLineF(qreal x1, qreal y1, qreal x2, qreal y2)
QLinearGradient
QLinearGradient()
QLinearGradient(const QPointF &start, const QPointF &finalStop)
QLinearGradient(qreal xStart, qreal yStart, qreal xFinalStop, qreal yFinalStop)
QLinkedList
QLinkedListData
QLinkedListNode
QList
QListData
QListView
QListView(QListViewPrivate &, QWidget *parent = 0)
QListView(QWidget *parent = 0)
QListWidget
QListWidget(QWidget *parent = 0)
QListWidgetItem
QListWidgetItem(QListWidget *view = 0, int type = Type)
QListWidgetItem(const QIcon &icon, const QString &text, QListWidget *view = 0, int type = Type)
QListWidgetItem(const QListWidgetItem &other)
QListWidgetItem(const QString &text, QListWidget *view = 0, int type = Type)
QLocale
QLocale()
QLocale(Language language, Country country = AnyCountry)
QLocale(const QLocale &other)
QLocale(const QString &name)
QMAC_QMENUBAR_NO_EVENT
QMAP_H
QMATRIX_H
QMAX
QMENUBAR_H
QMENUDATA_H
QMENU_H
QMESSAGEBOX_H
QMETAOBJECT_H
QMETATYPE_H
QMETHOD_CODE
QMIMEDATA_H
QMIME_H
QMIN
QMOTIFSTYLE_H
QMOVIE_H
QMUTEX_H
QMYSQLDriver
QMYSQLDriver(MYSQL *con, QObject * parent=0)
QMYSQLDriver(QObject *parent=0)
QMYSQLResult
QMYSQLResult(const QMYSQLDriver* db)
QMacMime
QMacMimeType
QMacPasteboardMime
QMacPasteboardMime(char)
QMacPasteboardMimeType
QMainWindow
QMainWindow(QWidget *parent = 0, Qt::WindowFlags flags = 0)
QMainWindow(QWidget *parent, const char *name, Qt::WindowFlags flags = 0)
QMap
QMap(const typename std::map<Key, T> &other)
QMapData
QMatrix
QMatrix()
QMatrix(const QMatrix &matrix)
QMatrix(qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy)
QMenu
QMenu(QWidget *parent = 0)
QMenu(const QString &title, QWidget *parent = 0)
QMenuBar
QMenuBar(QWidget *parent = 0)
QMenuBar(QWidget *parent, const char *name)
QMenuItem
QMenuItem()
QMenubarUpdatedEvent
QMenubarUpdatedEvent(QMenuBar * const menBar)
QMessageBox
QMessageBox(Icon icon, const QString &title, const QString &text, StandardButtons buttons = NoButton, QWidget *parent = 0, Qt::WindowFlags f = Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint)
QMessageBox(QWidget *parent = 0)
QMessageBox(QWidget *parent, const char *name)
QMessageBox(const QString &title, const QString &text, Icon icon, int button0, int button1, int button2, QWidget *parent = 0, Qt::WindowFlags f = Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint)
QMessageBox(const QString &title, const QString &text, Icon icon, int button0, int button1, int button2, QWidget *parent, const char *name, bool modal, Qt::WindowFlags f = Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint)
QMetaClassInfo
QMetaEnum
QMetaMethod
QMetaObject
QMetaProperty
QMetaProperty()
QMetaType
QMetaTypeId
QMetaTypeId2
QMimeData
QMimeData()
QMimeSource
QModelIndex
QModelIndex(int row, int column, void *ptr, const QAbstractItemModel *model)
QModelIndexList
QMotifStyle
QMotifStyle(QMotifStylePrivate &dd, bool useHighlightCols = false)
QMotifStyle(bool useHighlightCols=false)
QMouseEvent
QMouseEvent(Type type, const QPoint &pos, Qt::ButtonState button, int state)
QMouseEvent(Type type, const QPoint &pos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)
QMouseEvent(Type type, const QPoint &pos, const QPoint &globalPos, Qt::ButtonState button, int state)
QMouseEvent(Type type, const QPoint &pos, const QPoint &globalPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)
QMoveEvent
QMoveEvent(const QPoint &pos, const QPoint &oldPos)
QMovie
QMovie(QIODevice *device, const QByteArray &format = QByteArray(), QObject *parent = 0)
QMovie(QObject *parent = 0)
QMovie(const QString &fileName, const QByteArray &format = QByteArray(), QObject *parent = 0)
QMultiHash
QMultiMap
QMutableSetIterator
QMutableStringListIterator
QMutex
QMutex(RecursionMode mode = NonRecursive)
QMutexLocker
QNAMESPACE_H
QNETWORKINTERFACE_H
QNETWORKPROXY_H
QNetworkAddressEntry
QNetworkAddressEntry()
QNetworkAddressEntry(const QNetworkAddressEntry &other)
QNetworkInterface
QNetworkInterface()
QNetworkInterface(const QNetworkInterface &other)
QNetworkProxy
QNetworkProxy()
QNetworkProxy(ProxyType type, const QString &hostName = QString(), quint16 port = 0, const QString &user = QString(), const QString &password = QString())
QNetworkProxy(const QNetworkProxy &other)
QNoImplicitBoolCast
QOBJECTCLEANUPHANDLER_H
QOBJECTDEFS_H
QOBJECT_H
QODBCDriver
QODBCDriver(QObject *parent=0)
QODBCDriver(SQLHANDLE env, SQLHANDLE con, QObject * parent=0)
QODBCResult
QODBCResult(const QODBCDriver * db, QODBCDriverPrivate* p)
QObject
QObject(QObject *parent, const char *name)
QObject(QObject *parent=0)
QObject(QObjectPrivate &dd, QObject *parent = 0)
QObjectCleanupHandler
QObjectCleanupHandler()
QObjectData
QObjectList
QObjectUserData
QPAGESETUPDIALOG_H
QPAINTDEVICE_H
QPAINTENGINE_H
QPAINTERPATH_H
QPAINTER_H
QPAIR_H
QPALETTE_H
QPEN_H
QPICTUREFORMATPLUGIN_H
QPICTURE_H
QPIXMAPCACHE_H
QPIXMAP_H
QPLASTIQUESTYLE_H
QPLUGINLOADER_H
QPLUGIN_DEBUG_STR
QPLUGIN_H
QPOINTER_H
QPOINT_H
QPOLYGON_H
QPRINTDIALOG_H
QPRINTENGINE_H
QPRINTER_H
QPROCESS_H
QPROGRESSBAR_H
QPROGRESSDIALOG_H
QPROXYMODEL_H
QPSQLDriver
QPSQLDriver(PGconn *conn, QObject *parent=0)
QPSQLDriver(QObject *parent=0)
QPSQLResult
QPSQLResult(const QPSQLDriver* db, const QPSQLDriverPrivate* p)
QPUSHBUTTON_H
QPageSetupDialog
QPageSetupDialog(QPrinter *printer, QWidget *parent = 0)
QPaintDevice
QPaintDevice()
QPaintEngine
QPaintEngine(PaintEngineFeatures features=0)
QPaintEngine(QPaintEnginePrivate &data, PaintEngineFeatures devcaps=0)
QPaintEngineState
QPaintEvent
QPaintEvent(const QRect &paintRect)
QPaintEvent(const QRegion &paintRegion, const QRect &paintRect)
QPaintEvent(const QRegion& paintRegion)
QPainter
QPainter()
QPainter(QPaintDevice *)
QPainterPath
QPainterPath()
QPainterPath(const QPainterPath &other)
QPainterPath(const QPointF &startPoint)
QPainterPathPrivate
QPainterPathStroker
QPainterPathStroker()
QPair
QPalette
QPalette()
QPalette(Qt::GlobalColor button)
QPalette(const QBrush &windowText, const QBrush &button, const QBrush &light, const QBrush &dark, const QBrush &mid, const QBrush &text, const QBrush &bright_text, const QBrush &base, const QBrush &window)
QPalette(const QColor &button)
QPalette(const QColor &button, const QColor &window)
QPalette(const QColor &windowText, const QColor &window, const QColor &light, const QColor &dark, const QColor &mid, const QColor &text, const QColor &base)
QPalette(const QColorGroup &active, const QColorGroup &disabled, const QColorGroup &inactive)
QPalette(const QPalette &palette)
QPen
QPen()
QPen(Qt::PenStyle)
QPen(const QBrush &brush, qreal width, Qt::PenStyle s = Qt::SolidLine, Qt::PenCapStyle c = Qt::SquareCap, Qt::PenJoinStyle j = Qt::BevelJoin)
QPen(const QColor &color)
QPen(const QPen &pen)
QPersistentModelIndex
QPersistentModelIndex()
QPersistentModelIndex(const QModelIndex &index)
QPersistentModelIndex(const QPersistentModelIndex &other)
QPicture
QPicture(QPicturePrivate &data)
QPicture(const QPicture &)
QPicture(int formatVersion = -1)
QPictureFormatInterface
QPictureFormatInterface_iid
QPictureFormatPlugin
QPictureFormatPlugin(QObject *parent = 0)
QPictureIO
QPictureIO()
QPictureIO(QIODevice *ioDevice, const char *format)
QPictureIO(const QString &fileName, const char *format)
QPixmap
QPixmap()
QPixmap(const QImage& image)
QPixmap(const QPixmap &)
QPixmap(const QSize &)
QPixmap(const QSize &s, Type)
QPixmap(const QString& fileName, const char *format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor)
QPixmap(const QString& fileName, const char *format, ColorMode mode)
QPixmap(const char * const xpm[])
QPixmap(int w, int h)
QPixmapCache
QPlastiqueStyle
QPlastiqueStyle()
QPluginLoader
QPluginLoader(QObject *parent = 0)
QPluginLoader(const QString &fileName, QObject *parent = 0)
QPoint
QPoint()
QPoint(int xpos, int ypos)
QPointF
QPointF()
QPointF(const QPoint &p)
QPointF(qreal xpos, qreal ypos)
QPointer
QPolygon
QPolygon(const QRect &r, bool closed=false)
QPolygon(int nPoints, const int *points)
QPolygon(int size)
QPolygonF
QPolygonF(const QPolygon &a)
QPolygonF(const QRectF &r)
QPolygonF(int size)
QPrintDialog
QPrintDialog(QPrinter *printer, QWidget *parent = 0)
QPrintEngine
QPrinter
QPrinter(PrinterMode mode = ScreenResolution)
QProcess
QProcess(QObject *parent = 0)
QProgressBar
QProgressBar(QWidget *parent = 0)
QProgressDialog
QProgressDialog(QWidget *parent = 0, Qt::WindowFlags f = 0)
QProgressDialog(const QString &labelText, const QString &cancelButtonText, int minimum, int maximum, QWidget *parent = 0, Qt::WindowFlags f = 0)
QProxyModel
QProxyModel(QObject *parent = 0)
QProxyModel(QProxyModelPrivate &, QObject *parent = 0)
QPushButton
QPushButton(QWidget *parent, const char* name)
QPushButton(QWidget *parent=0)
QPushButton(const QIcon& icon, const QString &text, QWidget *parent, const char* name)
QPushButton(const QIcon& icon, const QString &text, QWidget *parent=0)
QPushButton(const QString &text, QWidget *parent, const char* name)
QPushButton(const QString &text, QWidget *parent=0)
QQUEUE_H
QQueue
QRADIOBUTTON_H
QREADWRITELOCK_H
QRECT_H
QREGEXP_H
QREGION_H
QRESOURCE_H
QRGB_H
QRUBBERBAND_H
QRadialGradient
QRadialGradient()
QRadialGradient(const QPointF &center, qreal radius)
QRadialGradient(const QPointF &center, qreal radius, const QPointF &focalPoint)
QRadialGradient(qreal cx, qreal cy, qreal radius)
QRadialGradient(qreal cx, qreal cy, qreal radius, qreal fx, qreal fy)
QRadioButton
QRadioButton(QWidget *parent, const char* name)
QRadioButton(QWidget *parent=0)
QRadioButton(const QString &text, QWidget *parent, const char* name)
QRadioButton(const QString &text, QWidget *parent=0)
QReadLocker
QReadLocker(QReadWriteLock *readWriteLock)
QReadWriteLock
QReadWriteLock()
QRect
QRect(const QPoint &topleft, const QPoint &bottomright)
QRect(const QPoint &topleft, const QSize &size)
QRect(int left, int top, int width, int height)
QRectF
QRectF(const QPointF &topleft, const QSizeF &size)
QRectF(const QRect &rect)
QRectF(qreal left, qreal top, qreal width, qreal height)
QRegExp
QRegExp()
QRegExp(const QRegExp &rx)
QRegExp(const QString &pattern, Qt::CaseSensitivity cs = Qt::CaseSensitive, PatternSyntax syntax = RegExp)
QRegExpValidator
QRegExpValidator(QObject *parent)
QRegExpValidator(QObject *parent, const char *name)
QRegExpValidator(const QRegExp& rx, QObject *parent)
QRegExpValidator(const QRegExp& rx, QObject *parent, const char *name)
QRegion
QRegion()
QRegion(const QBitmap &bitmap)
QRegion(const QPolygon &pa, Qt::FillRule fillRule = Qt::OddEvenFill)
QRegion(const QPolygon &pa, bool winding)
QRegion(const QRect &r, RegionType t = Rectangle)
QRegion(const QRegion &region)
QRegion(int x, int y, int w, int h, RegionType t = Rectangle)
QRegionData
QResizeEvent
QResizeEvent(const QSize &size, const QSize &oldSize)
QResource
QResource(const QString &file=QString(), const QLocale &locale=QLocale())
QReturnArgument
QRgb
QRubberBand
QRubberBand(Shape, QWidget * =0)
QSCROLLAREA_H
QSCROLLBAR_H
QSEMAPHORE_H
QSESSIONMANAGER_H
QSETTINGS_H
QSET_H
QSHAREDDATA_H
QSHORTCUT_H
QSIGNALMAPPER_H
QSIGNALSPY_H
QSIGNAL_CODE
QSIZEGRIP_H
QSIZEPOLICY_H
QSIZE_H
QSKIP
QSLIDER_H
QSLOT_CODE
QSOCKETNOTIFIER_H
QSORTFILTERPROXYMODEL_H
QSOUND_H
QSPINBOX_H
QSPLASHSCREEN_H
QSPLITTER_H
QSQLDATABASE_H
QSQLDRIVERPLUGIN_H
QSQLDRIVER_H
QSQLERROR_H
QSQLFIELD_H
QSQLINDEX_H
QSQLQUERYMODEL_H
QSQLQUERY_H
QSQLRECORD_H
QSQLRELATIONALDELEGATE_H
QSQLRELATIONALTABLEMODEL_H
QSQLRESULT_H
QSQLTABLEMODEL_H
QSQL_H
QSQL_IBASE_H
QSQL_MYSQL_H
QSQL_ODBC_H
QSQL_PSQL_H
QSQL_SQLITE2_H
QSQL_SQLITE_H
QSQLite2Driver
QSQLite2Driver(QObject *parent = 0)
QSQLite2Driver(sqlite *connection, QObject *parent = 0)
QSQLite2Result
QSQLite2Result(const QSQLite2Driver* db)
QSQLiteDriver
QSQLiteDriver(QObject *parent = 0)
QSQLiteDriver(sqlite3 *connection, QObject *parent = 0)
QSQLiteResult
QSQLiteResult(const QSQLiteDriver* db)
QSTACKEDLAYOUT_H
QSTACKEDWIDGET_H
QSTACK_H
QSTANDARDITEMMODEL_H
QSTATUSBAR_H
QSTRINGLISTMODEL_H
QSTRINGLIST_H
QSTRINGMATCHER_H
QSTRING_H
QSTYLEFACTORY_H
QSTYLEOPTION_H
QSTYLEPAINTER_H
QSTYLEPLUGIN_H
QSTYLE_H
QSVGRENDERER_H
QSVGWIDGET_H
QSYNTAXHIGHLIGHTER_H
QSYSTEMTRAYICON_H
QScrollArea
QScrollArea(QScrollAreaPrivate &dd, QWidget *parent = 0)
QScrollArea(QWidget* parent=0)
QScrollBar
QScrollBar(QWidget *parent, const char* name)
QScrollBar(QWidget *parent=0)
QScrollBar(Qt::Orientation, QWidget *parent, const char* name)
QScrollBar(Qt::Orientation, QWidget *parent=0)
QScrollBar(int minValue, int maxValue, int lineStep, int pageStep, int value, Qt::Orientation, QWidget *parent=0, const char* name = 0)
QSemaphore
QSemaphore(int n = 0)
QSessionManager
QSessionManager(QApplication *app, QString &id, QString &key)
QSet
QSettings
QSettings(Format format, Scope scope, const QString &organization, const QString &application = QString())
QSettings(Format format, Scope scope, const QString &organization, const QString &application = QString(), QObject *parent = 0)
QSettings(QObject *parent = 0)
QSettings(Scope scope, const QString &organization, const QString &application = QString())
QSettings(Scope scope, const QString &organization, const QString &application = QString(), QObject *parent = 0)
QSettings(const QString &fileName, Format format)
QSettings(const QString &fileName, Format format, QObject *parent = 0)
QSettings(const QString &organization, const QString &application = QString())
QSettings(const QString &organization, const QString &application = QString(), QObject *parent = 0)
QSharedData
QSharedDataPointer
QSharedDataPointer(T *data)
QShortcut
QShortcut(QWidget *parent)
QShortcut(const QKeySequence& key, QWidget *parent, const char *member = 0, const char *ambiguousMember = 0, Qt::ShortcutContext context = Qt::WindowShortcut)
QShortcutEvent
QShortcutEvent(const QKeySequence &key, int id, bool ambiguous = false)
QShowEvent
QShowEvent()
QSignalMapper
QSignalMapper(QObject *parent = 0)
QSignalMapper(QObject *parent, const char *name)
QSignalSpy
QSize
QSize()
QSize(int w, int h)
QSizeF
QSizeF()
QSizeF(const QSize &sz)
QSizeF(qreal w, qreal h)
QSizeGrip
QSizeGrip(QWidget *parent)
QSizeGrip(QWidget *parent, const char *name)
QSizePolicy
QSlider
QSlider(QWidget *parent = 0)
QSlider(QWidget *parent, const char *name)
QSlider(Qt::Orientation orientation, QWidget *parent = 0)
QSlider(Qt::Orientation, QWidget *parent, const char *name)
QSlider(int minValue, int maxValue, int pageStep, int value, Qt::Orientation orientation, QWidget *parent = 0, const char *name = 0)
QSocketNotifier
QSocketNotifier(int socket, Type, QObject *parent = 0)
QSocketNotifier(int socket, Type, QObject *parent, const char *name)
QSortFilterProxyModel
QSortFilterProxyModel(QObject *parent = 0)
QSound
QSound(const QString& filename, QObject* parent = 0)
QSound(const QString& filename, QObject* parent, const char* name)
QSpacerItem
QSpinBox
QSpinBox(QWidget *parent = 0)
QSpinBox(QWidget *parent, const char *name)
QSpinBox(int min, int max, int step, QWidget *parent, const char *name = 0)
QSplashScreen
QSplashScreen(QWidget *parent, const QPixmap &pixmap = QPixmap(), Qt::WindowFlags f = 0)
QSplashScreen(const QPixmap &pixmap = QPixmap(), Qt::WindowFlags f = 0)
QSplitter
QSplitter(QWidget* parent = 0)
QSplitter(QWidget* parent, const char* name)
QSplitter(Qt::Orientation, QWidget* parent = 0)
QSplitter(Qt::Orientation, QWidget* parent, const char* name)
QSplitterHandle
QSplitterHandle(Qt::Orientation o, QSplitter *parent)
QSpontaneKeyEvent
QSqlDatabase
QSqlDatabase()
QSqlDatabase(QSqlDriver* driver)
QSqlDatabase(const QSqlDatabase &other)
QSqlDatabase(const QString& type)
QSqlDriver
QSqlDriver(QObject *parent=0)
QSqlDriverCreator
QSqlDriverCreatorBase
QSqlDriverFactoryInterface
QSqlDriverFactoryInterface_iid
QSqlDriverPlugin
QSqlDriverPlugin(QObject *parent = 0)
QSqlError
QSqlError(const QSqlError& other)
QSqlError(const QString& driverText = QString(), const QString& databaseText = QString(), ErrorType type = NoError, int number = -1)
QSqlField
QSqlField(const QSqlField& other)
QSqlField(const QString& fieldName = QString(), QVariant::Type type = QVariant::Invalid)
QSqlIndex
QSqlIndex(const QSqlIndex &other)
QSqlIndex(const QString &cursorName = QString(), const QString &name = QString())
QSqlQuery
QSqlQuery(QSqlDatabase db)
QSqlQuery(QSqlResult *r)
QSqlQuery(const QSqlQuery& other)
QSqlQuery(const QString& query = QString(), QSqlDatabase db = QSqlDatabase())
QSqlQueryModel
QSqlQueryModel(QObject *parent = 0)
QSqlQueryModel(QSqlQueryModelPrivate &dd, QObject *parent = 0)
QSqlRecord
QSqlRecord()
QSqlRecord(const QSqlRecord& other)
QSqlRelation
QSqlRelationalDelegate
QSqlRelationalTableModel
QSqlRelationalTableModel(QObject *parent = 0, QSqlDatabase db = QSqlDatabase())
QSqlResult
QSqlResult(const QSqlDriver * db)
QSqlTableModel
QSqlTableModel(QObject *parent = 0, QSqlDatabase db = QSqlDatabase())
QSqlTableModel(QSqlTableModelPrivate &dd, QObject *parent = 0, QSqlDatabase db = QSqlDatabase())
QStack
QStackedLayout
QStackedLayout()
QStackedLayout(QLayout *parentLayout)
QStackedLayout(QWidget *parent)
QStackedWidget
QStackedWidget(QWidget *parent=0)
QStandardItem
QStandardItem()
QStandardItem(QStandardItemPrivate &dd)
QStandardItem(const QIcon &icon, const QString &text)
QStandardItem(const QStandardItem &other)
QStandardItem(const QString &text)
QStandardItem(int rows, int columns = 1)
QStandardItemEditorCreator
QStandardItemModel
QStandardItemModel(QObject *parent = 0)
QStandardItemModel(QStandardItemModelPrivate &dd, QObject *parent = 0)
QStandardItemModel(int rows, int columns, QObject *parent = 0)
QStatusBar
QStatusBar(QWidget* parent, const char* name)
QStatusBar(QWidget* parent=0)
QStatusTipEvent
QStatusTipEvent(const QString &tip)
QStdWString
QString
QString()
QString(QChar c)
QString(const QByteArray &a)
QString(const QChar *unicode, int size)
QString(const QLatin1String &latin1)
QString(const QString &)
QString(const char *ch)
QString(int size, QChar c)
QStringList
QStringListIterator
QStringListModel
QStringListModel(QObject *parent = 0)
QStringListModel(const QStringList &strings, QObject *parent = 0)
QStringList_contains(const QStringList *that, const QString &str, Qt::CaseSensitivity cs)
QStringList_filter(const QStringList *that, const QRegExp &re)
QStringList_filter(const QStringList *that, const QString &str, Qt::CaseSensitivity cs)
QStringList_indexOf(const QStringList *that, const QRegExp &rx, int from)
QStringList_join(const QStringList *that, const QString &sep)
QStringList_lastIndexOf(const QStringList *that, const QRegExp &rx, int from)
QStringList_replaceInStrings(QStringList *that, const QRegExp &rx, const QString &after)
QStringList_replaceInStrings(QStringList *that, const QString &before, const QString &after, Qt::CaseSensitivity cs)
QStringList_sort(QStringList *that)
QStringMatcher
QStringMatcher()
QStringMatcher(const QString &pattern, Qt::CaseSensitivity cs = Qt::CaseSensitive)
QStringMatcher(const QStringMatcher &other)
QStyle
QStyle()
QStyle(QStylePrivate &dd)
QStyleFactory
QStyleFactoryInterface
QStyleFactoryInterface_iid
QStyleHintReturn
QStyleHintReturn(int version = QStyleOption::Version, int type = SH_Default)
QStyleHintReturnMask
QStyleHintReturnMask()
QStyleOption
QStyleOption(const QStyleOption &other)
QStyleOption(int version = QStyleOption::Version, int type = SO_Default)
QStyleOptionButton
QStyleOptionButton()
QStyleOptionButton(int version)
QStyleOptionComboBox
QStyleOptionComboBox()
QStyleOptionComboBox(int version)
QStyleOptionComplex
QStyleOptionComplex(int version = QStyleOptionComplex::Version, int type = SO_Complex)
QStyleOptionDockWidget
QStyleOptionDockWidget()
QStyleOptionDockWidget(int version)
QStyleOptionFocusRect
QStyleOptionFocusRect()
QStyleOptionFocusRect(int version)
QStyleOptionFrame
QStyleOptionFrame()
QStyleOptionFrame(int version)
QStyleOptionFrameV2
QStyleOptionFrameV2()
QStyleOptionFrameV2(const QStyleOptionFrame &other)
QStyleOptionFrameV2(int version)
QStyleOptionGraphicsItem
QStyleOptionGraphicsItem()
QStyleOptionGraphicsItem(int version)
QStyleOptionGroupBox
QStyleOptionGroupBox()
QStyleOptionGroupBox(int version)
QStyleOptionHeader
QStyleOptionHeader()
QStyleOptionHeader(int version)
QStyleOptionMenuItem
QStyleOptionMenuItem()
QStyleOptionMenuItem(int version)
QStyleOptionProgressBar
QStyleOptionProgressBar()
QStyleOptionProgressBar(int version)
QStyleOptionProgressBarV2
QStyleOptionProgressBarV2()
QStyleOptionProgressBarV2(const QStyleOptionProgressBar &other)
QStyleOptionProgressBarV2(const QStyleOptionProgressBarV2 &other)
QStyleOptionProgressBarV2(int version)
QStyleOptionQ3DockWindow
QStyleOptionQ3DockWindow()
QStyleOptionQ3DockWindow(int version)
QStyleOptionQ3ListView
QStyleOptionQ3ListView()
QStyleOptionQ3ListView(int version)
QStyleOptionQ3ListViewItem
QStyleOptionQ3ListViewItem()
QStyleOptionQ3ListViewItem(int version)
QStyleOptionRubberBand
QStyleOptionRubberBand()
QStyleOptionRubberBand(int version)
QStyleOptionSizeGrip
QStyleOptionSizeGrip()
QStyleOptionSizeGrip(int version)
QStyleOptionSlider
QStyleOptionSlider()
QStyleOptionSlider(int version)
QStyleOptionSpinBox
QStyleOptionSpinBox()
QStyleOptionSpinBox(int version)
QStyleOptionTab
QStyleOptionTab()
QStyleOptionTab(int version)
QStyleOptionTabBarBase
QStyleOptionTabBarBase()
QStyleOptionTabBarBase(int version)
QStyleOptionTabV2
QStyleOptionTabV2()
QStyleOptionTabV2(const QStyleOptionTab &other)
QStyleOptionTabV2(int version)
QStyleOptionTabWidgetFrame
QStyleOptionTabWidgetFrame()
QStyleOptionTabWidgetFrame(int version)
QStyleOptionTitleBar
QStyleOptionTitleBar()
QStyleOptionTitleBar(int version)
QStyleOptionToolBar
QStyleOptionToolBar()
QStyleOptionToolBar(int version)
QStyleOptionToolBox
QStyleOptionToolBox()
QStyleOptionToolBox(int version)
QStyleOptionToolButton
QStyleOptionToolButton()
QStyleOptionToolButton(int version)
QStyleOptionViewItem
QStyleOptionViewItem()
QStyleOptionViewItem(int version)
QStyleOptionViewItemV2
QStyleOptionViewItemV2()
QStyleOptionViewItemV2(const QStyleOptionViewItem &other)
QStyleOptionViewItemV2(int version)
QStylePainter
QStylePlugin
QStylePlugin(QObject *parent = 0)
QSvgRenderer
QSvgRenderer(QObject *parent=0)
QSvgRenderer(const QByteArray &contents, QObject *parent=0)
QSvgRenderer(const QString &filename, QObject *parent=0)
QSvgWidget
QSvgWidget(QWidget *parent=0)
QSvgWidget(const QString &file, QWidget *parent=0)
QSyntaxHighlighter
QSyntaxHighlighter(QObject *parent)
QSyntaxHighlighter(QTextDocument *parent)
QSyntaxHighlighter(QTextEdit *parent)
QSysInfo
QSystemLocale
QSystemLocale()
QSystemTrayIcon
QSystemTrayIcon(QObject *parent = 0)
QSystemTrayIcon(const QIcon &icon, QObject *parent = 0)
QT3_SUPPORT
QT3_SUPPORT_CONSTRUCTOR
QT3_SUPPORT_VARIABLE
QT3_SUPPORT_WARNINGS
QTABBAR_H
QTABLEVIEW_H
QTABLEWIDGET_H
QTABWIDGET_H
QTCPSERVER_H
QTCPSOCKET_H
QTEMPORARYFILE_H
QTEST
QTESTACCESSIBLE_H
QTESTASSERT_H
QTESTCASE_H
QTESTDATA_H
QTESTEVENTLOOP_H
QTESTEVENT_H
QTESTKEYBOARD_H
QTESTMOUSE_H
QTESTSPONTANEEVENT_H
QTESTSYSTEM_H
QTEST_ACCESSIBILITY
QTEST_APPLESS_MAIN
QTEST_ASSERT
QTEST_ASSERT_X
QTEST_COMPARE_DECL
QTEST_GLOBAL_H
QTEST_GUI_H
QTEST_H
QTEST_MAIN
QTEST_NOOP_MAIN
QTEST_NO_SPECIALIZATIONS
QTEST_VERSION
QTEST_VERSION_STR
QTEXTBROWSER_H
QTEXTCODECPLUGIN_H
QTEXTCODEC_H
QTEXTCURSOR_H
QTEXTDOCUMENTFRAGMENT_H
QTEXTDOCUMENT_H
QTEXTEDIT_H
QTEXTFORMAT_H
QTEXTLAYOUT_H
QTEXTLIST_H
QTEXTOBJECT_H
QTEXTOPTION_H
QTEXTSTREAM_H
QTEXTTABLE_H
QTHREADSTORAGE_H
QTHREAD_H
QTIMELINE_H
QTIMER_H
QTOOLBOX_H
QTOOLBUTTON_H
QTOOLTIP_H
QTRANSLATOR_H
QTREEVIEW_H
QTREEWIDGETITEMITERATOR_H
QTREEWIDGET_H
QTS
QTSMFC
QTSMFI
QT_ARCH_I386
QT_ASCII_CAST_WARN
QT_ASCII_CAST_WARN_CONSTRUCTOR
QT_ASSISTANT_CLIENT_EXPORT
QT_BEGIN_HEADER
QT_BUILD_KEY
QT_BUILTIN_GIF_READER
QT_COMPAT
QT_COMPAT_WARNINGS
QT_DEBUG
QT_DEPRECATED
QT_DEPRECATED_CONSTRUCTOR
QT_DEPRECATED_VARIABLE
QT_DLL
QT_EDITION
QT_EDITION_ACADEMIC
QT_EDITION_CONSOLE
QT_EDITION_DESKTOP
QT_EDITION_DESKTOPLIGHT
QT_EDITION_EDUCATIONAL
QT_EDITION_EVALUATION
QT_EDITION_OPENSOURCE
QT_EDITION_UNIVERSAL
QT_END_HEADER
QT_FASTCALL
QT_HAVE_SSE
QT_LARGEFILE_SUPPORT
QT_LICENSED_MODULE
QT_MAKEDLL
QT_MAP_DEBUG
QT_MOC_COMPAT
QT_MODULE
QT_MODULE_ACTIVEQT
QT_MODULE_CORE
QT_MODULE_GRAPHICSVIEW
QT_MODULE_GUI
QT_MODULE_NETWORK
QT_MODULE_OPENGL
QT_MODULE_QT3SUPPORT
QT_MODULE_QT3SUPPORTLIGHT
QT_MODULE_SQL
QT_MODULE_SVG
QT_MODULE_XML
QT_NO_ACTION
QT_NO_BIG_CODECS
QT_NO_BUTTONGROUP
QT_NO_CALENDARWIDGET
QT_NO_CLIPBOARD
QT_NO_CODECS
QT_NO_COLORDIALOG
QT_NO_COLORNAMES
QT_NO_COMBOBOX
QT_NO_COMPLETER
QT_NO_CONTEXTMENU
QT_NO_COP
QT_NO_CUPS
QT_NO_CURSOR
QT_NO_DATAWIDGETMAPPER
QT_NO_DATESTRING
QT_NO_DATETIMEEDIT
QT_NO_DEBUG_STREAM
QT_NO_DESKTOPSERVICES
QT_NO_DIAL
QT_NO_DIRECTPAINTER
QT_NO_DIRMODEL
QT_NO_DOCKWIDGET
QT_NO_DOM
QT_NO_DRAGANDDROP
QT_NO_EFFECTS
QT_NO_EMIT
QT_NO_ERRORMESSAGE
QT_NO_FILEDIALOG
QT_NO_FILESYSTEMWATCHER
QT_NO_FONTCOMBOBOX
QT_NO_FONTDIALOG
QT_NO_FREETYPE
QT_NO_FTP
QT_NO_GROUPBOX
QT_NO_HOSTINFO
QT_NO_HTTP
QT_NO_ICON
QT_NO_IMAGEFORMATPLUGIN
QT_NO_IMAGEFORMAT_BMP
QT_NO_IMAGEFORMAT_JPEG
QT_NO_IMAGEFORMAT_MNG
QT_NO_IMAGEFORMAT_PNG
QT_NO_IMAGEFORMAT_PPM
QT_NO_IMAGEFORMAT_XBM
QT_NO_IMAGEFORMAT_XPM
QT_NO_IMAGE_HEURISTIC_MASK
QT_NO_IMAGE_TEXT
QT_NO_INPUTDIALOG
QT_NO_ITEMVIEWS
QT_NO_LCDNUMBER
QT_NO_LIBRARY
QT_NO_LINEEDIT
QT_NO_LISTWIDGET
QT_NO_MEMBER_TEMPLATES
QT_NO_MENU
QT_NO_MENUBAR
QT_NO_MESSAGEBOX
QT_NO_MOVIE
QT_NO_NETWORKPROXY
QT_NO_PARTIAL_TEMPLATE_SPECIALIZATION
QT_NO_PICTURE
QT_NO_PRINTDIALOG
QT_NO_PRINTER
QT_NO_PROCESS
QT_NO_PROGRESSBAR
QT_NO_PROGRESSDIALOG
QT_NO_PROPERTIES
QT_NO_PROXYMODEL
QT_NO_QUUID_STRING
QT_NO_QWSEMBEDWIDGET
QT_NO_QWS_ALPHA_CURSOR
QT_NO_QWS_CURSOR
QT_NO_QWS_DECORATION_DEFAULT
QT_NO_QWS_DECORATION_STYLED
QT_NO_QWS_DECORATION_WINDOWS
QT_NO_QWS_INPUTMETHODS
QT_NO_QWS_KEYBOARD
QT_NO_QWS_MANAGER
QT_NO_QWS_MOUSE
QT_NO_QWS_MOUSE_AUTO
QT_NO_QWS_MOUSE_MANUAL
QT_NO_QWS_MULTIPROCESS
QT_NO_QWS_PROPERTIES
QT_NO_QWS_QPF
QT_NO_QWS_SOUNDSERVER
QT_NO_RESIZEHANDLER
QT_NO_RUBBERBAND
QT_NO_SCROLLBAR
QT_NO_SESSIONMANAGER
QT_NO_SETTINGS
QT_NO_SHORTCUT
QT_NO_SIGNALMAPPER
QT_NO_SIZEGRIP
QT_NO_SLIDER
QT_NO_SOCKS5
QT_NO_SORTFILTERPROXYMODEL
QT_NO_SOUND
QT_NO_SPINBOX
QT_NO_SPINWIDGET
QT_NO_SPLASHSCREEN
QT_NO_SPLITTER
QT_NO_STACKEDWIDGET
QT_NO_STANDARDITEMMODEL
QT_NO_STATUSBAR
QT_NO_STATUSTIP
QT_NO_STL
QT_NO_STL_WCHAR
QT_NO_STRINGLISTMODEL
QT_NO_STYLE_CDE
QT_NO_STYLE_CLEANLOOKS
QT_NO_STYLE_MOTIF
QT_NO_STYLE_PLASTIQUE
QT_NO_STYLE_STYLESHEET
QT_NO_STYLE_WINDOWSXP
QT_NO_SXE
QT_NO_SYNTAXHIGHLIGHTER
QT_NO_SYSTEMTRAYICON
QT_NO_TABBAR
QT_NO_TABDIALOG
QT_NO_TABLET
QT_NO_TABLETEVENT
QT_NO_TABLEWIDGET
QT_NO_TABWIDGET
QT_NO_TEMPLATE_VARIANT
QT_NO_TEXTBROWSER
QT_NO_TEXTCODEC
QT_NO_TEXTCODECPLUGIN
QT_NO_TEXTDATE
QT_NO_TEXTEDIT
QT_NO_TEXTSTREAM
QT_NO_THREAD
QT_NO_TOOLBAR
QT_NO_TOOLBOX
QT_NO_TOOLBUTTON
QT_NO_TOOLTIP
QT_NO_TRANSLATION
QT_NO_TRANSLATION_UTF8
QT_NO_TREEWIDGET
QT_NO_UDPSOCKET
QT_NO_UNDOCOMMAND
QT_NO_UNDOGROUP
QT_NO_UNDOSTACK
QT_NO_URLINFO
QT_NO_VALIDATOR
QT_NO_WARNINGS
QT_NO_WHATSTHIS
QT_NO_WHEELEVENT
QT_NO_WORKSPACE
QT_NO_ZLIB
QT_PACKAGEDATE_STR
QT_POINTER_SIZE
QT_PRODUCT_LICENSE
QT_PRODUCT_LICENSEE
QT_QHASH_DEBUG
QT_REQUIRE_VERSION
QT_SQL_MYSQL
QT_SQL_PSQL
QT_SQL_SQLITE
QT_SQL_SQLITE2
QT_STATIC_CONST
QT_STATIC_CONST_IMPL
QT_TEXTEDIT_OPTIMIZATION
QT_TRANSLATE_NOOP
QT_TR_FUNCTIONS
QT_TR_NOOP
QT_VERSION
QT_VERSION_STR
QT_VISIBILITY_AVAILABLE
QT_WA
QT_WA_INLINE
QTabBar
QTabBar(QWidget* parent=0)
QTabWidget
QTabWidget(QWidget *parent = 0)
QTabWidget(QWidget *parent, const char *name, Qt::WindowFlags f = 0)
QTableView
QTableView(QTableViewPrivate &, QWidget *parent)
QTableView(QWidget *parent = 0)
QTableWidget
QTableWidget(QWidget *parent = 0)
QTableWidget(int rows, int columns, QWidget *parent = 0)
QTableWidgetItem
QTableWidgetItem(const QIcon &icon, const QString &text, int type = Type)
QTableWidgetItem(const QString &text, int type = Type)
QTableWidgetItem(const QTableWidgetItem &other)
QTableWidgetItem(int type = Type)
QTableWidgetSelectionRange
QTableWidgetSelectionRange()
QTableWidgetSelectionRange(const QTableWidgetSelectionRange &other)
QTableWidgetSelectionRange(int top, int left, int bottom, int right)
QTabletEvent
QTabletEvent(Type t, const QPoint &pos, const QPoint &globalPos, const QPointF &hiResGlobalPos, int device, int pointerType, qreal pressure, int xTilt, int yTilt, qreal tangentialPressure, qreal rotation, int z, Qt::KeyboardModifiers keyState, qint64 uniqueID)
QTcpServer
QTcpServer(QObject *parent = 0)
QTcpSocket
QTcpSocket(QObject *parent = 0)
QTemporaryFile
QTemporaryFile()
QTemporaryFile(QObject *parent)
QTemporaryFile(const QString &templateName)
QTemporaryFile(const QString &templateName, QObject *parent)
QTestAccessibility
QTestAccessibilityEvent
QTestData
QTestData(const char *tag = 0, QTestTable *parent = 0)
QTestDelayEvent
QTestEvent
QTestEventList
QTestEventLoop
QTestKeyClicksEvent
QTestKeyEvent
QTestMouseEvent
QTextBlock
QTextBlockFormat
QTextBlockFormat()
QTextBlockGroup
QTextBlockGroup(QTextBlockGroupPrivate &p, QTextDocument *doc)
QTextBlockGroup(QTextDocument *doc)
QTextBlockUserData
QTextBrowser
QTextBrowser(QWidget *parent, const char *name)
QTextBrowser(QWidget* parent = 0)
QTextCharFormat
QTextCharFormat()
QTextCodec
QTextCodec()
QTextCodecFactoryInterface
QTextCodecFactoryInterface_iid
QTextCodecPlugin
QTextCodecPlugin(QObject *parent = 0)
QTextCursor
QTextCursor()
QTextCursor(QTextCursorPrivate *d)
QTextCursor(QTextDocument *document)
QTextCursor(QTextDocumentPrivate *p, int pos)
QTextCursor(QTextFrame *frame)
QTextCursor(const QTextBlock &block)
QTextCursor(const QTextCursor &cursor)
QTextDecoder
QTextDocument
QTextDocument(QObject *parent = 0)
QTextDocument(QTextDocumentPrivate &dd, QObject *parent)
QTextDocument(const QString &text, QObject *parent = 0)
QTextDocumentFragment
QTextDocumentFragment()
QTextDocumentFragment(const QTextCursor &range)
QTextDocumentFragment(const QTextDocument *document)
QTextDocumentFragment(const QTextDocumentFragment &rhs)
QTextEdit
QTextEdit(QTextEditPrivate &dd, QWidget *parent)
QTextEdit(QWidget *parent = 0)
QTextEdit(QWidget *parent, const char *name)
QTextEdit(const QString &text, QWidget *parent = 0)
QTextEncoder
QTextFormat
QTextFormat()
QTextFormat(const QTextFormat &rhs)
QTextFormat(int type)
QTextFragment
QTextFrame
QTextFrame(QTextDocument *doc)
QTextFrame(QTextFramePrivate &p, QTextDocument *doc)
QTextFrameFormat
QTextFrameFormat()
QTextFrameLayoutData
QTextIStream
QTextImageFormat
QTextImageFormat()
QTextInlineObject
QTextItem
QTextLayout
QTextLayout()
QTextLayout(const QString& text)
QTextLayout(const QString& text, const QFont &font, QPaintDevice *paintdevice = 0)
QTextLayout(const QTextBlock &b)
QTextLength
QTextLength(Type type, qreal value)
QTextLine
QTextList
QTextList(QTextDocument *doc)
QTextListFormat
QTextListFormat()
QTextOStream
QTextObject
QTextObject(QTextDocument *doc)
QTextObject(QTextObjectPrivate &p, QTextDocument *doc)
QTextObjectInterface
QTextOption
QTextOption()
QTextOption(Qt::Alignment alignment)
QTextOption(const QTextOption &o)
QTextStream
QTextStream()
QTextStream(FILE *fileHandle, QIODevice::OpenMode openMode = QIODevice::ReadWrite)
QTextStream(QByteArray *array, QIODevice::OpenMode openMode = QIODevice::ReadWrite)
QTextStream(QIODevice *device)
QTextStream(QString *string, QIODevice::OpenMode openMode = QIODevice::ReadWrite)
QTextStream(const QByteArray &array, QIODevice::OpenMode openMode = QIODevice::ReadOnly)
QTextStreamFunction
QTextStreamManipulator
QTextTable
QTextTable(QTextDocument *doc)
QTextTableCell
QTextTableFormat
QTextTableFormat()
QThread
QThread()
QThread(QObject *parent = 0)
QThread(QThreadPrivate &dd, QObject *parent = 0)
QThreadStorage
QThreadStorageData
QThreadStorageData(void(*func)(void *))
QTime
QTime(int h, int m, int s = 0, int ms = 0)
QTimeEdit
QTimeEdit(QWidget *parent = 0)
QTimeEdit(const QTime &time, QWidget *parent = 0)
QTimeLine
QTimeLine(int duration = 1000, QObject *parent = 0)
QTimer
QTimer(QObject *parent = 0)
QTimer(QObject *parent, const char *name)
QTimerEvent
QTimerEvent(int timerId )
QToolBar
QToolBar(QWidget *parent = 0)
QToolBar(QWidget *parent, const char *name)
QToolBarChangeEvent
QToolBarChangeEvent(bool t)
QToolBox
QToolBox(QWidget *parent = 0, Qt::WindowFlags f = 0)
QToolBox(QWidget *parent, const char *name, Qt::WindowFlags f = 0)
QToolButton
QToolButton(QToolButtonPrivate &, QWidget* parent)
QToolButton(QWidget * parent, const char* name)
QToolButton(QWidget * parent=0)
QToolButton(Qt::ArrowType type, QWidget *parent, const char* name)
QToolButton(const QIcon& s, const QString &textLabel, const QString& grouptext, QObject * receiver, const char* slot, QWidget * parent, const char* name=0 )
QToolTip
QToolTip()
QTranslator
QTranslator(QObject * parent, const char * name)
QTranslator(QObject *parent = 0)
QTreeView
QTreeView(QTreeViewPrivate &dd, QWidget *parent = 0)
QTreeView(QWidget *parent = 0)
QTreeWidget
QTreeWidget(QWidget *parent = 0)
QTreeWidgetItem
QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type = Type)
QTreeWidgetItem(QTreeWidget *view, const QStringList &strings, int type = Type)
QTreeWidgetItem(QTreeWidget *view, int type = Type)
QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type = Type)
QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &strings, int type = Type)
QTreeWidgetItem(QTreeWidgetItem *parent, int type = Type)
QTreeWidgetItem(const QStringList &strings, int type = Type)
QTreeWidgetItem(const QTreeWidgetItem &other)
QTreeWidgetItem(int type = Type)
QTreeWidgetItemIterator
QTreeWidgetItemIterator(QTreeWidget *widget, IteratorFlags flags = All)
QTreeWidgetItemIterator(QTreeWidgetItem *item, IteratorFlags flags = All)
QTreeWidgetItemIterator(const QTreeWidgetItemIterator &it)
QTypeInfo
QTypeInfoHelper(...)
QTypeInfoHelper(T*(*)())
QUDPSOCKET_H
QUILOADER_H
QUNDOGROUP_H
QUNDOSTACK_H
QUNDOVIEW_H
QURLINFO_H
QURL_H
QUUID_H
QUdpSocket
QUdpSocket(QObject *parent = 0)
QUiLoader
QUiLoader(QObject *parent = 0)
QUintForSize
QUintForType
QUndoCommand
QUndoCommand(QUndoCommand *parent = 0)
QUndoCommand(const QString &text, QUndoCommand *parent = 0)
QUndoGroup
QUndoGroup(QObject *parent = 0)
QUndoStack
QUndoStack(QObject *parent = 0)
QUndoView
QUndoView(QUndoGroup *group, QWidget *parent = 0)
QUndoView(QUndoStack *stack, QWidget *parent = 0)
QUndoView(QWidget *parent = 0)
QUpdateLaterEvent
QUpdateLaterEvent(const QRegion& paintRegion)
QUrl
QUrl()
QUrl(const QString &url)
QUrl(const QString &url, ParsingMode mode)
QUrl(const QUrl &copy)
QUrlInfo
QUrlInfo()
QUrlInfo(const QString &name, int permissions, const QString &owner, const QString &group, qint64 size, const QDateTime &lastModified, const QDateTime &lastRead, bool isDir, bool isFile, bool isSymLink, bool isWritable, bool isReadable, bool isExecutable)
QUrlInfo(const QUrl &url, int permissions, const QString &owner, const QString &group, qint64 size, const QDateTime &lastModified, const QDateTime &lastRead, bool isDir, bool isFile, bool isSymLink, bool isWritable, bool isReadable, bool isExecutable)
QUrlInfo(const QUrlInfo &ui)
QUuid
QUuid(const QString &)
QUuid(const char *)
QVALIDATOR_H
QVARIANT_H
QVARLENGTHARRAY_H
QVBoxLayout
QVBoxLayout()
QVBoxLayout(QLayout *parentLayout, int spacing = -1, const char *name = 0)
QVBoxLayout(QWidget *parent)
QVBoxLayout(QWidget *parent, int border, int spacing = -1, const char *name = 0)
QVBoxLayout(int spacing, const char *name = 0)
QVECTOR_H
QVERIFY
QVERIFY2
QVERIFY_EVENT
QValidator
QValidator(QObject * parent)
QValidator(QObject * parent, const char *name)
QVarLengthArray
QVarLengthArray(int size = 0)
QVariant
QVariant()
QVariant(QDataStream &s)
QVariant(Qt::GlobalColor color)
QVariant(Type type)
QVariant(bool b)
QVariant(const QBitArray &bitarray)
QVariant(const QByteArray &bytearray)
QVariant(const QChar &qchar)
QVariant(const QDate &date)
QVariant(const QDateTime &datetime)
QVariant(const QLatin1String &string)
QVariant(const QLine &line)
QVariant(const QLineF &line)
QVariant(const QList<QVariant> &list)
QVariant(const QLocale &locale)
QVariant(const QMap<QString,QVariant> &map)
QVariant(const QPoint &pt)
QVariant(const QPointF &pt)
QVariant(const QRect &rect)
QVariant(const QRectF &rect)
QVariant(const QRegExp &regExp)
QVariant(const QSize &size)
QVariant(const QSizeF &size)
QVariant(const QString &string)
QVariant(const QStringList &stringlist)
QVariant(const QTime &time)
QVariant(const QUrl &url)
QVariant(const QVariant &other)
QVariant(const char *str)
QVariant(double d)
QVariant(int i)
QVariant(int typeOrUserType, const void *copy)
QVariant(qlonglong ll)
QVariant(qulonglong ull)
QVariant(uint ui)
QVariantComparisonHelper
QVariantList
QVariantMap
QVector
QVector(int size)
QVector(int size, const T &t)
QVectorData
QVectorTypedData
QWAITCONDITION_H
QWARN
QWHATSTHIS_H
QWIDGETACTION_H
QWIDGETSIZE_MAX
QWIDGET_H
QWINDOWDEFS_H
QWINDOWSSTYLE_H
QWINDOWSXPSTYLE_H
QWMATRIX_H
QWMatrix
QWORKSPACE_H
QWaitCondition
QWaitCondition()
QWhatsThis
QWhatsThis()
QWhatsThisClickedEvent
QWhatsThisClickedEvent(const QString &href)
QWheelEvent
QWheelEvent(const QPoint &pos, const QPoint& globalPos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient = Qt::Vertical)
QWheelEvent(const QPoint &pos, const QPoint& globalPos, int delta, int state, Qt::Orientation orient = Qt::Vertical)
QWheelEvent(const QPoint &pos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient = Qt::Vertical)
QWheelEvent(const QPoint &pos, int delta, int state, Qt::Orientation orient = Qt::Vertical)
QWidget
QWidget(QWidget* parent = 0, Qt::WindowFlags f = 0)
QWidget(QWidget* parent, const char *name, Qt::WindowFlags f = 0)
QWidget(QWidgetPrivate &d, QWidget* parent, Qt::WindowFlags f)
QWidgetAction
QWidgetAction(QObject *parent)
QWidgetData
QWidgetItem
QWidgetList
QWidgetMapper
QWidgetSet
QWindowStateChangeEvent
QWindowStateChangeEvent(Qt::WindowStates aOldState)
QWindowStateChangeEvent(Qt::WindowStates aOldState, bool isOverride)
QWindowsMime
QWindowsMime()
QWindowsStyle
QWindowsStyle()
QWindowsStyle(QWindowsStylePrivate &dd)
QWindowsXPStyle
QWindowsXPStyle()
QWorkspace
QWorkspace(QWidget* parent, const char* name)
QWorkspace(QWidget* parent=0)
QWriteLocker
QWriteLocker(QReadWriteLock *readWriteLock)
QX11EMBED_X11_H
QX11EmbedContainer
QX11EmbedContainer(QWidget *parent = 0)
QX11EmbedWidget
QX11EmbedWidget(QWidget *parent = 0)
QX11INFO_X11_H
QX11Info
QX11Info()
QX11Info(const QX11Info &other)
QXML_H
QXmlAttributes
QXmlContentHandler
QXmlDTDHandler
QXmlDeclHandler
QXmlDefaultHandler
QXmlEntityResolver
QXmlErrorHandler
QXmlInputSource
QXmlInputSource()
QXmlInputSource(QFile& file)
QXmlInputSource(QIODevice *dev)
QXmlInputSource(QTextStream& stream)
QXmlLexicalHandler
QXmlLocator
QXmlLocator()
QXmlNamespaceSupport
QXmlNamespaceSupport()
QXmlParseException
QXmlParseException(const QString &name = QString(), int c = -1, int l = -1, const QString &p = QString(), const QString &s = QString())
QXmlReader
QXmlSimpleReader
QXmlSimpleReader()
Q_ARG
Q_ASSERT
Q_ASSERT_X
Q_ATOMIC_INIT
Q_AUTOTEST_EXPORT
Q_BIG_ENDIAN
Q_BROKEN_DEBUG_STREAM
Q_BROKEN_TEMPLATE_SPECIALIZATION
Q_BYTE_ORDER
Q_CANNOT_DELETE_CONSTANT
Q_CANVAS_EXPORT
Q_CC_BOR
Q_CC_CDS
Q_CC_COMEAU
Q_CC_DEC
Q_CC_EDG
Q_CC_GHS
Q_CC_GNU
Q_CC_HIGHC
Q_CC_HP
Q_CC_HPACC
Q_CC_INTEL
Q_CC_KAI
Q_CC_MIPS
Q_CC_MSVC
Q_CC_MSVC_NET
Q_CC_MWERKS
Q_CC_OC
Q_CC_PGI
Q_CC_SUN
Q_CC_SYM
Q_CC_USLC
Q_CC_WAT
Q_CC_XLC
Q_CHECK_PTR
Q_CLASSINFO
Q_CLEANUP_RESOURCE
Q_COMPAT_EXPORT
Q_CONSTRUCTOR_FUNCTION
Q_CORE_EXPORT
Q_CORE_EXPORT_INLINE
Q_C_CALLBACKS
Q_D
Q_DECLARE_ASSOCIATIVE_ITERATOR
Q_DECLARE_BUILTIN_METATYPE
Q_DECLARE_EXTENSION_INTERFACE
Q_DECLARE_FLAGS
Q_DECLARE_INTERFACE
Q_DECLARE_METATYPE
Q_DECLARE_MUTABLE_ASSOCIATIVE_ITERATOR
Q_DECLARE_MUTABLE_SEQUENTIAL_ITERATOR
Q_DECLARE_OPERATORS_FOR_FLAGS
Q_DECLARE_PRIVATE
Q_DECLARE_PUBLIC
Q_DECLARE_SEQUENTIAL_ITERATOR
Q_DECLARE_SHARED
Q_DECLARE_TR_FUNCTIONS
Q_DECLARE_TYPEINFO
Q_DECL_CONSTRUCTOR_DEPRECATED
Q_DECL_DEPRECATED
Q_DECL_EXPORT
Q_DECL_IMPORT
Q_DECL_VARIABLE_DEPRECATED
Q_DESTRUCTOR_FUNCTION
Q_DISABLE_COPY
Q_DUMMY_COMPARISON_OPERATOR
Q_ENUMS
Q_EXPORT_PLUGIN
Q_EXPORT_PLUGIN2
Q_EXPORT_SQLDRIVER_MYSQL
Q_EXPORT_SQLDRIVER_ODBC
Q_EXPORT_SQLDRIVER_PSQL
Q_EXPORT_STATIC_PLUGIN
Q_EXPORT_STATIC_PLUGIN2
Q_EXTERN_C
Q_FLAGS
Q_FOREACH
Q_FOREVER
Q_FULL_TEMPLATE_INSTANTIATION
Q_FULL_TEMPLATE_INSTANTIATION_MEMCMP
Q_GADGET
Q_GLOBAL_STATIC
Q_GLOBAL_STATIC_WITH_ARGS
Q_GUI_EXPORT
Q_GUI_EXPORT_INLINE
Q_HASH_DECLARE_INT_NODES
Q_IMPORT_PLUGIN
Q_INIT_RESOURCE
Q_INLINE_TEMPLATE
Q_INT16
Q_INT32
Q_INT64
Q_INT64_C
Q_INT8
Q_INTERFACES
Q_INVOKABLE
Q_IPV6ADDR
Q_LITTLE_ENDIAN
Q_LLONG
Q_LONG
Q_MOC_OUTPUT_REVISION
Q_NETWORK_EXPORT
Q_NOREPLY
Q_NO_BOOL_TYPE
Q_NO_DECLARED_NOT_DEFINED
Q_NO_DEPRECATED_CONSTRUCTORS
Q_NO_EXPLICIT_KEYWORD
Q_NO_PACKED_REFERENCE
Q_NO_USING_KEYWORD
Q_OBJECT
Q_OBJECT_FAKE
Q_ODBC_VERSION_2
Q_OPENGL_EXPORT
Q_OS_AIX
Q_OS_BSD4
Q_OS_BSDI
Q_OS_CYGWIN
Q_OS_DARWIN
Q_OS_DGUX
Q_OS_DYNIX
Q_OS_FREEBSD
Q_OS_HPUX
Q_OS_HURD
Q_OS_IRIX
Q_OS_LINUX
Q_OS_LYNX
Q_OS_MAC
Q_OS_MACX
Q_OS_MSDOS
Q_OS_NETBSD
Q_OS_OPENBSD
Q_OS_OS2
Q_OS_OS2EMX
Q_OS_OSF
Q_OS_QNX
Q_OS_QNX6
Q_OS_RELIANT
Q_OS_SCO
Q_OS_SOLARIS
Q_OS_ULTRIX
Q_OS_UNIX
Q_OS_UNIXWARE
Q_OS_WIN
Q_OS_WIN32
Q_OS_WIN64
Q_OUTOFLINE_TEMPLATE
Q_OVERRIDE
Q_PACKED
Q_PID
Q_PLUGIN_INSTANCE
Q_PLUGIN_VERIFICATION_DATA
Q_PRIVATE_SLOT
Q_PROPERTY
Q_Q
Q_REQUIRED_RESULT
Q_RETURN_ARG
Q_SCRIPTABLE
Q_SETS
Q_SIGNALS
Q_SLOTS
Q_SPECIALIZED_QATOMIC
Q_SQL_EXPORT
Q_STANDARD_CALL
Q_SVG_EXPORT
Q_TEMPLATEDLL
Q_TEMPLATE_EXTERN
Q_TESTLIB_EXPORT
Q_TYPEID
Q_TYPENAME
Q_UINT16
Q_UINT32
Q_UINT64
Q_UINT64_C
Q_UINT8
Q_ULLONG
Q_ULONG
Q_UNUSED
Q_WRONG_SB_CTYPE_MACROS
Q_WS_MAC
Q_WS_MACX
Q_WS_PM
Q_WS_WIN
Q_WS_WIN16
Q_WS_WIN32
Q_WS_WIN64
Q_WS_X11
Q_XML_EXPORT
QtCleanUpFunction
QtMsgHandler
QtMsgType
QtPluginInstanceFunction
QueryType
REFGUID
ReadFunc
RealNumberNotation
Reason
RecordType
RecursionMode
Refresh
Region
RegionType
RegisterOption
RegisterServiceReply
RelationFlag
RelayoutType
RenameAction
RenderFlag
RenderHint
RequiredStatus
ResizeMode
ResizePolicy
ResourceType
RestartHint
RgnHandle
Role
Roles
RootObjectHandler
RttiValues
S390_QATOMIC_H
SCFlags
SDK_GLOBAL_H
SFlags
SIGNAL
SIGNAL_CODE
SLOT
SLOT_CODE
SPARC_QATOMIC_H
STGMEDIUM
STPCX
SaveOperator
ScaleMode
Scope
ScrapRef
ScrollBarMode
ScrollBarPolicy
ScrollHint
ScrollMode
Section
SectionFlag
SectionPosition
SegmentStyle
SelectedPosition
Selection
SelectionBehavior
SelectionFlag
SelectionMode
SelectionType
Separator
SequenceFormat
SequenceMatch
Server
ServiceQueueOptions
ServiceReplacementOptions
SettingsMap
Shadow
Shape
ShapeMode
ShortcutContext
Size
SizeAdjustPolicy
SizeConstraint
SizePolicyMasks
SizeType
Sizes
SkipMode
SliderAction
SliderChange
SocketError
SocketState
SocketType
SortFlag
SortIndicator
SortOrder
SortSpec
Spec
SpecialAddress
SpecialCharacter
SplitBehavior
Spread
StandardButton
StandardFormat
StandardKey
StandardPixmap
State
StateFlag
StatementType
Status
StepEnabledFlag
Stream
Stretch
StringComparisonMode
Style
StyleHint
StyleMask
StyleOptionType
StyleOptionVersion
StyleStrategy
SubControl
SubElement
SubmitPolicy
System
TASKMENU_H
TRUE
TabPosition
TabShape
TableType
TableWidget
TabletDevice
Tag
TagType
TestFailMode
Text
TextElideMode
TextFlag
TextFlags
TextFormat
TextInsertionFlags
TextInteractionFlag
TextPosition
TickPosition
TimeFlag
TimeSpec
TimerInfo
ToggleState
ToolBarArea
ToolBarAreaSizes
ToolBarDock
ToolBarFeature
ToolBarPosition
ToolButtonFeature
ToolButtonPopupMode
ToolButtonStyle
TransferMode
TransferType
TransformationMode
Type
UIEffect
UILIB_GLOBAL_H
UnderlineStyle
UndoRedoInfo
UndoRedoInfo(Q3TextDocument *dc)
UnicodeVersion
UnregisterMode
UpdateHandler
ValueType
Variant
Version
VerticalAlignment
VerticalHeaderFormat
ViewItemFeature
ViewMode
ViewportAnchor
VirtualHookOperation
WFlags
WId
Weight
WhiteSpaceMode
Widget
WidgetAttribute
WidgetList
WidthMode
WinVersion
WindowGroupRef
WindowModality
WindowOrder
WindowPtr
WindowRef
WindowState
WindowType
WindowsVersion
WordWrap
WrapMode
WrapPolicy
WriteFunc
WritingSystem
X86_64_QATOMIC_H
XEvent
X_CursorShape
Zero
abort()
abortHostLookup(int lookupId)
about(QWidget *parent, const QString &title, const QString &text)
aboutQt()
aboutQt(QWidget *parent, const QString &title = QString())
aboutToBlock()
aboutToClose()
aboutToHide()
aboutToQuit()
aboutToShow()
aboutToShow(QWidget *)
aboutToShow(int)
aboutToUnmanageWidget(QWidget *widget)
absoluteDir() const
absoluteDir() const = 0
absoluteFilePath() const
absoluteFilePath(const QString &fileName) const
absolutePath() const
accel() const
accept()
acceptDrop(const QMimeSource *mime) const
acceptDrops() const
acceptMode() const
acceptProposedAction()
acceptRichText() const
accepted()
acceptedMouseButtons() const
acceptsHoverEvents() const
access() const
accessibleDescription() const
accessibleName() const
accum() const
accumBufferSize() const
acquire(int n = 1)
action() const
action() const = 0
actionAdjustSize() const
actionAt(const QPoint &) const
actionAt(const QPoint &p) const
actionAt(int x, int y) const
actionBreakLayout() const
actionChanged(Qt::DropAction action)
actionCopy() const
actionCut() const
actionDelete() const
actionEditor() const
actionEvent(QActionEvent *)
actionEvent(QActionEvent *event)
actionGeometry(QAction *) const
actionGeometry(QAction *action) const
actionGridLayout() const
actionGroup() const
actionHorizontalLayout() const
actionLower() const
actionPaste() const
actionRaise() const
actionRedo() const
actionSelectAll() const
actionSplitHorizontal() const
actionSplitVertical() const
actionText(int action, Text t, int child) const
actionText(int action, Text t, int child) const = 0
actionTriggered(QAction *action)
actionTriggered(int action)
actionUndo() const
actionVerticalLayout() const
actions()
actions() const
activate()
activate(ActionEvent event)
activate(QObject *sender, const QMetaObject *, int from_local_signal_index, int to_local_signal_index, void **argv)
activate(QObject *sender, const QMetaObject *, int local_signal_index, void **argv)
activate(QObject *sender, int from_signal_index, int to_signal_index, void **argv)
activate(QObject *sender, int signal_index, void **argv)
activateCallbacks(Callback, void **)
activateNextCell()
activateNextWindow()
activatePreviousWindow()
activateRecursiveHelper(QLayoutItem *item)
activateWindow()
activated()
activated(Q3Action *)
activated(QSystemTrayIcon::ActivationReason reason)
activated(QWidget *widget)
activated(const QDate &date)
activated(const QModelIndex &index)
activated(const QString &)
activated(const QString &text)
activated(int = 0)
activated(int id )
activated(int index )
activated(int index)
activated(int itemId)
activated(int socket)
activatedAmbiguously()
activatedAmbiguously(int id )
activatedPos(QPoint &)
active() const
activeAction() const
activeFormWindow() const
activeFormWindowChanged(QDesignerFormWindowInterface *formWindow)
activeModalWidget()
activePopupWidget()
activeStack() const
activeStackChanged(QUndoStack *stack)
activeWindow()
activeWindow() const
actualSize(const QSize &size, Mode mode = Normal, State state = Off) const
actualSize(const QSize &size, QIcon::Mode mode, QIcon::State state)
add(Q3Action* a)
add(QObject *object)
add(QObject* object)
add(QWidget *w, const QString &s)
add(const QTextBlock &block)
addAction(QAction *action)
addAction(QAction* a)
addAction(const QIcon &icon, const QString &text)
addAction(const QIcon &icon, const QString &text, const QObject *receiver, const char* member)
addAction(const QIcon &icon, const QString &text, const QObject *receiver, const char* member, const QKeySequence &shortcut = 0)
addAction(const QString &text)
addAction(const QString &text, const QObject *receiver, const char* member)
addAction(const QString &text, const QObject *receiver, const char* member, const QKeySequence &shortcut = 0)
addActions(QList<QAction*> actions)
addAnimation(Q3CanvasItem*)
addApplicationFont(const QString &fileName)
addApplicationFontFromData(const QByteArray &fontData)
addArgument(const QString& arg )
addBindValue(const QVariant& val, QSql::ParamType type = QSql::In)
addBindValue(const QVariant& val, QSql::ParamType type)
addBrush(const QString &name, const QBrush &brush)
addButton(QAbstractButton *)
addButton(QAbstractButton *, int id)
addButton(QAbstractButton *button, ButtonRole role)
addButton(QPushButton *button)
addButton(StandardButton button)
addButton(const QString &text, ButtonRole role)
addCategory(const Category &cat)
addChild(QTreeWidgetItem *child)
addChild(QWidget* child, int x=0, int y=0 )
addChildLayout(QLayout *l)
addChildWidget(QWidget *w)
addChildren(const QList<QTreeWidgetItem*> &children)
addColumn(const QIcon& icon, const QString &label, int size = -1)
addColumn(const QString &label, int size = -1)
addColumn(const QString& fieldName, const QString& label = QString(), int width = -1, const QIconSet& iconset = QIconSet() )
addColumnInternal(int id, const char *name)
addCommand(Q3FtpCommand * )
addControllingSignal(const QString &signal)
addCoords(int x1, int y1, int x2, int y2)
addDatabase(QSqlDriver* driver, const QString& connectionName = QLatin1String(defaultConnection))
addDatabase(const QString& type, const QString& connectionName = QLatin1String(defaultConnection))
addDays(int days) const
addDockWidget(Qt::DockWidgetArea area, QDockWidget *dockwidget)
addDockWidget(Qt::DockWidgetArea area, QDockWidget *dockwidget, Qt::Orientation orientation)
addDockWindow(Q3DockWindow *, Qt::Dock = Qt::DockTop, bool newLine = false)
addDockWindow(Q3DockWindow *, const QString &label, Qt::Dock = Qt::DockTop, bool newLine = false)
addEllipse(const QRectF &rect)
addEllipse(const QRectF &rect, const QPen &pen = QPen(), const QBrush &brush = QBrush())
addEllipse(qreal x, qreal y, qreal w, qreal h)
addEnabledOption(PrintDialogOption option)
addEntry(const Q3ValueList<QUrlInfo> &i )
addFactory(Q3MimeSourceFactory *f)
addFile(const QString &fileName, const QSize &size = QSize(), Mode mode = Normal, State state = Off)
addFile(const QString &fileName, const QSize &size, QIcon::Mode mode, QIcon::State state)
addFilePath(const QString&)
addFilter(const QString &filter)
addFormWindow(QDesignerFormWindowInterface *formWindow)
addGuard(QObject **ptr)
addItem(DomLayoutItem *ui_item, QLayoutItem *item, QLayout *layout)
addItem(DomWidget *ui_widget, QWidget *widget, QWidget *parentWidget)
addItem(Q3CanvasItem*)
addItem(QGraphicsItem *item)
addItem(QLayoutItem *)
addItem(QLayoutItem *item)
addItem(QLayoutItem *item, int row, int column, int rowSpan = 1, int columnSpan = 1, Qt::Alignment = 0)
addItem(QListWidgetItem *item)
addItem(QWidget *widget, const QIcon &icon, const QString &text)
addItem(QWidget *widget, const QString &text)
addItem(const QIcon &icon, const QString &text, const QVariant &userData = QVariant())
addItem(const QString &text, const QVariant &userData = QVariant())
addItemToChunk(Q3CanvasItem*, int i, int j)
addItemToChunkContaining(Q3CanvasItem*, int x, int y)
addLabel(const QIcon&, const QString &, int size = -1)
addLabel(const QString &, int size = -1)
addLayout(QLayout *, int row, int column, Qt::Alignment = 0)
addLayout(QLayout *, int row, int column, int rowSpan, int columnSpan, Qt::Alignment = 0)
addLayout(QLayout *layout, int stretch = 0)
addLeftWidget(QWidget *w)
addLibraryPath(const QString &)
addLine()
addLine(const QLineF &line, const QPen &pen = QPen())
addMSecs(int ms) const
addMSecs(qint64 msecs) const
addMapping(QWidget *widget, int section)
addMenu(QMenu *menu)
addMenu(const QIcon &icon, const QString &title)
addMenu(const QString &title)
addMenuAction(QAction *action)
addMonths(int months) const
addNumber(int sec, int num)
addOperation(Q3NetworkOperation *op )
addPage()
addPage(QWidget *, const QString & )
addPath(const QPainterPath &path)
addPath(const QPainterPath &path, const QPen &pen = QPen(), const QBrush &brush = QBrush())
addPath(const QString &file)
addPath(const QString& path )
addPaths(const QStringList &files)
addPermanentWidget(QWidget *widget, int stretch = 0)
addPixmap(const QPixmap &pixmap)
addPixmap(const QPixmap &pixmap, Mode mode = Normal, State state = Off)
addPixmap(const QPixmap &pixmap, QIcon::Mode mode, QIcon::State state)
addPluginPath(const QString &path)
addPluginPath(const QString &pluginPath)
addPolygon(const QPolygonF &polygon)
addPolygon(const QPolygonF &polygon, const QPen &pen = QPen(), const QBrush &brush = QBrush())
addQueryItem(const QString &key, const QString &value)
addRect(const QRectF &rect)
addRect(const QRectF &rect, const QPen &pen = QPen(), const QBrush &brush = QBrush())
addRect(qreal x, qreal y, qreal w, qreal h)
addRegion(const QRegion &region)
addRequest(Q3HttpRequest * )
addResource(int type, const QUrl &name, const QVariant &resource)
addResourceFile(const QString &path)
addResourceSearchPath(const QString &path)
addRightWidget(QWidget *w)
addScrollBarWidget(QWidget *widget, Qt::Alignment alignment)
addSearchPath(const QString &path)
addSecs(int secs) const
addSelection(const Q3TableSelection &s)
addSeparator()
addSpace(int)
addSpacing(int size)
addStack(QUndoStack *stack)
addStretch(int stretch = 0)
addStrut(int)
addTab(QWidget *, const QString &)
addTab(QWidget *child, const QIcon& iconset, const QString &label)
addTab(QWidget *widget, const QIcon& icon, const QString &label)
addTab(QWidget *widget, const QString &)
addTab(const QIcon &icon, const QString &text)
addTab(const QString &text)
addText(const QPointF &point, const QFont &f, const QString &text)
addText(const QString &text, const QFont &font = QFont())
addText(qreal x, qreal y, const QFont &f, const QString &text)
addTo(QWidget*)
addToChunks()
addToGroup(QGraphicsItem *item)
addToIndex()
addToolBar(Q3DockWindow *, Qt::Dock = Qt::DockTop, bool newLine = false)
addToolBar(Q3DockWindow *, const QString &label, Qt::Dock = Qt::DockTop, bool newLine = false)
addToolBar(QToolBar *toolbar)
addToolBar(Qt::ToolBarArea area, QToolBar *toolbar)
addToolBar(const QString &title)
addToolBarBreak(Qt::ToolBarArea area = Qt::TopToolBarArea)
addToolButton(QAbstractButton *b, bool separator = false)
addTopLevelItem(QTreeWidgetItem *item)
addTopLevelItems(const QList<QTreeWidgetItem*> &items)
addValue(const QString &key, const QString &value)
addView(Q3CanvasView*)
addWidget(QWidget *, int = -1)
addWidget(QWidget *, int row, int column, Qt::Alignment = 0)
addWidget(QWidget *, int row, int column, int rowSpan, int columnSpan, Qt::Alignment = 0)
addWidget(QWidget *, int stretch = 0, Qt::Alignment alignment = 0)
addWidget(QWidget *w)
addWidget(QWidget *widget)
addWidget(QWidget *widget, int stretch = 0)
addWidget(int cat_idx, const Widget &wgt)
addWidgets(QLabel *, QWidget *, QPushButton *)
addWindow(QWidget *w, Qt::WindowFlags flags = 0)
addYears(int years) const
addedTo(QWidget *actionWidget, QWidget *container)
addedTo(QWidget *actionWidget, QWidget *container, Q3Action *a)
addedTo(int index, Q3PopupMenu *menu)
addedTo(int index, Q3PopupMenu *menu, Q3Action *a)
additionalFormats() const
address() const
addressEntries() const
addressReusable() const
addresses() const
adjust(int x1, int y1, int x2, int y2)
adjust(qreal x1, qreal y1, qreal x2, qreal y2)
adjustColumn(int col )
adjustColumn(int col)
adjustHeaderSize(int diff)
adjustIndicator(const QPoint &pos, int index)
adjustItems()
adjustPosition(QWidget*)
adjustRow(int row)
adjustSize()
adjust_ptr(Node *node)
adjusted(int x1, int y1, int x2, int y2) const
adjusted(qreal x1, qreal y1, qreal x2, qreal y2) const
adjustedRectangle(const QRect &r)
advance()
advance(int phase)
advance(int stage)
afterAnimationStep(qreal step)
aliases() const
aliases() const = 0
alignedRect(Qt::LayoutDirection direction, Qt::Alignment alignment, const QSize &size, const QRect &rectangle)
alignment() const
alignmentRect(const QRect&) const
all(uchar)
allAddresses()
allColumnsShowFocus() const
allFormats() const
allFormatsForMime(const QMimeData *mimeData)
allGray() const
allInterfaces()
allItems()
allKeys() const
allMimesForFormats(IDataObject *pDataObj)
allQueryItemValues(const QString &key) const
allValues(const QString &key) const
allWidgets()
allocateNode()
allowedAreas() const
allowedAreasChanged(Qt::DockWidgetAreas allowedAreas)
allowedAreasChanged(Qt::ToolBarAreas allowedAreas)
allowedInContext(const Q3StyleSheetItem*) const
allowsErrorInteraction()
allowsInteraction()
alpha() const
alphaBufferSize() const
alphaChannel() const
alphaF() const
alternatingRowColors() const
anchor() const
anchorAt(const QPoint& pos) const
anchorAt(const QPoint& pos, Qt::AnchorAttribute a = Qt::AnchorHref)
anchorAt(const QPointF& pos) const
anchorClicked(const QString&, const QString&)
anchorClicked(const QUrl &)
angle() const
angle(const QLineF &l) const
animateClick(int msec = 100)
animated() const
animationDuration() const//in seconds
answer()
appCells(int screen = -1)
appClass()
appColormap(int screen = -1)
appDefaultColormap(int screen = -1)
appDefaultVisual(int screen = -1)
appDepth(int screen = -1)
appDpiX(int screen = -1)
appDpiY(int screen = -1)
appRootWindow(int screen = -1)
appScreen()
appTime()
appUserTime()
appVisual(int screen = -1)
append()
append(Q3PtrCollection::Item ) // add item at end of list
append(QChar c)
append(QDesignerWidgetDataBaseItemInterface *item)
append(char c)
append(const Q3IconDragItem &item, const QRect &pr, const QRect &tr)
append(const Q3SqlFieldInfo& fieldInfo)
append(const QByteArray &a)
append(const QLatin1String &s)
append(const QListData &l)
append(const QSqlField &field)
append(const QSqlField &field, bool desc)
append(const QSqlField& field)
append(const QString &qName, const QString &uri, const QString &localPart, const QString &value)
append(const QString &s)
append(const QString &text)
append(const QString& text)
append(const T &)
append(const T &t)
append(const T *buf, int size)
append(const char *s)
append(int type, const void *data)
appendChild(const QDomNode& newChild)
appendColumn(const QList<QStandardItem*> &items)
appendData(const QString& arg)
appendItemContainer()
appendRow(QStandardItem *item)
appendRow(const QList<QStandardItem*> &items)
appendUndoItem(QAbstractUndoItem *)
applicationDirPath()
applicationFilePath()
applicationFontFamilies(int id)
applicationName()
applicationProxy()
apply(const QString& q, bool invalidate)
applyButtonPressed()
applyPrepared(const QString& q, bool invalidate)
applyProperties(QObject *o, const QList<DomProperty*> &properties)
applyTabStops(QWidget *widget, DomTabStops *tabStops)
appropriate(Q3DockWindow *dw) const
appropriate(QWidget * ) const
arcMoveTo(const QRectF &rect, qreal angle)
arcMoveTo(qreal x, qreal y, qreal w, qreal h, qreal angle)
arcTo(const QRectF &rect, qreal startAngle, qreal arcLength)
arcTo(qreal x, qreal y, qreal w, qreal h, qreal startAngle, qreal arcLength)
area() const
areaAt(const QPoint &gp)
areaPoints() const
areaPoints() const=0
areaPointsAdvanced() const
arg(int num ) const
arguments()
arguments() const
arrange()
arrangeIcons()
arrangeItemsInGrid(bool update = true)
arrangeItemsInGrid(const QSize &grid, bool update = true)
arrangement() const
array_data
arrowType() const
asBitArray()
asBool()
asByteArray()
asDate()
asDateTime()
asDouble()
asInt()
asList()
asLongLong()
asMap()
asPoint()
asRect()
asSize()
asString()
asStringList()
asTime()
asUInt()
asULongLong()
ascent() const
asciiToKey(char ascii)
ascii_helper() const
assign(const Q3GArray &a)
assign(const QString &str)
assign(const char *d, uint len)
assistantClosed()
assistantOpened()
associatedWidgets() const
at() const
at() const // get current index
at(Offset )
at(int i) const
at(uint index ) // access item at i'th pos
at(uint index) const
atBeginning() const
atBlockEnd() const
atBlockStart() const
atEnd() const
atFirst() const
atFirst() const // test if at first item
atLast() const
atLast() const // test if at last item
atStart() const
attribute(const QString& name, const QString& defValue = QString() ) const
attributeDecl(const QString& eName, const QString& aName, const QString& type, const QString& valueDefault, const QString& value)
attributeNS(const QString nsURI, const QString& localName, const QString& defValue = QString()) const
attributeNode(const QString& name)
attributeNodeNS(const QString& nsURI, const QString& localName)
attributes() const
author() const = 0
authority() const
autoAdd() const
autoAdvance() const
autoArrange() const
autoBufferSwap() const
autoClose() const
autoCompletion() const
autoCompletionCaseSensitivity() const
autoDefault() const
autoDelete() const
autoDetectUnicode() const
autoEdit() const
autoExclusive() const
autoFillBackground() const
autoFormatting() const
autoGeometry() const
autoRaise() const
autoRelaySignals() const
autoRemove() const
autoRepeat() const
autoRepeatDelay() const
autoRepeatInterval() const
autoReset() const
autoResize() const
autoScrollTimerDone()
available() const
availableCodecs()
availableGeometry(int screen = -1) const
availableMibs()
availableWidgets() const
averageCharWidth() const
awake()
back()
backButton() const
background() const
backgroundBrush() const
backgroundColor() const
backgroundMode() const
backgroundPixmap() const
backgroundRole() const
backspace()
backward()
backwardAvailable(bool)
bar() const
baseName() const
baseService() const
baseSize() const
batchSize() const
beep()
beforeAnimationStep(qreal step)
beforeDelete(QSqlRecord* buf )
beforeDelete(QSqlRecord* buf)
beforeDelete(int row)
beforeInsert(QSqlRecord &record)
beforeInsert(QSqlRecord* buf )
beforeInsert(QSqlRecord* buf)
beforeUpdate(QSqlRecord* buf )
beforeUpdate(QSqlRecord* buf)
beforeUpdate(int row, QSqlRecord &record)
begin()
begin() const
begin(QPaintDevice *)
begin(QPaintDevice *pdev)
beginArray() const
beginArray(int elementMetaTypeId)
beginCommand(const QString &description)
beginEdit(int row, int col, bool replace )
beginEdit(int row, int col, bool replace)
beginEditBlock()
beginEntryList(QDir::Filters filters, const QStringList &filterNames)
beginGroup(const QString &prefix)
beginInsert()
beginInsertColumns(const QModelIndex &parent, int first, int last)
beginInsertRows(const QModelIndex &parent, int first, int last)
beginLayout()
beginMacro(const QString &text)
beginMap() const
beginMap(int keyMetaTypeId, int valueMetaTypeId)
beginMapEntry()
beginMapEntry() const
beginReadArray(const QString &prefix)
beginRemoveColumns(const QModelIndex &parent, int first, int last)
beginRemoveRows(const QModelIndex &parent, int first, int last)
beginStructure()
beginStructure() const
beginTransaction()
beginUpdate(int row, int col, bool replace )
beginWriteArray(const QString &prefix, int size = -1)
bin(Q3TextStream &s ) // set bin notation
bin(QTextStream &s)
bind()
bind(const QHostAddress &, Q_UINT16 )
bind(const QHostAddress &address, quint16 port)
bind(const QHostAddress &address, quint16 port, BindMode mode)
bind(quint16 port = 0)
bind(quint16 port, BindMode mode)
bindTexture(const QImage &image, GLenum target = GL_TEXTURE_2D)
bindTexture(const QImage &image, GLenum target = GL_TEXTURE_2D, GLint format = GL_RGBA)
bindTexture(const QPixmap &pixmap, GLenum target = GL_TEXTURE_2D)
bindTexture(const QPixmap &pixmap, GLenum target = GL_TEXTURE_2D, GLint format = GL_RGBA)
bindTexture(const QString &fileName)
bindToDynamicTexture(GLuint texture)
bindValue(const QString& placeholder, const QVariant& val, QSql::ParamType type = QSql::In)
bindValue(const QString& placeholder, const QVariant& val, QSql::ParamType type)
bindValue(int pos, const QVariant& val, QSql::ParamType type = QSql::In)
bindValue(int pos, const QVariant& val, QSql::ParamType type)
bindValueType(const QString& placeholder) const
bindValueType(int pos) const
bindingSyntax() const
bitBlt(QImage* dst, int dx, int dy, const QImage* src, int sx=0, int sy=0, int sw=-1, int sh=-1, Qt::ImageConversionFlags flags = Qt::AutoColor)
bitBlt(QPaintDevice *dst, const QPoint &dp, const QPaintDevice *src, const QRect &sr=QRect(0,0,-1,-1), bool ignoreMask=false)
bitBlt(QPaintDevice *dst, int dx, int dy, const QImage *src, int sx=0, int sy=0, int sw=-1, int sh=-1, int conversion_flags=0)
bitBlt(QPaintDevice *dst, int dx, int dy, const QPaintDevice *src, int sx=0, int sy=0, int sw=-1, int sh=-1, bool ignoreMask=false)
bitmap() const
bits()
bits() const
black() const
blackF() const
blinkCursor()
block() const
blockBoundingRect(const QTextBlock &block) const = 0
blockCharFormat() const
blockCount() const
blockFormat() const
blockFormatChanged(const QTextBlock &block)
blockFormatIndex() const
blockInserted(const QTextBlock &block)
blockList() const
blockNumber() const
blockRemoved(const QTextBlock &block)
blockSignals(bool b)
blocking() const
blue() const
blueBufferSize() const
blueF() const
bold() const
bold(const QString &family, const QString &style) const
bom(QTextStream &s)
boolProperty(int propertyId) const
bottom() const
bottomDock() const
bottomEdge() const
bottomEdge(int ny) const
bottomLeft() const
bottomMargin() const
bottomRight() const
bound(int) const
boundValue(const QString& placeholder) const
boundValue(int pos) const
boundValueCount() const
boundValueName(int pos) const
boundValues() const
boundary()
boundaryChecking() const
boundedTo(const QSize &) const
boundedTo(const QSizeF &) const
boundingRect() const
boundingRect() const = 0
boundingRect() const=0
boundingRect(QChar) const
boundingRect(const QRect &r, int flags, const QString &text, int tabstops=0, int *tabarray=0) const
boundingRect(const QRect &rect, int flags, const QString &text)
boundingRect(const QRectF &r, int flags, const QString& string, int tabstops=0, int *tabarray=0) const
boundingRect(const QRectF &rect, const QString &text, const QTextOption &o = QTextOption())
boundingRect(const QRectF &rect, int flags, const QString &text)
boundingRect(const QString &string) const
boundingRect(const QString &text) const
boundingRect(int x, int y, int w, int h, int flags, const QString &text)
boundingRectAdvanced() const
boundsOnElement(const QString &id) const
boxLayout()
broadcast() const
brush() const
brush(ColorGroup cg, ColorRole cr) const
brush(const QString &name) const = 0
brushAdded(const QString &name, const QBrush &brush)
brushManager() const
brushOrigin() const
brushPixmap(const QBrush &brush) const = 0
brushProperty(int propertyId) const
brushRemoved(const QString &name)
brushes() const = 0
bsearch(Item ) const // binary search(when sorted)
bsearch(const char *d, uint sz) const
buddy() const
buddy(const QModelIndex &index) const
buffer()
buffer() const
buildDrawableList() const
buildKey()
button() const
button(StandardButton which) const
button(int id) const
buttonClicked()
buttonClicked(QAbstractButton *)
buttonClicked(int)
buttonDownPos(Qt::MouseButton button) const
buttonDownScenePos(Qt::MouseButton button) const
buttonDownScreenPos(Qt::MouseButton button) const
buttonPressed()
buttonPressed(QAbstractButton *)
buttonPressed(int)
buttonReleased()
buttonReleased(QAbstractButton *)
buttonReleased(int)
buttonRole(QAbstractButton *button) const
buttonSymbols() const
buttonText(int button) const
buttons() const
byteOrder() const
bytesAvailable() const
bytesPerLine() const
bytesToWrite() const
bytesWritten(int nbytes )
bytesWritten(qint64 bytes)
cacheEnabled() const
cacheLimit()
cacheMode() // ### Qt 5: remove me
cacheMode() const
cacheStatistics()
cachedSizeHint() const
caching() const
calcBlockSize(int totalSize ) const
calcGridNum(int w, int x) const
calcRect(const QString &text_ = QString())
calcTmpText()
calculateField(const QString& name)
calculateFrame()
calculatePositions(bool onlyVisible = false, int start = 0)
calendarPopup() const
call(QDBus::CallMode mode, const QString &method, const QVariant &arg1 = QVariant(), const QVariant &arg2 = QVariant(), const QVariant &arg3 = QVariant(), const QVariant &arg4 = QVariant(), const QVariant &arg5 = QVariant(), const QVariant &arg6 = QVariant(), const QVariant &arg7 = QVariant(), const QVariant &arg8 = QVariant())
call(const QDBusMessage &message, QDBus::CallMode mode = QDBus::Block, int timeout = -1) const
call(const QString &method, const QVariant &arg1 = QVariant(), const QVariant &arg2 = QVariant(), const QVariant &arg3 = QVariant(), const QVariant &arg4 = QVariant(), const QVariant &arg5 = QVariant(), const QVariant &arg6 = QVariant(), const QVariant &arg7 = QVariant(), const QVariant &arg8 = QVariant())
callFunction(InternalFunction func, void **)
callWithArgumentList(QDBus::CallMode mode, const QString &method, const QList<QVariant> &args)
callWithCallback(const QDBusMessage &message, QObject *receiver, const char *slot, int timeout = -1) const
callWithCallback(const QString &method, const QList<QVariant> &args, QObject *receiver, const char *member)
canConvert(Type t) const
canConvert(const QString &mime, QString flav)
canConvert(const QString &mime, int flav)
canConvertFromMime(const FORMATETC &formatetc, const QMimeData *mimeData) const = 0
canConvertToMime(const QString &mimeType, IDataObject *pDataObj) const = 0
canDecode(QMimeSource *)
canDecode(QMimeSource* e)
canDecode(const QMimeSource* e)
canDelete() const
canEncode(QChar) const
canEncode(const QString&) const
canFetchMore(const QModelIndex &parent = QModelIndex()) const
canFetchMore(const QModelIndex &parent) const
canInsert() const
canInsertFromMimeData(const QMimeData *source) const
canPaste() const
canRead() const
canRead() const = 0
canReadLine() const
canReadLineStderr() const
canReadLineStdout() const
canRedo() const
canRedoChanged(bool canRedo)
canUndo() const
canUndoChanged(bool canUndo)
canUpdate() const
canWrite() const
cancel()
cancelButton() const
cancelButtonPressed()
cancelClicked()
cancelRename(int col)
cancelRenameItem()
canceled()
cancelled()
canonicalFilePath() const
canonicalName() const // ### real-world but uncommon: QStringList
canonicalPath() const
cap(int nth = 0)
capStyle() const
capabilities(QIODevice *device, const QByteArray &format) const = 0
capacity() const
capturedTexts()
cascade()
cascadingSectionResizes() const
caseSensitive() const
caseSensitivity() const
cast(QObject *obj) const
castOrDetach(Type t)
category() const
category(int cat_idx) const = 0
categoryCount() const = 0
cd(const QString &dir )
cd(const QString &dir)
cd(const QString &dirName)
cdUp()
cdUpClicked()
cellActivated(int row, int column)
cellAt(const QTextCursor &c) const
cellAt(int position) const
cellAt(int row, int col) const
cellChanged(int row, int column)
cellClicked(int row, int column)
cellDoubleClicked(int row, int column)
cellEntered(int row, int column)
cellGeometry(int row, int col) const
cellGeometry(int row, int column)
cellHeight() const
cellPos(int) const // obsolete, do not use
cellPressed(int row, int column)
cellRect() const
cellRect(int row, int col) const
cellRect(int row, int column) const
cellWidget(int row, int col) const
cellWidget(int row, int column) const
cellWidth() const
cells() const
center() const
center(QTextStream &s)
center(int x, int y)
center(int x, int y, float xmargin, float ymargin)
centerButtons() const
centerIndicator() const
centerOn(const QGraphicsItem *item)
centerOn(const QPointF &pos)
centerOn(qreal x, qreal y)
centralWidget() const
cfirst() const // get ptr to first list item
changeBounds(const QRect& inarea)
changeChunks()
changeEvent(QEvent *)
changeEvent(QEvent *e)
changeEvent(QEvent *event)
changeFrameRect(const QRect&)
changeGuard(QObject **ptr, QObject *o)
changeItem(const Q3ListBoxItem *, int index)
changeItem(const QPixmap &pixmap, const QString &text, int index )
changeItem(const QPixmap &pixmap, const QString &text, int index)
changeItem(const QPixmap &pixmap, int index )
changeItem(const QPixmap &pixmap, int index)
changeItem(const QString &text, int index )
changeItem(const QString &text, int index)
changeMode(int)
changeOverrideCursor(const QCursor &)
changePersistentIndex(const QModelIndex &from, const QModelIndex &to)
changePersistentIndexList(const QModelIndexList &from, const QModelIndexList &to)
changeSize(int w, int h, QSizePolicy::Policy hData = QSizePolicy::Minimum, QSizePolicy::Policy vData = QSizePolicy::Minimum)
changeSortColumn(int)
changeTab(QWidget *, const QString &)
changeTab(QWidget *child, const QIcon& iconset, const QString &label)
changed()
changed(QClipboard::Mode mode)
changed(const QList<QRectF> &region)
charAt(const QPoint &pos, int *para) const
charFormat() const
charFormatIndex() const
charWidth(const QString &str, int pos) const
characterAt(int, QChar*) const
characters(const QString& ch)
check()
check(const QStyleOptionViewItem &option, const QRect &bounding, const QVariant &variant) const
checkConnectArgs(const char *signal, const char *method)
checkConnection(Q3NetworkOperation *op )
checkForExtension(const QSize &sz)
checkOptimMode()
checkOverflow(double num) const
checkOverflow(int num) const
checkProperty(QObject *obj, const QString &prop) const
checkRect()
checkSanity()
checkState() const
checkStateSet()
checkUndoRedoInfo(UndoRedoInfo::Type t)
checkValid()
checkedAction() const
checkedButton() const
checkedId() const
child(const char *objName, const char *inheritsClass = 0, bool recursiveSearch = true) const
child(int row, int column = 0) const
child(int row, int column) const
childActivated()
childAt(const QPoint &p) const
childAt(int x, int y) const
childAt(int x, int y) const = 0
childCount() const
childCount() const = 0
childDestroyed()
childEvent(QChildEvent *)
childEvent(QChildEvent *e)
childEvent(QChildEvent *event)
childEvent(QChildEvent*)
childFrames() const
childGroups() const
childKeys() const
childNodes() const
childToggled(bool)
childX(QWidget* child)
childY(QWidget* child)
children() const
childrenBoundingRect() const
childrenCheckState(int column) const
childrenCollapsible() const
childrenRect() const
childrenRegion() const
chooseContext(const QGLContext* shareContext = 0)
chooseMacVisual(GDHandle)
choosePixelFormat(void* pfd, HDC pdc)
chooseVisual()
chop(int n)
chunk(int i, int j) const
chunkContaining(int x, int y) const
chunks() const
classInfo(int index) const
classInfoCount() const
classInfoOffset() const
className() const
classNameOf(QObject *object) const = 0
clast() const // get ptr to last list item
cleanCache()
cleanChanged(bool clean)
cleanIcon() const
cleanIndex() const
cleanPath(const QString &path)
cleanText() const
cleanUp(QBrushData *x)
cleanUp(QRegionData *x)
cleanup()
cleanup(QGLColormapData *x)
clear()
clear() // clear vector
clear() // remove all items
clear() = 0 // delete all objects
clear(Mode mode = Clipboard)
clearAdditionalFormats()
clearArguments()
clearBit(int i)
clearCell(int row, int col )
clearCell(int row, int col)
clearCellWidget(int row, int col)
clearContents()
clearDirty(DirtyFlags df)
clearEdit()
clearEditText()
clearEntries()
clearFocus()
clearHistory()
clearInputString()
clearMap()
clearMapping()
clearMask()
clearMaximumDate()
clearMaximumTime()
clearMessage()
clearMinimumDate()
clearMinimumTime()
clearOperationQueue()
clearParagraphBackground(int para)
clearPendingCommands()
clearPendingData()
clearPendingRequests()
clearPluginPaths()
clearProperty(int propertyId)
clearPropertyFlags()
clearRange(Q3ListViewItem *from, Q3ListViewItem *to, bool includeFirst = true)
clearSelection()
clearSelection(bool changePropertyDisplay = true)
clearSelection(bool repaint = true)
clearStatusText()
clearUndoRedo()
clearValidator()
clearValues()
click()
clicked(Q3IconViewItem *)
clicked(Q3IconViewItem *, const QPoint &)
clicked(Q3ListBoxItem *)
clicked(Q3ListBoxItem *, const QPoint &)
clicked(Q3ListViewItem *)
clicked(Q3ListViewItem *, const QPoint &, int)
clicked(QAbstractButton *button)
clicked(bool checked = false)
clicked(const QDate &date)
clicked(const QModelIndex &index)
clicked(const QString& href)
clicked(int id)
clicked(int parag, int index)
clicked(int row, int col, int button, const QPoint &mousePos)
clicked(int section)
clickedButton() const
clientClosed()
clientDone(bool )
clientIsEmbedded()
clientReply(const Q3HttpResponseHeader &rep )
clientStateChanged(int )
clientWinId() const
clipOperation() const
clipPath() const
clipRect() const
clipRectangles(int &num) const
clipRegion() const
clipboard()
clipboardChanged()
clipper() const
clone() const
clone() const = 0
clone(QObject *parent = 0) const
cloneDatabase(const QSqlDatabase &other, const QString& connectionName)
cloneNode(bool deep = true) const
cloneX11Data(const QPaintDevice *)
close()
close(bool)
closeActiveWindow()
closeAllWindows()
closeAssistant()
closeConnection()
closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint = NoHint)
closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint)
closeEvent(QCloseEvent *)
closeEvent(QCloseEvent *event)
closeMode() const
closePersistentEditor(QListWidgetItem *item)
closePersistentEditor(QTableWidgetItem *item)
closePersistentEditor(QTreeWidgetItem *item, int column = 0)
closePersistentEditor(const QModelIndex &index)
closeReadChannel(ProcessChannel channel)
closeStdin()
closeStdinLaunch()
closeSubpath()
closeWriteChannel()
closed()
closed() const
closestAcceptableSize(const QWidget *w, const QSize &s)
closestLegalPosition(int p)
closestLegalPosition(int, int)
closingDown()
clut() const
cmp(const QVariant &other) const
codec()
codec() const
codecForCStrings()
codecForHtml(const QByteArray &ba)
codecForLocale()
codecForMib(int mib)
codecForName(const QByteArray &name)
codecForTr()
col() const
colSpan() const
collapse(const QModelIndex &index)
collapseAll()
collapseItem(const QTreeWidgetItem *item)
collapsed(Q3ListViewItem *item)
collapsed(const QModelIndex &index)
collateCopies() const
collateCopiesEnabled() const
collidesWith(const Q3CanvasItem*) const
collidesWith(const Q3CanvasItem*) const=0
collidesWith(const Q3CanvasSprite*, const Q3CanvasPolygonalItem*, const Q3CanvasRectangle*, const Q3CanvasEllipse*, const Q3CanvasText*) const
collidesWith(const Q3CanvasSprite*, const Q3CanvasPolygonalItem*, const Q3CanvasRectangle*, const Q3CanvasEllipse*, const Q3CanvasText*) const = 0
collidesWithItem(const QGraphicsItem *other, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
collidesWithPath(const QPainterPath &path, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
collidingItems(Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
collidingItems(const QGraphicsItem *item, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
collisions(bool exact /* NO DEFAULT */) const
collisions(const Q3PointArray& pa, const Q3CanvasItem* item, bool exact) const
collisions(const QPoint&) const
collisions(const QRect&) const
color() const
color(int i) const
colorAt(uint pixel) const
colorData() const
colorGroup() const
colorIndex(const QColor& c) const
colorMode() const
colorNames()
colorProperty(int propertyId) const
colorSpec()
colorTable() const
colormap() const
column() const
column(const QTableWidgetItem *item) const
columnAlignment(int) const
columnAt(int x) const
columnAt(int) const
columnClicked(int col )
columnClicked(int col)
columnCount() const
columnCount(const QModelIndex &parent = QModelIndex()) const
columnCount(const QModelIndex &parent = QModelIndex()) const = 0
columnCount(const QModelIndex &parent) const
columnCountChanged(int oldCount, int newCount)
columnIndexChanged(int section, int fromIndex, int toIndex)
columnIntersectsSelection(int column, const QModelIndex &parent) const
columnMinimumWidth(int column) const
columnMode() const
columnMoved()
columnMoved(int column, int oldIndex, int newIndex)
columnMovingEnabled() const
columnNumber() const
columnNumber() const = 0
columnPos(int col) const
columnResized(int column, int oldSize, int newSize)
columnResized(int column, int oldWidth, int newWidth)
columnSpan() const
columnSpan(int row, int column) const
columnStretch(int column) const
columnText(int column) const
columnViewportPosition(int column) const
columnWidth(int col) const
columnWidth(int column) const
columnWidthChanged(int col)
columnWidthMode(int column) const
columns() const
columnsAboutToBeInserted(const QModelIndex &parent, int first, int last)
columnsAboutToBeRemoved(const QModelIndex &parent, int first, int last)
columnsInserted(const QModelIndex &parent, int first, int last)
columnsRemoved(const QModelIndex &parent, int first, int last)
combinedMatrix() const
combiningClass() const
commandFinished(int, bool )
commandFinished(int, bool)
commandHistory() const = 0
commandStarted(int )
commandStarted(int)
comment() const = 0
comment(const QString& ch)
commit()
commitData(QSessionManager& sm)
commitData(QWidget *editor)
commitDataRequest(QSessionManager &sessionManager)
commitTransaction()
communication() const
compare(Q3IconViewItem *i) const
compare(Q3ListViewItem *i, int col, bool) const
compare(const QLatin1String &other, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
compare(const QString &s) const
compare(const QString &s, Qt::CaseSensitivity cs) const
compareItems(Item, Item )
compareItems(Q3PtrCollection::Item d1, Q3PtrCollection::Item d2 )
compareItems(Q3PtrCollection::Item, Q3PtrCollection::Item )
compare_helper(bool success, const char *msg, char *val1, char *val2, const char *expected, const char *actual, const char *file, int line)
compare_helper(bool success, const char *msg, const char *file, int line)
compare_string_helper(const char *t1, const char *t2, const char *actual, const char *expected, const char *file, int line)
complete(const QRect& rect = QRect())
completeBaseName() const
completeSuffix() const
completer() const
completionColumn() const
completionCount() const
completionIndex(const QString &, int ) const
completionMode() const
completionModel() const
completionPrefix() const
completionRole() const
compositionMode() const
compressEvent(QEvent *, QObject *receiver, QPostEventList *)
computeProperties(QObject *obj)
confirmCancel(QSql::Op m )
confirmCancel(QSql::Op m)
confirmCancels() const
confirmDelete() const
confirmEdit(QSql::Op m )
confirmEdit(QSql::Op m)
confirmEdits() const
confirmInsert() const
confirmOverwrite() const
confirmUpdate() const
connect(const QHostAddress &, Q_UINT16 )
connect(const QObject *receiver, const char *member)
connect(const QObject *sender, const char *signal, const QObject *receiver, const char *member, Qt::ConnectionType =#ifdef QT3_SUPPORT Qt::AutoCompatConnection#else Qt::AutoConnection#endif )
connect(const QObject *sender, const char *signal, const char *member, Qt::ConnectionType type =#ifdef QT3_SUPPORT Qt::AutoCompatConnection#else Qt::AutoConnection#endif ) const
connect(const QObject *sender, int signal_index, const QObject *receiver, int method_index, int type = 0, int *types = 0)
connect(const QString &service, const QString &path, const QString &interface, const QString &name, QObject *receiver, const char *slot)
connect(const QString &service, const QString &path, const QString &interface, const QString &name, const QString& signature, QObject *receiver, const char *slot)
connectItem(int id, const QObject *receiver, const char* member )
connectNotify(const char * signal )
connectNotify(const char *)
connectNotify(const char *signal )
connectNotify(const char *signal)
connectOptions() const
connectPath(const QPainterPath &path)
connectSlotsByName(QObject *o)
connectToBus(BusType type, const QString &name)
connectToBus(const QString &address, const QString &name)
connectToHost(const QHostAddress &address, quint16 port, OpenMode mode = ReadWrite)
connectToHost(const QString &host, Q_UINT16 port )
connectToHost(const QString &host, Q_UINT16 port=21 )
connectToHost(const QString &host, quint16 port=21)
connectToHost(const QString &hostName, quint16 port, OpenMode mode = ReadWrite)
connectToHostImplementation(const QString &hostName, quint16 port, OpenMode mode = ReadWrite)
connectToModel(const QAbstractItemModel *model) const
connected()
connection() const
connectionClosed()
connectionClosed() // same as disconnected()
connectionNames()
connectionStateChanged(int state, const QString &data )
constBegin() const
constData() const
constEnd() const
constFind(const Key &key) const
const_iterator
const_pointer
const_reference
construct(int type, const void *copy = 0)
consumeWriteBuf(Q_ULONG nbytes )
containerClosed()
containerOfWidget(QWidget *w) const = 0
containerWinId() const
contains(Item ) const // get number of equal matches
contains(Q3PtrCollection::Item ) const // get number of equal matches
contains(QChar c, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
contains(char c) const
contains(const Key &key) const
contains(const QByteArray &a) const
contains(const QModelIndex &index) const
contains(const QPoint &p) const
contains(const QPoint &p, bool proper=false) const
contains(const QPoint& pnt) const
contains(const QPointF &p) const
contains(const QPointF &point) const
contains(const QPointF &pt) const
contains(const QRect &r) const
contains(const QRect &r, bool proper = false) const
contains(const QRectF &r) const
contains(const QRectF &rect) const
contains(const QString &key) const
contains(const QString &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
contains(const QString &str, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
contains(const QString& connectionName = QLatin1String(defaultConnection))
contains(const QString& fieldName) const
contains(const QString& name) const
contains(const T &t) const
contains(const char *a) const
contains(const char *d, uint sz) const
contains(int position) const
contains(int x, int y) const // inline methods, _don't_ merge these
contains(int x, int y, bool proper) const
contains(qreal x, qreal y) const
containsRef(Item ) const // get number of exact matches
containsRef(Q3PtrCollection::Item ) const // get number of exact matches
contentHandler() const
contentHandler() const = 0
contentLength() const
contentType() const
contents() const = 0
contentsChange(int from, int charsRemoves, int charsAdded)
contentsChanged()
contentsContextMenuEvent(QContextMenuEvent * )
contentsContextMenuEvent(QContextMenuEvent * e)
contentsContextMenuEvent(QContextMenuEvent *)
contentsContextMenuEvent(QContextMenuEvent *e)
contentsContextMenuEvent(QContextMenuEvent* e )
contentsDragEnterEvent(QDragEnterEvent * )
contentsDragEnterEvent(QDragEnterEvent *e)
contentsDragLeaveEvent(QDragLeaveEvent * )
contentsDragLeaveEvent(QDragLeaveEvent *e)
contentsDragMoveEvent(QDragMoveEvent * )
contentsDragMoveEvent(QDragMoveEvent *e)
contentsDropEvent(QDropEvent * )
contentsDropEvent(QDropEvent *e)
contentsHeight() const
contentsMouseDoubleClickEvent(QMouseEvent * e)
contentsMouseDoubleClickEvent(QMouseEvent *e)
contentsMouseDoubleClickEvent(QMouseEvent* )
contentsMouseDoubleClickEvent(QMouseEvent*)
contentsMouseMoveEvent(QMouseEvent * e)
contentsMouseMoveEvent(QMouseEvent *e)
contentsMouseMoveEvent(QMouseEvent* )
contentsMouseMoveEvent(QMouseEvent*)
contentsMousePressEvent(QMouseEvent * e)
contentsMousePressEvent(QMouseEvent *e)
contentsMousePressEvent(QMouseEvent* )
contentsMousePressEvent(QMouseEvent* e )
contentsMousePressEvent(QMouseEvent*)
contentsMousePressEventEx(QMouseEvent * e)
contentsMousePressEventEx(QMouseEvent *e)
contentsMousePressEventEx(QMouseEvent*)
contentsMouseReleaseEvent(QMouseEvent * e)
contentsMouseReleaseEvent(QMouseEvent *e)
contentsMouseReleaseEvent(QMouseEvent* )
contentsMouseReleaseEvent(QMouseEvent*)
contentsMouseReleaseEventEx(QMouseEvent * e)
contentsMoving(int x, int y)
contentsRect() const
contentsSize() const
contentsToViewport(const QPoint& ) const
contentsToViewport(int x, int y, int& vx, int& vy ) const
contentsToViewport2(const QPoint &p)
contentsToViewport2(int x, int y, int& vx, int& vy)
contentsWheelEvent(QWheelEvent * )
contentsWheelEvent(QWheelEvent *e)
contentsWidth() const
contentsX() const
contentsY() const
context()
context() const
contextMenu() const
contextMenuEvent(QContextMenuEvent * )
contextMenuEvent(QContextMenuEvent *)
contextMenuEvent(QContextMenuEvent *e)
contextMenuEvent(QContextMenuEvent *ev)
contextMenuEvent(QContextMenuEvent *event)
contextMenuEvent(QGraphicsSceneContextMenuEvent *event)
contextMenuPolicy() const
contextMenuRequested(Q3IconViewItem* item, const QPoint &pos)
contextMenuRequested(Q3ListBoxItem *, const QPoint &)
contextMenuRequested(Q3ListViewItem *, const QPoint &, int)
contextMenuRequested(int row, int col, const QPoint &pos)
contexts() const
continueCopy(Q3NetworkOperation *op )
continueFreeData(int offset)
controlPointRect() const
controlPoints() const
convert(Type t)
convertBitOrder(Endian) const
convertDepth(int, Qt::ImageConversionFlags flags = Qt::AutoColor) const
convertDepthWithPalette(int, QRgb* p, int pc, Qt::ImageConversionFlags flags = Qt::AutoColor) const
convertFromImage(const QImage &, ColorMode mode)
convertFromMime(const FORMATETC &formatetc, const QMimeData *mimeData, STGMEDIUM * pmedium) const = 0
convertFromMime(const QString &mime, QVariant data, QString flav)
convertFromMime(const QString &mime, QVariant data, int flav)
convertFromPlainText(const QString &plain, WhiteSpaceMode mode = WhiteSpacePre)
convertFromPlainText(const QString&, Q3StyleSheetItem::WhiteSpaceMode mode = Q3StyleSheetItem::WhiteSpacePre)
convertFromUnicode(const QChar *in, int length, ConverterState *state) const = 0
convertSeparators(const QString &pathName)
convertTo(Spec colorSpec) const
convertToGLFormat(const QImage& img)
convertToMime(const QString &mime, QList<QByteArray> data, QString flav)
convertToMime(const QString &mime, QList<QByteArray> data, int flav)
convertToMime(const QString &mimeType, IDataObject *pDataObj, QVariant::Type preferredType) const = 0
convertToUnicode(const char *in, int length, ConverterState *state) const = 0
converterFromMime(const FORMATETC &formatetc, const QMimeData *mimeData)
converterToMime(const QString &mimeType, IDataObject *pDataObj)
convertor(uchar, const QString &mime, QString flav)
convertorName()
coordinateMode() const
coordinateOffset() const
copy()
copy() const
copy() const // helper of detach.
copy(const QRect &rect = QRect()) const
copy(const QString &fileName, const QString &newName)
copy(const QString &from, const QString &to, bool move = false, bool toPath = true )
copy(const QString &newName)
copy(const QStringList &files, const QString &dest, bool move = false )
copy(int x, int y, int width, int height) const
copyAvailable(bool b)
copyAvailable(bool)
copyBlt(QPixmap *dst, int dx, int dy, const QPixmap *src, int sx=0, int sy=0, int sw=-1, int sh=-1)
copyGotData(const QByteArray &data, Q3NetworkOperation *op )
copyToClipboard()
copyX11Data(const QPaintDevice *)
core() const
core() const = 0
corner(Qt::Corner corner) const
cornerWidget() const
cornerWidget(Qt::Corner corner = Qt::TopRightCorner) const
correctionMode() const
count() const
count() const // return number of nodes
count() const = 0
count(QChar c, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
count(bool on) const
count(char c) const
count(const Key &key) const
count(const QByteArray &a) const
count(const QRegExp &) const
count(const QString &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
count(const T &t) const
count(const char *a) const
countFlavors()
country() const
countryToString(Country country)
create(DomAction *ui_action, QObject *parent)
create(DomActionGroup *ui_action_group, QObject *parent)
create(DomLayout *ui_layout, QLayout *layout, QWidget *parentWidget)
create(DomLayoutItem *ui_layoutItem, QLayout *layout, QWidget *parentWidget)
create(DomUI *ui, QWidget *parentWidget)
create(DomWidget *ui_widget, QWidget *parentWidget)
create(QIODevice *device, const QByteArray &format = QByteArray()) const = 0
create(WId = 0, bool initializeWindow = true, bool destroyOldWindow = true)
create(const QGLContext* shareContext = 0)
create(const QSize&, int depth, int numColors=0, Endian bitOrder=IgnoreEndian)
create(const QString &fileName)
create(const QString &fileName) const = 0
create(const QString &filename)
create(const QString &key )
create(const QString &key)
create(const QString &key, QObject *object)
create(const QString &key, QObject *parent ) // should be a toplevel widget
create(const QString &name)
create(const QString& name)
create(const QString&)
create(int type, const void *copy)
create(int width, int height, int depth, int numColors=0, Endian bitOrder=IgnoreEndian)
createAction(QObject *parent = 0)
createAction(QObject *parent = 0, const QString &name = QString())
createAction(QObject *parent, const QString &name)
createActionEditor(QDesignerFormEditorInterface *core, QWidget *parent)
createActionGroup(QObject *parent = 0, const QString &name = QString())
createActionGroup(QObject *parent, const QString &name)
createActionRefDom(QAction *action)
createAlphaMask(Qt::ImageConversionFlags flags = Qt::AutoColor) const
createAttribute(const QString& name)
createAttributeNS(const QString& nsURI, const QString& qName)
createCDATASection(const QString& data)
createColorGroup(ColorGroup) const
createComment(const QString& data)
createConnections(DomConnections *connections, QWidget *widget)
createData()
createDatabase()
createDockWindowMenu(DockWindows dockWindows = AllDockWindows) const
createDocument(const QString& nsURI, const QString& qName, const QDomDocumentType& doctype)
createDocumentFragment()
createDocumentType(const QString& qName, const QString& publicId, const QString& systemId)
createDom(QAction *action)
createDom(QActionGroup *actionGroup)
createDom(QLayout *layout, DomLayout *ui_layout, DomWidget *ui_parentWidget)
createDom(QLayoutItem *item, DomLayout *ui_parentLayout, DomWidget *ui_parentWidget)
createDom(QSpacerItem *spacer, DomLayout *ui_parentLayout, DomWidget *ui_parentWidget)
createDom(QWidget *widget, DomWidget *ui_parentWidget, bool recursive = true)
createEditor() const
createEditor(QVariant::Type type, QWidget *parent) const
createEditor(QWidget * parent, const QSqlField * field)
createEditor(QWidget * parent, const QVariant & v)
createEditor(QWidget * parent, const QVariant & variant)
createEditor(QWidget *parent, const QStyleOptionViewItem &option, const QModelIndex &index) const
createEditor(int row, int col, bool initFromCell ) const
createEditor(int row, int col, bool initFromCell) const
createElement(const QString& tagName)
createElementNS(const QString& nsURI, const QString& qName)
createEntityReference(const QString& name)
createError(const QString &name, const QString &msg)
createErrorReply(const QString name, const QString &msg) const
createExtendedKeyEvent(Type type, int key, Qt::KeyboardModifiers modifiers, quint32 nativeScanCode, quint32 nativeVirtualKey, quint32 nativeModifiers, const QString& text = QString(), bool autorep = false, ushort count = 1)
createExtension(QObject *object, const QString &iid, QObject *parent) const
createField(int i, const QString& prefix, bool verbose) const
createForMib(int mib)
createForName(const QByteArray &name)
createFormEditor(QObject *parent)
createFormWindow(QWidget *parentWidget = 0, Qt::WindowFlags flags = 0)
createFormWindowSettingsDialog(QDesignerFormWindowInterface *formWindow, QWidget *parentWidget)
createHandle()
createHeuristicMask(bool clipTight = true) const
createIndex(int row, int column, int id) const
createIndex(int row, int column, quint32 id) const
createIndex(int row, int column, void *data = 0) const
createItemGroup(const QList<QGraphicsItem *> &items)
createLayout(QWidget *widget, QLayout *layout, int type) const = 0
createLayout(const QString &className, QObject *parent = 0, const QString &name = QString())
createLayout(const QString &layoutName, QObject *parent, const QString &name)
createLine()
createList(QTextListFormat::Style style)
createList(const QTextListFormat &format)
createLocalFile(QFile &file)
createMaskFromColor(const QColor &maskColor) const
createMethodCall(const QString &destination, const QString &path, const QString &interface, const QString &method)
createMimeDataFromSelection() const
createNewSocket()
createNode(uint h, const Key &key, const T &value, Node **nextNode)
createObject()
createObject() const = 0
createObject(const QTextFormat &f)
createObjectInspector(QDesignerFormEditorInterface *core, QWidget *parent)
createPopup()
createPopupMenu()
createPopupMenu(const QPoint& pos)
createProcessingInstruction(const QString& target, const QString& data)
createProperty(QObject *object, const QString &propertyName, const QVariant &value)
createPropertyEditor(QDesignerFormEditorInterface *core, QWidget *parent)
createRedoAction(QObject *parent, const QString &prefix = QString()) const
createReply(const QList<QVariant> &arguments = QList<QVariant>()) const
createResourceEditor(QDesignerFormEditorInterface *core, QWidget *parent)
createResult() const
createResult() const = 0
createSignal(const QString &path, const QString &interface, const QString &name)
createSignalSlotEditor(QDesignerFormEditorInterface *core, QWidget *parent)
createStandardContextMenu()
createStroke(const QPainterPath &path) const
createTaskMenu(QDesignerFormEditorInterface *core, QObject *parent)
createTextNode(const QString& data)
createUndoAction(QObject *parent, const QString &prefix = QString()) const
createUuid()
createWidget(QWidget *parent)
createWidget(QWidget *parent) const = 0
createWidget(const QString &className, QWidget *parent = 0, const QString &name = QString())
createWidget(const QString &name, QWidget *parentWidget = 0) const = 0
createWidget(const QString &widgetName, QWidget *parentWidget, const QString &name)
createWidgetBox(QDesignerFormEditorInterface *core, QWidget *parent)
createWinId() // internal, going away
created() const
createdDirectory(const QUrlInfo &, Q3NetworkOperation *res )
createdDirectory(const QUrlInfo &info, Q3NetworkOperation *)
createdWidgets() const
creator() const
critical(QWidget *parent, const QString &title, const QString &text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton)
critical(QWidget *parent, const QString &title, const QString& text, const QString& button0Text, const QString& button1Text = QString(), const QString& button2Text = QString(), int defaultButtonNumber = 0, int escapeButtonNumber = -1)
critical(QWidget *parent, const QString &title, const QString& text, int button0, int button1, int button2 = 0)
cubicBezier() const
cubicTo(const QPointF &ctrlPt1, const QPointF &ctrlPt2, const QPointF &endPt)
cubicTo(qreal ctrlPt1x, qreal ctrlPt1y, qreal ctrlPt2x, qreal ctrlPt2y, qreal endPtx, qreal endPty)
currEditCol() const
currEditRow() const
current()
current() const
current() const = 0
currentAlignmentChanged(int a)
currentBlock() const
currentBlockState() const
currentBlockUserData() const
currentBrush() const = 0
currentBrushChanged(const QString &name, const QBrush &brush)
currentCell() const = 0
currentCellChanged(int currentRow, int currentColumn, int previousRow, int previousColumn)
currentChanged()
currentChanged(Q3IconViewItem *item)
currentChanged(Q3ListBoxItem *)
currentChanged(Q3ListViewItem *)
currentChanged(QSqlRecord* record )
currentChanged(QWidget *)
currentChanged(const QModelIndex &current, const QModelIndex &old)
currentChanged(const QModelIndex &current, const QModelIndex &previous)
currentChanged(const QSqlRecord* record)
currentChanged(const QString &path)
currentChanged(int index)
currentChanged(int row, int col)
currentChanged(int)
currentCharFormat() const
currentCharFormatChanged(const QTextCharFormat &format)
currentColorChanged(const QColor &c)
currentColumn() const
currentColumnChanged(const QModelIndex &current, const QModelIndex &previous)
currentCommand() const
currentCompletion() const
currentContext()
currentDataTag()
currentDate()
currentDate(Qt::TimeSpec spec)
currentDateTime()
currentDestinationDevice() const
currentDevice() const
currentEdited()
currentFont() const
currentFontChanged(const QFont &f)
currentFrame() const
currentFrameNumber() const
currentId() const
currentImage() const
currentImageNumber() const
currentImageRect() const
currentIndex() const
currentIndex() const = 0
currentIndexChanged(const QString &)
currentIndexChanged(int index)
currentInsertMode() const = 0
currentItem() const
currentItemChanged(QListWidgetItem *current, QListWidgetItem *previous)
currentItemChanged(QTableWidgetItem *current, QTableWidgetItem *previous)
currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous)
currentList() const
currentMessage() const
currentNode() const // get current node
currentPage() const
currentPageChanged(int year, int month)
currentParagraph() const
currentPath()
currentPath(const QString &path = QString())
currentPixmap() const
currentPosition() const
currentPropertyName() const = 0
currentRecord() const
currentRemoved()
currentRequest() const
currentRow() const
currentRowChanged(const QModelIndex &current, const QModelIndex &previous)
currentRowChanged(int currentRow)
currentSection() const
currentSelection() const
currentSignature() const
currentSourceDevice() const
currentTable() const
currentTestFailed()
currentTestFunction()
currentText() const
currentTextChanged(const QString &currentText)
currentThread()
currentThreadId()
currentTime()
currentTime() const
currentTime(Qt::TimeSpec spec)
currentTool() const = 0
currentValue() const
currentVerticalAlignmentChanged(Q3TextEdit::VerticalAlignment a)
currentWidget() const
cursor() const
cursor() const = 0
cursorBackward(bool mark, int steps = 1)
cursorChanged(Q3SqlCursor::Mode mode)
cursorChanged(QSql::Op mode )
cursorDown(bool mark=false)
cursorFlashTime()
cursorForPosition(const QPoint &pos) const
cursorForward(bool mark, int steps = 1)
cursorLeft(bool mark=false, bool wrap = true)
cursorPoint() const
cursorPosition() const
cursorPositionAt(const QPoint &pos)
cursorPositionChanged()
cursorPositionChanged(Q3TextCursor *c)
cursorPositionChanged(const QTextCursor &cursor)
cursorPositionChanged(int para, int pos)
cursorPositionChanged(int, int)
cursorRect() const
cursorRect(const QTextCursor &cursor) const
cursorRight(bool mark=false, bool wrap = true)
cursorToX(int *cursorPos, Edge edge = Leading) const
cursorUp(bool mark=false)
cursorWidth() const
cursorWordBackward(bool mark)
cursorWordForward(bool mark)
curveShape() const
curveThreshold() const
customColor(int)
customContextMenuRequested(const QPoint &pos)
customCount()
customEvent(QEvent *)
customWidgets() const
customWidgets() const = 0
customize()
cut()
cyan() const
cyanF() const
d() const
d_func(), QSizeF _q_dynamicDocumentSizeSlot())
d_func(), bool _q_canReadNotification())
d_func(), bool _q_canReadStandardError())
d_func(), bool _q_canReadStandardOutput())
d_func(), bool _q_canWrite())
d_func(), bool _q_canWriteNotification())
d_func(), bool _q_processDied())
d_func(), bool _q_startupNotification())
d_func(), int _q_dynamicPageCountSlot())
d_func(), void _q_abortConnectionAttempt())
d_func(), void _q_actionChanged())
d_func(), void _q_actionHovered())
d_func(), void _q_actionTriggered())
d_func(), void _q_activateAnchor(const QString &))
d_func(), void _q_addCustom())
d_func(), void _q_adjustScrollbars())
d_func(), void _q_autoCompleteDirectory(const QString &text))
d_func(), void _q_autoCompleteFileName(const QString &text))
d_func(), void _q_btnBrowseClicked())
d_func(), void _q_btnPropertiesClicked())
d_func(), void _q_buttonClicked())
d_func(), void _q_buttonClicked(QAbstractButton *))
d_func(), void _q_buttonPressed())
d_func(), void _q_clipboardChanged())
d_func(), void _q_closeEditor(QWidget *, QAbstractItemDelegate::EndEditHint))
d_func(), void _q_columnsAboutToBeInserted(const QModelIndex&, int, int))
d_func(), void _q_columnsAboutToBeRemoved(const QModelIndex&, int, int))
d_func(), void _q_columnsRemoved(const QModelIndex&, int, int))
d_func(), void _q_commitData(QWidget *))
d_func(), void _q_commitDataAndCloseEditor(QWidget*))
d_func(), void _q_complete(QModelIndex))
d_func(), void _q_completionHighlighted(QString))
d_func(), void _q_completionSelected(const QItemSelection&))
d_func(), void _q_connectToNextAddress())
d_func(), void _q_createDirectory())
d_func(), void _q_currentChanged(const QModelIndex &index))
d_func(), void _q_currentChanged(const QModelIndex&, const QModelIndex &))
d_func(), void _q_currentChanged(const QString &))
d_func(), void _q_currentCharFormatChanged(const QTextCharFormat &))
d_func(), void _q_dataChanged(const QModelIndex &, const QModelIndex &))
d_func(), void _q_dataChanged(const QModelIndex &topLeft, const QModelIndex &bottomRight))
d_func(), void _q_delayedRehighlight())
d_func(), void _q_deleteCurrent())
d_func(), void _q_deleteSelected())
d_func(), void _q_directoryChanged(const QString &path, bool removed))
d_func(), void _q_documentModified())
d_func(), void _q_editingFinished())
d_func(), void _q_editorCursorPositionChanged(int, int))
d_func(), void _q_editorTextChanged(const QString &))
d_func(), void _q_emitCurrentIndexChanged(int index))
d_func(), void _q_emitCurrentItemChanged(const QModelIndex &previous, const QModelIndex &current))
d_func(), void _q_emitHighlighted(const QModelIndex &))
d_func(), void _q_emitItemActivated(const QModelIndex &index))
d_func(), void _q_emitItemChanged(const QModelIndex &index))
d_func(), void _q_emitItemChanged(const QModelIndex &topLeft, const QModelIndex &bottomRight))
d_func(), void _q_emitItemClicked(const QModelIndex &index))
d_func(), void _q_emitItemCollapsed(const QModelIndex &index))
d_func(), void _q_emitItemDoubleClicked(const QModelIndex &index))
d_func(), void _q_emitItemEntered(const QModelIndex &index))
d_func(), void _q_emitItemExpanded(const QModelIndex &index))
d_func(), void _q_emitItemPressed(const QModelIndex &index))
d_func(), void _q_emitSignals())
d_func(), void _q_emitUpdated())
d_func(), void _q_endAnimatedOperation())
d_func(), void _q_ensureVisible(const QRectF &))
d_func(), void _q_enterDirectory())
d_func(), void _q_enterDirectory(const QModelIndex &index))
d_func(), void _q_enterDirectory(const QString &path))
d_func(), void _q_familyHighlighted(int))
d_func(), void _q_fileChanged(const QString &path, bool removed))
d_func(), void _q_generateBspTree())
d_func(), void _q_handleButtonClicked())
d_func(), void _q_handleButtonDestroyed())
d_func(), void _q_handlerDestroyed(QObject *obj))
d_func(), void _q_highlightLink(const QString &))
d_func(), void _q_hslide(int))
d_func(), void _q_internalShortcutActivated(int))
d_func(), void _q_itemSelected(const QModelIndex &item))
d_func(), void _q_layoutAboutToBeChanged())
d_func(), void _q_layoutChanged())
d_func(), void _q_linkHovered(const QString &))
d_func(), void _q_loadNextFrame())
d_func(), void _q_minimizeActiveWindow())
d_func(), void _q_modelDestroyed())
d_func(), void _q_modelReset())
d_func(), void _q_monthChanged(QAction *act))
d_func(), void _q_movieResized(const QSize&))
d_func(), void _q_movieUpdated(const QRect&))
d_func(), void _q_navigateToParent())
d_func(), void _q_navigateToPrevious())
d_func(), void _q_newColorTypedIn(QRgb rgb))
d_func(), void _q_newCustom(int, int))
d_func(), void _q_newHsv(int h, int s, int v))
d_func(), void _q_newStandard(int, int))
d_func(), void _q_nextMonthClicked())
d_func(), void _q_normalizeActiveWindow())
d_func(), void _q_notified())
d_func(), void _q_operationMenuActivated(QAction *))
d_func(), void _q_paperSizeChanged(int))
d_func(), void _q_piConnectState(int))
d_func(), void _q_piError(int, const QString&))
d_func(), void _q_piFinished(const QString&))
d_func(), void _q_piFtpReply(int, const QString&))
d_func(), void _q_popupOperationMenu(const QPoint&))
d_func(), void _q_popupPressed())
d_func(), void _q_prevMonthClicked())
d_func(), void _q_printToFileChanged(int))
d_func(), void _q_printerChanged(int))
d_func(), void _q_processIncomingConnection())
d_func(), void _q_rbPrintRangeToggled(bool))
d_func(), void _q_reformatBlocks(int from, int charsRemoved, int charsAdded))
d_func(), void _q_refresh())
d_func(), void _q_reload())
d_func(), void _q_removeItemLater(QGraphicsItem *item))
d_func(), void _q_removeTab(int))
d_func(), void _q_renameCurrent())
d_func(), void _q_repaintContents(const QRectF &r))
d_func(), void _q_repaintItem())
d_func(), void _q_reregisterTimers(void *))
d_func(), void _q_resetButton())
d_func(), void _q_returnPressed())
d_func(), void _q_rowsAboutToBeInserted(const QModelIndex & parent, int start, int end))
d_func(), void _q_rowsAboutToBeInserted(const QModelIndex&, int, int))
d_func(), void _q_rowsAboutToBeRemoved(const QModelIndex & parent, int start, int end))
d_func(), void _q_rowsAboutToBeRemoved(const QModelIndex&, int, int))
d_func(), void _q_rowsInserted(const QModelIndex & parent, int start, int end))
d_func(), void _q_rowsRemoved(const QModelIndex & parent, int start, int end))
d_func(), void _q_rowsRemoved(const QModelIndex&, int, int))
d_func(), void _q_scrollBarChanged())
d_func(), void _q_scrollTabs())
d_func(), void _q_sectionsRemoved(const QModelIndex &parent, int logicalFirst, int logicalLast))
d_func(), void _q_senderDestroyed())
d_func(), void _q_serviceOwnerChanged(QString,QString,QString))
d_func(), void _q_setChildrenEnabled(bool b))
d_func(), void _q_setUnsorted())
d_func(), void _q_showContextMenu(const QPoint &pos))
d_func(), void _q_showDetails())
d_func(), void _q_showHidden())
d_func(), void _q_showIfNotHidden())
d_func(), void _q_showList())
d_func(), void _q_showOperationMenu())
d_func(), void _q_showOrHideScrollBars())
d_func(), void _q_showTab(int))
d_func(), void _q_sizeChanged(const QString &))
d_func(), void _q_sizeHighlighted(int))
d_func(), void _q_slotBytesWritten(qint64 numBytes))
d_func(), void _q_slotChangeDate(const QDate &date, bool changeMonth))
d_func(), void _q_slotClosed())
d_func(), void _q_slotConnected())
d_func(), void _q_slotDoFinished())
d_func(), void _q_slotError(QAbstractSocket::SocketError))
d_func(), void _q_slotReadyRead())
d_func(), void _q_slotSendRequest())
d_func(), void _q_sort())
d_func(), void _q_sortByColumn(int))
d_func(), void _q_sortByDate())
d_func(), void _q_sortByName())
d_func(), void _q_sortBySize())
d_func(), void _q_sourceColumnsAboutToBeInserted(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceColumnsAboutToBeInserted(const QModelIndex&,int,int))
d_func(), void _q_sourceColumnsAboutToBeRemoved(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceColumnsAboutToBeRemoved(const QModelIndex&,int,int))
d_func(), void _q_sourceColumnsInserted(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceColumnsInserted(const QModelIndex&,int,int))
d_func(), void _q_sourceColumnsRemoved(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceColumnsRemoved(const QModelIndex&,int,int))
d_func(), void _q_sourceDataChanged(const QModelIndex &source_top_left, const QModelIndex &source_bottom_right))
d_func(), void _q_sourceDataChanged(const QModelIndex&,const QModelIndex&))
d_func(), void _q_sourceHeaderDataChanged(Qt::Orientation orientation, int start, int end))
d_func(), void _q_sourceLayoutAboutToBeChanged())
d_func(), void _q_sourceLayoutChanged())
d_func(), void _q_sourceReset())
d_func(), void _q_sourceRowsAboutToBeInserted(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceRowsAboutToBeInserted(const QModelIndex&,int,int))
d_func(), void _q_sourceRowsAboutToBeRemoved(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceRowsAboutToBeRemoved(const QModelIndex&,int,int))
d_func(), void _q_sourceRowsInserted(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceRowsInserted(const QModelIndex&,int,int))
d_func(), void _q_sourceRowsRemoved(const QModelIndex &source_parent, int start, int end))
d_func(), void _q_sourceRowsRemoved(const QModelIndex&,int,int))
d_func(), void _q_startConnecting(const QHostInfo &))
d_func(), void _q_startNextCommand())
d_func(), void _q_startNextRequest())
d_func(), void _q_styleHighlighted(int))
d_func(), void _q_testConnection())
d_func(), void _q_toggleTopLevel())
d_func(), void _q_toggleView(bool))
d_func(), void _q_tryEmitLastWindowClosed())
d_func(), void _q_updateActions())
d_func(), void _q_updateFileName(const QItemSelection &selection))
d_func(), void _q_updateIconSize(const QSize &))
d_func(), void _q_updateLayout())
d_func(), void _q_updateModel())
d_func(), void _q_updateSample())
d_func(), void _q_updateToolButtonStyle(Qt::ToolButtonStyle))
d_func(), void _q_useFilter(const QString &filter))
d_func(), void _q_vslide(int))
d_func(), void _q_widgetDestroyed(QObject *))
d_func(), void _q_widgetDestroyed(QObject*))
d_func(), void _q_writingSystemHighlighted(int))
d_func(), void _q_yearClicked())
d_func(), void _q_yearEditingFinished())
dark(int f = 200) const
dashPattern() const
data()
data() const
data(Mode mode = Clipboard) const
data(const QByteArray &, Q3NetworkOperation *res )
data(const QModelIndex &idx, int role = Qt::DisplayRole) const
data(const QModelIndex &index, int role = Qt::DisplayRole) const
data(const QModelIndex &index, int role = Qt::DisplayRole) const = 0
data(const QModelIndex &index, int role) const
data(const QModelIndex &item, int role = Qt::DisplayRole) const
data(const QModelIndex &proxyIndex, int role = Qt::DisplayRole) const
data(const QString &mimetype) const
data(const QString& abs_name) const
data(const QString& abs_or_rel_name, const QString& context) const
data(int column, int role) const
data(int field)
data(int i)
data(int index) const
data(int key) const
data(int role = Qt::DisplayRole) const
data(int role = Qt::UserRole + 1) const
data(int role) const
dataBytesWritten(int nbytes )
dataChanged()
dataChanged(const QModelIndex &topLeft, const QModelIndex &bottomRight)
dataClosed()
dataConnected()
dataCount() const
dataHostFound()
dataInternal(const QString& abs_name, const QMap<QString, QString> &extensions) const
dataReadProgress(int, int )
dataReadProgress(int, int)
dataReadyRead()
dataSendProgress(int, int )
dataSendProgress(int, int)
dataTag() const
dataTransferProgress(int bytesDone, int bytesTotal, Q3NetworkOperation *)
dataTransferProgress(int bytesDone, int bytesTotal, Q3NetworkOperation *res )
dataTransferProgress(int, int )
dataTransferProgress(qint64, qint64)
database() const
database(const QString& connectionName = QLatin1String(defaultConnection), bool open = true)
databaseName() const
databaseText() const
date() const
dateChanged(const QDate &date)
dateFormat() const
dateFormat(FormatType format = LongFormat) const
dateTextFormat() const
dateTextFormat(const QDate &date) const
dateTime() const
dateTimeChanged(const QDateTime &date)
dateTimeFromText(const QString &text) const
day() const
dayName(int, FormatType format = LongFormat) const
dayOfWeek() const
dayOfYear() const
daysInMonth() const
daysInYear() const
daysTo(const QDate &) const
daysTo(const QDateTime &) const
deactivated()
dec(Q3TextStream &s ) // set dec notation
dec(QTextStream &s)
decimalPoint() const
decimals() const
declHandler() const
declHandler() const = 0
declaredInClass(int index) const = 0
decode(QMimeSource *, QColor &col)
decode(QString& url )
decode(const QMimeSource* e, Q3StrList& i)
decode(const QMimeSource* e, QImage& i)
decode(const QMimeSource* e, QPixmap& i)
decode(const QMimeSource* e, QString& s)
decode(const QMimeSource* e, QString& s, QString& subtype)
decodeData(int row, int column, const QModelIndex &parent, QDataStream &stream)
decodeLocalFiles(const QMimeSource* e, QStringList& i)
decodeMSG(const MSG &)
decodeName(const QByteArray &localFileName)
decodeString(const QString &ks)
decodeToUnicodeUris(const QMimeSource* e, QStringList& i)
decomposition() const
decompositionTag() const
decoration() const = 0
decoration(const QStyleOptionViewItem &option, const QVariant &variant) const
defaultAction() const
defaultAlignment() const
defaultButton() const
defaultButtonPressed()
defaultColormap() const
defaultDepth()
defaultFactory()
defaultFamily() const
defaultFont()
defaultFont() const
defaultFormat()
defaultMap()
defaultOverlayFormat()
defaultPropertyValues() const = 0
defaultRenameAction() const
defaultSectionSize() const
defaultSheet()
defaultSize() const
defaultStyleSheet() const
defaultSuffix() const
defaultTextColor() const
defaultValue() const
defaultVisual() const
defaultWidget() const
defineIOHandler(const char *format, const char *header, const char *flags, picture_io_handler read_picture, picture_io_handler write_picture)
definesFontItalic() const
definesFontStrikeOut() const
definesFontUnderline() const
del()
del(bool invalidate = true)
del(const QString & filter, bool invalidate = true)
delayedCloseFinished()
delayedCloseFinished() // same as disconnected()
delayedUpdateGeometries()
deleteAllItems()
deleteChar()
deleteCurrent()
deleteData(array_data *p)
deleteData(unsigned long offset, unsigned long count)
deleteFile(const QString &filename)
deleteItem(Item d )
deleteItem(Item d)
deleteItem(Item) = 0 // delete object
deleteLater()
deleteMe()
deleteNetworkProtocol()
deleteNode(Node *node)
deleteOperation(Q3NetworkOperation *op )
deletePreviousChar()
deleteRowFromTable(int row)
deleteTexture(GLuint texture_id)
deleteTexture(GLuint tx_id)
deleteWidget(QWidget *widget)
delta() const
demarshall(const QDBusArgument &, int id, void *data)
depth() const
depthBufferSize() const
deref()
descent() const
description() const
description(const QString &key )
deselect()
desktop()
desktopSettingsAware()
destroy(bool destroyWindow = true, bool destroySubWindows = true)
destroy(int type, void *data)
destroyAndFree()
destroyItemGroup(QGraphicsItemGroup *group)
destroyed(QObject * = 0)
detach()
detach(Qt::BrushStyle newStyle)
detach_helper()
detach_helper(void(*node_duplicate)(Node *, void *), int nodeSize)
detailViewSelectionChanged()
detailedText() const
devType() const
device() const
deviceIsPixmap() const
deviceMatrix() const
dialMoved(int value)
dialPressed()
dialReleased()
difference_type
digitValue() const
dimensionChange(int, int)
dir() const
dir(bool absPath) const
dirEntered(const QString&)
dirName() const
dirPath() const
dirSelected(int)
directRendering() const
directSetValue(int val)
direction() const
directories() const
directory() const
directoryChanged(const QString &path)
dirtyRegionOffset() const
disableSizeHintCaching()
disabled() const
discardClient()
discardCommand() const
disconnect(const QObject *receiver, const char *member=0)
disconnect(const QObject *sender, const char *signal, const QObject *receiver, const char *member)
disconnect(const QObject *sender, int signal_index, const QObject *receiver, int method_index)
disconnect(const QString &service, const QString &path, const QString &interface, const QString &name, QObject *receiver, const char *slot)
disconnect(const QString &service, const QString &path, const QString &interface, const QString &name, const QString& signature, QObject *receiver, const char *slot)
disconnectFromBus(const QString &name)
disconnectFromHost()
disconnectFromHostImplementation()
disconnectFromModel(const QAbstractItemModel *model) const
disconnectItem(int id, const QObject *receiver, const char* member )
disconnectNotify(const char * signal )
disconnectNotify(const char *signal)
disconnected()
display()
display() const
display(const QString &str)
display(double num)
display(int num)
displayFormat() const
displayMode() const
displayName(const QString &key )
displayText() const
displayedSections() const
doAction(int action, int child, const QVariantList &params = QVariantList())
doAction(int action, int child, const QVariantList &params)
doAutoScroll()
doAutoScroll(const QPoint &cursorPos)
doChangeInterval()
doDragAutoScroll()
doImageIO(QImageWriter *io, int quality) const
doInsertCurrent()
doItemsLayout()
doKeyboardAction(KeyboardAction action)
doKeyboardAction(Q3TextEdit::KeyboardAction action)
doLayout() const
doLayout(const QStyleOptionViewItem &option, QRect *checkRect, QRect *iconRect, QRect *textRect, bool hint) const
doMimeTypeLookup()
doResInit()
doResize()
doRubberSelection(const QRect &old, const QRect &rubber)
doSynchronousLookup()
doUpdateCurrent()
doValueChanged()
docHandle() const
docName() const
dock()
dockMainWindow(QObject *dock) const
dockWidgetArea(QDockWidget *dockwidget) const
dockWindow(Q3DockWindow *dockWindow, DockWindowData *data)
dockWindowData(Q3DockWindow *w)
dockWindowList() const
dockWindowPositionChanged(Q3DockWindow *)
dockWindows() const
dockWindows(Qt::Dock dock) const
dockWindowsMovable() const
dockingArea(const QPoint &p)
doctype() const
document() const
documentChanged(int from, int charsRemoved, int charsAdded)
documentElement() const
documentLayout() const
documentSize() const = 0
documentSizeChanged(const QSizeF &newSize)
documentTitle() const
documentWidthChanged(int w)
domUi() const = 0
done(bool )
done(bool)
done(int result)
done(int)
doneCurrent()
dotsPerMeterX() const
dotsPerMeterY() const
doubleBuffer() const
doubleClickInterval()
doubleClicked(Q3IconViewItem *item)
doubleClicked(Q3ListBoxItem *)
doubleClicked(Q3ListViewItem *)
doubleClicked(Q3ListViewItem *, const QPoint&, int)
doubleClicked(const QModelIndex &index)
doubleClicked(int parag, int index)
doubleClicked(int row, int col, int button, const QPoint &mousePos)
doubleProperty(int propertyId) const
doubleSidedPrinting() const
downRect() const
drag()
drag(DragMode)
dragAutoScroll() const
dragCopy()
dragDropMode() const
dragDropOverwriteMode() const
dragEnabled() const
dragEnterEvent(QDragEnterEvent *)
dragEnterEvent(QDragEnterEvent *e)
dragEnterEvent(QDragEnterEvent *event)
dragEnterEvent(QGraphicsSceneDragDropEvent *event)
dragEntered()
dragItems(const QList<QDesignerDnDItemInterface*> &item_list)
dragLeaveEvent(QDragLeaveEvent *)
dragLeaveEvent(QDragLeaveEvent *e)
dragLeaveEvent(QDragLeaveEvent *event)
dragLeaveEvent(QGraphicsSceneDragDropEvent *event)
dragLeft()
dragLink()
dragMode() const
dragMove()
dragMoveEvent(QDragMoveEvent *)
dragMoveEvent(QDragMoveEvent *e)
dragMoveEvent(QDragMoveEvent *event)
dragMoveEvent(QGraphicsSceneDragDropEvent *event)
dragObject()
dragObject(QWidget *parent = 0) const
draw(QPainter &)
draw(QPainter *p, const QPointF &point, const QTextLayout::FormatRange *selection = 0) const
draw(QPainter *p, const QPointF &pos, const QVector<FormatRange> &selections = QVector<FormatRange>(), const QRectF &clip = QRectF()) const
draw(QPainter *painter, const PaintContext &context)
draw(QPainter& painter)
draw(QPainter&)
draw(QPainter* p, int x, int y, const QRect& clipRect, const QColorGroup& cg, const QBrush* paper = 0) const
drawArc(const QRect &, int a, int alen)
drawArc(const QRect &r, int a, int alen)
drawArc(const QRectF &rect, int a, int alen)
drawArc(int x, int y, int w, int h, int a, int alen)
drawArea(const QRect&, QPainter* p, bool double_buffer=false)
drawBackground(QPainter *p, const QRect &r)
drawBackground(QPainter *painter, const QRectF &rect)
drawBackground(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
drawBackground(QPainter&, const QRect& area)
drawBase() const
drawBranches(QPainter *painter, const QRect &rect, const QModelIndex &index) const
drawButton(QPainter * )
drawButtonLabel(QPainter * )
drawCanvasArea(const QRect&, QPainter* p=0, bool double_buffer=true)
drawCheck(QPainter *painter, const QStyleOptionViewItem &option, const QRect &rect, Qt::CheckState state) const
drawChord(const QRect &, int a, int alen)
drawChord(const QRect &r, int a, int alen)
drawChord(const QRectF &rect, int a, int alen)
drawChord(int x, int y, int w, int h, int a, int alen)
drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p, const QWidget *w = 0) const
drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p, const QWidget *widget = 0) const = 0
drawComplexControl(ComplexControl cc, const QStyleOptionComplex *option, QPainter *p, const QWidget *widget = 0) const
drawComplexControl(ComplexControl control, const QStyleOptionComplex *option, QPainter *painter, const QWidget *widget) const
drawComplexControl(QStyle::ComplexControl cc, const QStyleOptionComplex &opt)
drawContents(QPainter * p, int cx, int cy, int cw, int ch )
drawContents(QPainter *)
drawContents(QPainter *p)
drawContents(QPainter *p, int cx, int cy, int cw, int ch)
drawContents(QPainter *painter)
drawContents(QPainter *painter, const QRectF &rect = QRectF())
drawContents(QPainter* )
drawContents(QPainter*)
drawContents(QPainter*, int cx, int cy, int cw, int ch)
drawContentsOffset(QPainter *, int ox, int oy, int cx, int cy, int cw, int ch)
drawContentsOffset(QPainter*, int ox, int oy, int cx, int cy, int cw, int ch)
drawControl(ControlElement ce, const QStyleOption *option, QPainter *painter, const QWidget *widget) const
drawControl(ControlElement element, const QStyleOption *opt, QPainter *p, const QWidget *w = 0) const
drawControl(ControlElement element, const QStyleOption *opt, QPainter *p, const QWidget *w = 0) const = 0
drawControl(ControlElement element, const QStyleOption *option, QPainter *p, const QWidget *wwidget = 0) const
drawControl(ControlElement element, const QStyleOption *option, QPainter *painter, const QWidget *widget) const
drawControl(QStyle::ControlElement ce, const QStyleOption &opt)
drawConvexPolygon(const QPoint *points, int pointCount)
drawConvexPolygon(const QPointF *points, int pointCount)
drawConvexPolygon(const QPolygon &polygon)
drawConvexPolygon(const QPolygonF &polygon)
drawCubicBezier(const QPolygon &pa, int index = 0)
drawCursor(QPainter *p, const QPointF &pos, int cursorPosition) const
drawCursor(QPainter *p, const QPointF &pos, int cursorPosition, int width) const
drawCursor(bool visible)
drawDecoration(QPainter *painter, const QStyleOptionViewItem &option, const QRect &rect, const QPixmap &pixmap) const
drawDisplay(QPainter *painter, const QStyleOptionViewItem &option, const QRect &rect, const QString &text) const
drawDragShapes(const QPoint &pnt)
drawEllipse(const QRect &r)
drawEllipse(const QRectF &r)
drawEllipse(int x, int y, int w, int h)
drawFocus(QPainter *painter, const QStyleOptionViewItem &option, const QRect &rect) const
drawForeground(QPainter *painter, const QRectF &rect)
drawForeground(QPainter&, const QRect& area)
drawFrame(QPainter *)
drawImage(const QPoint &p, const QImage &image)
drawImage(const QPoint &p, const QImage &image, const QRect &sr, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawImage(const QPointF &p, const QImage &image)
drawImage(const QPointF &p, const QImage &image, const QRectF &sr, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawImage(const QRect &r, const QImage &image)
drawImage(const QRect &targetRect, const QImage &image, const QRect &sourceRect, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawImage(const QRectF &r, const QImage &image)
drawImage(const QRectF &r, const QImage &pm, const QRectF &sr, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawImage(const QRectF &targetRect, const QImage &image, const QRectF &sourceRect, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawImage(int x, int y, const QImage &image, int sx = 0, int sy = 0, int sw = -1, int sh = -1, Qt::ImageConversionFlags flags = Qt::AutoColor)
drawInlineObject(QPainter *painter, const QRectF &rect, QTextInlineObject object, int posInDocument, const QTextFormat &format)
drawItemPixmap(QPainter *painter, const QRect &rect, int alignment, const QPixmap &pixmap) const
drawItemPixmap(const QRect &r, int flags, const QPixmap &pixmap)
drawItemText(QPainter *painter, const QRect &rect, int flags, const QPalette &pal, bool enabled, const QString &text, QPalette::ColorRole textRole = QPalette::NoRole) const
drawItemText(const QRect &r, int flags, const QPalette &pal, bool enabled, const QString &text, QPalette::ColorRole textRole = QPalette::NoRole)
drawItems(QPainter *painter, int numItems, QGraphicsItem *items[], const QStyleOptionGraphicsItem options[])
drawItems(QPainter *painter, int numItems, QGraphicsItem *items[], const QStyleOptionGraphicsItem options[], QWidget *widget = 0)
drawLine(const QLine &line)
drawLine(const QLineF &line)
drawLine(const QPoint &p1, const QPoint &p2)
drawLine(const QPointF &p1, const QPointF &p2)
drawLine(int x1, int y1, int x2, int y2)
drawLineSegments(const QPolygon &points, int index = 0, int nlines = -1)
drawLines(const QLine *lines, int lineCount)
drawLines(const QLineF *lines, int lineCount)
drawLines(const QPoint *pointPairs, int lineCount)
drawLines(const QPointF *pointPairs, int lineCount)
drawLines(const QVector<QLine> &lines)
drawLines(const QVector<QLineF> &lines)
drawLines(const QVector<QPoint> &pointPairs)
drawLines(const QVector<QPointF> &pointPairs)
drawObject(QPainter *painter, const QRectF &rect, QTextDocument *doc, int posInDocument, const QTextFormat &format)
drawPath(const QPainterPath &path)
drawPicture(const QPoint &p, const QPicture &picture)
drawPicture(const QPointF &p, const QPicture &picture)
drawPicture(int x, int y, const QPicture &picture)
drawPie(const QRect &, int a, int alen)
drawPie(const QRect &r, int a, int alen)
drawPie(const QRectF &rect, int a, int alen)
drawPie(int x, int y, int w, int h, int a, int alen)
drawPixmap(const QPoint &p, const QPixmap &pm)
drawPixmap(const QPoint &p, const QPixmap &pm, const QRect &sr)
drawPixmap(const QPointF &p, const QPixmap &pm)
drawPixmap(const QPointF &p, const QPixmap &pm, const QRectF &sr)
drawPixmap(const QRect &r, const QPixmap &pm)
drawPixmap(const QRect &targetRect, const QPixmap &pixmap, const QRect &sourceRect)
drawPixmap(const QRectF &r, const QPixmap &pm, const QRectF &sr)
drawPixmap(const QRectF &targetRect, const QPixmap &pixmap, const QRectF &sourceRect)
drawPixmap(int x, int y, const QPixmap &pm)
drawPixmap(int x, int y, const QPixmap &pm, int sx, int sy, int sw, int sh)
drawPixmap(int x, int y, int w, int h, const QPixmap &pm)
drawPixmap(int x, int y, int w, int h, const QPixmap &pm, int sx, int sy, int sw, int sh)
drawPoint(const QPoint &p)
drawPoint(const QPointF &pt)
drawPoint(int x, int y)
drawPoints(const QPoint *points, int pointCount)
drawPoints(const QPointF *points, int pointCount)
drawPoints(const QPolygon &points)
drawPoints(const QPolygonF &points)
drawPolygon(const QPoint *points, int pointCount, PolygonDrawMode mode)
drawPolygon(const QPoint *points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill)
drawPolygon(const QPointF *points, int pointCount, PolygonDrawMode mode)
drawPolygon(const QPointF *points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill)
drawPolygon(const QPolygon &polygon, Qt::FillRule fillRule = Qt::OddEvenFill)
drawPolygon(const QPolygonF &polygon, Qt::FillRule fillRule = Qt::OddEvenFill)
drawPolyline(const QPoint *points, int pointCount)
drawPolyline(const QPointF *points, int pointCount)
drawPolyline(const QPolygon &polygon)
drawPolyline(const QPolygonF &polyline)
drawPrimitive(PrimitiveElement elem, const QStyleOption *option, QPainter *painter, const QWidget *widget = 0) const
drawPrimitive(PrimitiveElement element, const QStyleOption *option, QPainter *painter, const QWidget *widget = 0) const
drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w = 0) const
drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w = 0) const = 0
drawPrimitive(PrimitiveElement pe, const QStyleOption *option, QPainter *p, const QWidget *widget = 0) const
drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption &opt)
drawRect(const QRect &rect)
drawRect(const QRectF &rect)
drawRect(int x1, int y1, int w, int h)
drawRects(const QRect *rects, int rectCount)
drawRects(const QRectF *rects, int rectCount)
drawRects(const QVector<QRect> &rectangles)
drawRects(const QVector<QRectF> &rectangles)
drawRoundRect(const QRect &r, int xround = 25, int yround = 25)
drawRoundRect(const QRectF &r, int xround = 25, int yround = 25)
drawRoundRect(int x, int y, int w, int h, int = 25, int = 25)
drawRow(QPainter *painter, const QStyleOptionViewItem &options, const QModelIndex &index) const
drawRubber()
drawRubber(QPainter *p)
drawShape(QPainter &)
drawText(const QPoint &p, const QString &s)
drawText(const QPointF &p, const QString &s)
drawText(const QRect &r, int flags, const QString &text, QRect *br=0)
drawText(const QRectF &r, const QString &text, const QTextOption &o = QTextOption())
drawText(const QRectF &r, int flags, const QString &text, QRectF *br=0)
drawText(int x, int y, const QString &s)
drawText(int x, int y, int w, int h, int flags, const QString &text, QRect *br=0)
drawTextItem(const QPoint &p, const QTextItem &ti)
drawTextItem(const QPointF &p, const QTextItem &textItem)
drawTextItem(const QPointF &p, const QTextItem &ti)
drawTextItem(int x, int y, const QTextItem &ti)
drawText_helper(int x, int y, const QString &)
drawTiledPixmap(const QRect &, const QPixmap &, const QPoint & = QPoint())
drawTiledPixmap(const QRectF &r, const QPixmap &pixmap, const QPointF &s)
drawTiledPixmap(const QRectF &rect, const QPixmap &pm, const QPointF &offset = QPointF())
drawTiledPixmap(int x, int y, int w, int h, const QPixmap &, int sx=0, int sy=0)
drawTree(QPainter *painter, const QRegion &region) const
drawUnique(QPainter& painter)
drawViewArea(Q3CanvasView* view, QPainter* p, const QRect& r, bool dbuf)
driver() const
driverName() const
driverText() const
drivers()
drives()
dropAction() const
dropEnabled() const
dropEvent(QDropEvent *)
dropEvent(QDropEvent *e)
dropEvent(QDropEvent *event)
dropEvent(QGraphicsSceneDragDropEvent *event)
dropIndicatorPosition() const
dropMimeData(QTreeWidgetItem *parent, int index, const QMimeData *data, Qt::DropAction action)
dropMimeData(const QMimeData *data, Qt::DropAction action, int row, int column, const QModelIndex &parent)
dropMimeData(int index, const QMimeData *data, Qt::DropAction action)
dropMimeData(int row, int column, const QMimeData *data, Qt::DropAction action)
dropWidgets(const QList<QDesignerDnDItemInterface*> &item_list, const QPoint &global_mouse_pos)
dropped(QDropEvent *e)
dropped(QDropEvent *e, const Q3ValueList<Q3IconDragItem> &lst)
dump()
dumpObjectInfo()
dumpObjectTree()
duplicate(const Q3GArray &a)
duplicate(const char *d, uint len)
duplicateNode(QHashData::Node *originalNode, void *newNode)
duplicatesEnabled() const
duration() const
dx() const
dy() const
dynamicPropertyNames() const
dynamicSortFilter() const
eat_ws()
echoMode() const
edit(const QModelIndex &index)
edit(const QModelIndex &index, EditTrigger trigger, QEvent *event)
editBuffer(bool copy = false)
editCell(int row, int col, bool replace = false)
editItem(QListWidgetItem *item)
editItem(QTableWidgetItem *item)
editItem(QTreeWidgetItem *item, int column = 0)
editMode() const
editStrategy() const
editTextChanged(const QString &)
editTriggers() const
editType() const
editWidget()
editWidgets()
editable() const
edited() const
editingFinished()
editor() const = 0
editorDestroyed(QObject *editor)
editorEvent(QEvent *event, QAbstractItemModel *model, const QStyleOptionViewItem &option, const QModelIndex &index)
elapsed() const
elementAt(int i) const
elementById(const QString& elementId)
elementCount() const
elementExists(const QString &id) const
elementId() const
elementsByTagName(const QString& tagname) const
elementsByTagNameNS(const QString& nsURI, const QString& localName)
elementsByTagNameNS(const QString& nsURI, const QString& localName) const
elideMode() const
elidedText(const QFontMetrics &fontMetrics, int width, Qt::TextElideMode mode, const QString &text)
elidedText(const QString &text, Qt::TextElideMode mode, int width, int flags = 0) const
elidedText(const QString &text, Qt::TextElideMode mode, qreal width, int flags = 0) const
embedClient(WId id)
embedInto(WId id)
embedded()
emit
emitChanged(Mode mode)
emitChangedSignal(bool)
emitErrorConnectionRefused()
emitHighlighted(const QString &s)
emitLinkClicked(const QString &s)
emitNewChildren(const QUrlInfo &i, Q3NetworkOperation *op )
emitRenamed(Q3IconViewItem *item)
emitSelectionChanged()
emitSelectionChanged(Q3IconViewItem * i = 0)
emitSelectionChanged(const QItemSelection &newSelection, const QItemSelection &oldSelection)
emptyLabel() const
enableClipper(bool y )
enabled() const = 0
enabledChange(bool) // compat
enabledOptions() const
encode(QString& url )
encodeData(const QModelIndexList &indexes, QDataStream &stream) const
encodeName(const QString &fileName)
encodeString(int key)
encodedData(const char* mime) const
encodedData(const char*) const
encodedData(const char*) const = 0
encodedPathAndQuery()
encodedQuery() const
end()
end() const
end(bool mark)
end(bool mark=false)
endArray()
endArray() const
endCDAT()
endCommand()
endDTD()
endDocument()
endEdit(int row, int col, bool accept, bool replace )
endEdit(int row, int col, bool accept, bool replace)
endEditBlock()
endElement(const QString& namespaceURI, const QString& localName, const QString& qName)
endEntity(const QString& name)
endEntryList()
endFrame() const
endGroup()
endInsert()
endInsertColumns()
endInsertRows()
endLayout()
endMacro()
endMap()
endMap() const
endMapEntry()
endMapEntry() const
endPrefixMapping(const QString& prefix)
endRectDraw(bool drawRect)
endRemoveColumns()
endRemoveRows()
endStructure()
endStructure() const
endTrans()
endUpdate()
endl(Q3TextStream &s ) // insert EOL('\n')
endl(QTextStream &s)
endsWith(char c) const
endsWith(const QByteArray &a) const
endsWith(const QChar &c, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
endsWith(const QLatin1String &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
endsWith(const QString &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
endsWith(const char *c) const
enforceSortOrder() const
enforceSortOrderBackToRoot()
ensureCellVisible(int row, int col)
ensureCellVisible(int row, int column)
ensureCurrentVisible()
ensureCursorVisible()
ensureData_helper()
ensureFormatted(Q3TextParagraph *p)
ensureItemVisible(Q3IconViewItem *item)
ensureItemVisible(const Q3ListViewItem *)
ensureOffScrSize(int osw, int osh)
ensurePolished() const
ensureUniqueObjectName(QObject *object)
ensureVisible(const QGraphicsItem *item, int xmargin = 50, int ymargin = 50)
ensureVisible(const QRectF &rect = QRectF(), int xmargin = 50, int ymargin = 50)
ensureVisible(const QRectF &rect, int xmargin = 50, int ymargin = 50)
ensureVisible(int x, int y)
ensureVisible(int x, int y, int xmargin = 50, int ymargin = 50)
ensureVisible(int x, int y, int xmargin, int ymargin)
ensureVisible(qreal x, qreal y, qreal w, qreal h, int xmargin = 50, int ymargin = 50)
ensureWidgetVisible(QWidget *childWidget, int xmargin = 50, int ymargin = 50)
enterEvent(QEvent *)
enterEvent(QEvent *e)
enterLoop(int secs)
enterWhatsThisMode()
enter_loop()
entered(const QModelIndex &index)
entities() const
entityResolver() const
entityResolver() const = 0
entryColor(int idx) const
entryInfoList(Filters filters = NoFilter, SortFlags sort = NoSort) const
entryInfoList(const QStringList &nameFilters, Filters filters = NoFilter, SortFlags sort = NoSort) const
entryList(Filters filters = NoFilter, SortFlags sort = NoSort) const
entryList(QDir::Filters filters, const QStringList &filterNames) const
entryList(const QStringList &nameFilters, Filters filters = NoFilter, SortFlags sort = NoSort) const
entryRgb(int idx) const
enum_type
enumerator() const
enumerator(const QString &neutralName) const = 0
enumerator(int index) const
enumeratorCount() const
enumeratorOffset() const
environment() const
eof() const
eor(const QRegion &r) const
equal(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy)
erase()
erase(Q3LNode* it )
erase(const QRect &)
erase(const QRegion &)
erase(iterator begin, iterator end)
erase(iterator first, iterator last)
erase(iterator it)
erase(iterator pos)
erase(void **xi)
eraseColor() const
erasePixmap() const
eraseRect(const QRect &)
eraseRect(const QRectF &)
eraseRect(int x, int y, int w, int h)
erase_helper(int x, int y, int w, int h)
error() const
error(QAbstractSocket::SocketError)
error(QImageReader::ImageReaderError error)
error(QProcess::ProcessError error)
error(QX11EmbedContainer::Error)
error(QX11EmbedWidget::Error error)
error(const QString &msg )
error(const QString&) const
error(const QXmlParseException& exception)
error(int )
errorCode() const
errorHandler() const
errorHandler() const = 0
errorName() const
errorString()
errorString() const
errorString() const = 0
escape(const QString &str)
escape(const QString& plain)
escape(const QString&)
escapeButton() const
escapeIdentifier(const QString &identifier, IdentifierType type) const
event(QEvent * e)
event(QEvent *)
event(QEvent *e)
event(QEvent *event)
event(QEvent* e)
eventFilter(QObject * o, QEvent *)
eventFilter(QObject *, QEvent * )
eventFilter(QObject *, QEvent *)
eventFilter(QObject *, QEvent *e )
eventFilter(QObject *o, QEvent *e )
eventFilter(QObject *o, QEvent *e)
eventFilter(QObject *object, QEvent *event )
eventFilter(QObject *object, QEvent *event)
eventFilter(QObject *watched, QEvent *event)
eventFilter(QObject*, QEvent*)
exactMatch() const
exactMatch(const QString &str) const
exclusive() const
exec()
exec(ProcessEventsFlags flags = AllEvents)
exec(QList<QAction*> actions, const QPoint &pos, QAction *at=0)
exec(QPainter *p, QDataStream &ds, int i)
exec(const QByteArray &ba, int ver = 0)
exec(const QPoint &pos, QAction *at=0)
exec(const QString & sql)
exec(const QString& query = QString()) const
exec(const QString& query)
execBatch(BatchExecutionMode mode = ValuesAsRows)
execBatch(bool arrayBind = false)
execute(const QString &program)
execute(const QString &program, const QStringList &arguments)
executeDelayedItemsLayout()
executedQuery() const
exists() const
exists(const QString &fileName)
exists(const QString &name) const
exit(int retcode = 0)
exit(int retcode=0)
exit(int returnCode = 0)
exitCode() const
exitLoop()
exitStatus() const
exit_loop()
expand(const QModelIndex &index)
expand(int i)
expand(int rows, int cols)
expandAll()
expandItem(const QTreeWidgetItem *item)
expandTo(int row, int col)
expanded(Q3ListViewItem *item)
expanded(const QModelIndex &index)
expandedTo(const QSize &) const
expandedTo(const QSizeF &) const
expandingDirections() const
expandingDirections() const = 0
exponential() const
exportMacro() const = 0
extends() const = 0
extension() const
extension(Extension extension, const ExtensionOption *option = 0, ExtensionReturn *output = 0)
extension(QObject *object, const QString &iid) const
extension(QObject *object, const QString &iid) const = 0
extension(const QVariant &variant) const
extensionManager() const
externalEntityDecl(const QString& name, const QString& publicId, const QString& systemId)
extra()
extraSelections() const
f_canConvert
f_clear
f_compare
f_construct
f_convert
f_debugStream
f_load
f_null
f_save
fallbackLocale() const
fallbacksEnabled() const
falseText() const
families(WritingSystem writingSystem = Any) const
family() const
fatalError(const QXmlParseException& exception)
feature(const QString& name, bool *ok = 0) const
feature(const QString& name, bool *ok = 0) const = 0
featureChanged(Feature f)
features() const
features() const = 0
featuresChanged(QDockWidget::DockWidgetFeatures features)
fetch(int i)
fetchConnectionParameters()
fetchData()
fetchFirst()
fetchLast()
fetchMore(const QModelIndex &parent = QModelIndex())
fetchMore(const QModelIndex &parent)
fetchNext()
fetchPeerConnectionParameters()
fetchPrevious()
fetchPrior()
field(const QString &name) const
field(int i) const
fieldAlignment() const
fieldAlignment(const QSqlField* field )
fieldIndex(const QString &fieldName) const
fieldName(int i) const
fieldPtr(const QString& name) const
fieldPtr(int i) const
fieldToString(const QSqlField * field )
fieldToWidget(QSqlField * field) const
fieldWidth() const
fileChanged(const QString &path)
fileEngine() const
fileFlags(FileFlags type) const
fileFlags(FileFlags type=FileInfoAll) const
fileHighlighted(const QString&)
fileHighlighted(int)
fileIcon(const QModelIndex &index) const
fileInfo(const QModelIndex &index) const
fileMode() const
fileName() const
fileName() const = 0
fileName(FileName file) const
fileName(FileName file=DefaultName) const
fileName(const QModelIndex &index) const
fileNameChanged(const QString &fileName)
fileNameEditDone()
fileNameEditReturnPressed()
filePath() const
filePath(const QModelIndex &index) const
filePath(const QString &fileName) const
fileSelected(const QString&)
fileSelected(int)
fileTemplate() const
fileTime(FileTime time) const
files() const
filesSelected(const QStringList &files)
filesSelected(const QStringList&)
fill() const
fill(Item, int flen ) // resize and fill vector
fill(QChar c, int size = -1)
fill(bool val, int first, int last)
fill(bool val, int size = -1)
fill(char c, int size = -1)
fill(const QColor &fillColor = Qt::white)
fill(const QWidget *widget, const QPoint &ofs)
fill(const T &t, int size = -1)
fill(const char *d, int len, uint sz)
fill(int )
fill(uint pixel)
fillPath(const QPainterPath &path, const QBrush &brush)
fillRect(const QRect &, const QBrush &)
fillRect(const QRectF &, const QBrush &)
fillRect(int x, int y, int w, int h, const QBrush &)
fillRule() const
filter() const
filter(const QRegExp &rx) const
filter(const QString &str, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
filterAcceptsColumn(int source_column, const QModelIndex &source_parent) const
filterAcceptsRow(int source_row, const QModelIndex &source_parent) const
filterCaseSensitivity() const
filterChanged()
filterClicked() // not used
filterEvent(const QEvent *event )
filterEvent(void *message)
filterEvent(void *message, long *result)
filterKeyColumn() const
filterRegExp() const
filterRole() const
filterSelected(const QString&)
filters() const
finalStop() const
find(Item, uint index ) const // find equal item in vector
find(Q3PtrCollection::Item, bool = true ) // find equal item in list
find(QRgb color) const
find(WId)
find(const Key &key)
find(const Key &key) const
find(const QRegExp &expr, const QTextCursor &from, FindFlags options = 0) const
find(const QRegExp &expr, int from = 0, FindFlags options = 0) const
find(const QString & str, bool caseSensitive, bool backwards )
find(const QString &exp, QTextDocument::FindFlags options = 0)
find(const QString &expr, bool cs, bool wo, bool forward = true, int *para = 0, int *index = 0)
find(const QString &key)
find(const QString &key, QPixmap&)
find(const QString &s, int from = 0) const
find(const QString &subString, const QTextCursor &from, FindFlags options = 0) const
find(const QString &subString, int from = 0, FindFlags options = 0) const
find(const QString& fieldName) const
find(const char *d, uint index, uint sz) const
find(int id) const
findActionForId(int id) const
findBlock(int pos) const
findBuffer(const QSqlIndex& idx, int atHint = 0 )
findBufferChanged()
findData(const QVariant &data, int role = Qt::UserRole, Qt::MatchFlags flags = Qt::MatchExactly|Qt::MatchCaseSensitive) const
findDockWindow(Q3DockWindow *w)
findFirstVisibleItem(const QRect &r) const
findFont(int script, const QFontPrivate *fp, const QFontDef &request, int force_encoding_id = -1)
findFormWindow(QWidget *w)
findIdForAction(QAction*) const
findItem(Direction dir, const QPoint &relativeTo, const QRect &searchRect) const
findItem(const QPoint &pos) const
findItem(const QString &text, ComparisonFlags = BeginsWith | Qt::CaseSensitive) const
findItem(const QString &text, ComparisonFlags compare = BeginsWith) const
findItem(const QString& text, int column, ComparisonFlags = ExactMatch | Qt::CaseSensitive ) const
findItemAt(const QPoint &pos) const = 0
findItemAt(int row, int column) const = 0 // atm only for grid.
findItemByName(Q3IconViewItem *start)
findItems(const QString &text, Qt::MatchFlags flags = Qt::MatchExactly, int column = 0) const
findItems(const QString &text, Qt::MatchFlags flags) const
findItems(const QString &text, Qt::MatchFlags flags, int column = 0) const
findKey(const QKeySequence& key ) const
findLastVisibleItem(const QRect &r) const
findLine(int)
findNearest(QRgb color) const
findNode(const Key &key) const
findNode(const Key &key, uint *hp = 0) const
findOrInsertCategory(const QString &categoryName)
findPopup(QMenu *popup, int *index )
findRef(Item, uint index ) const // find exact item in vector
findRef(Q3PtrCollection::Item, bool = true ) // find exact item in list
findRev(const QString &s, int from = -1) const
findWidget(QWidget* w, int *r, int *c)
find_other(const char *key, bool ref=true) const
find_string(const QString &key, bool ref=true) const
finish(QWidget *w)
finish(void**)
finishButton() const
finishContentsResze(bool updateBefore)
finished()
finished(Q3NetworkOperation *res )
finished(int exitCode)
finished(int exitCode, QProcess::ExitStatus exitStatus)
finished(int result)
finishedCopy()
finishedWithError(const QString& detail, int errorCode )
finishedWithSuccess()
first()
first() // set first item in list curr
firstChild() const
firstChildElement(const QString &tagName = QString()) const
firstCursorPosition() const
firstDayOfWeek() const
firstItem() const
firstNode()
firstPosition() const
firstRecordAvailable(bool available)
first_type
fitInView(const QGraphicsItem *item, Qt::AspectRatioMode aspectRadioMode = Qt::IgnoreAspectRatio)
fitInView(const QRectF &rect, Qt::AspectRatioMode aspectRadioMode = Qt::IgnoreAspectRatio)
fitInView(qreal x, qreal y, qreal w, qreal h, Qt::AspectRatioMode aspectRadioMode = Qt::IgnoreAspectRatio)
fix()
fixCell(int &row, int &col, int key)
fixChildren() const
fixCol(int &col, int x)
fixRow(int &row, int y)
fix_neg_rect(int *x, int *y, int *w, int *h)
fixed(QTextStream &s)
fixedExtent() const
fixedPitch() const
fixup(QString &) const
fixup(QString &input) const
fixup(QString &str) const
fixupNameEdit()
flags() const
flags(const QModelIndex &index) const
flags(int f )
flagsInternal() const
flagsInternal(int flags)
flavor(int index)
flavorFor(const QString &mime)
flavorToMime(uchar, QString flav)
flow() const
flush()
flush(Q3TextStream &s ) // flush output
flush(QTextStream &s)
flushStdin()
focalPoint() const
focusChanged(QWidget *old, QWidget *now)
focusInEvent(QFocusEvent * e)
focusInEvent(QFocusEvent *)
focusInEvent(QFocusEvent *e )
focusInEvent(QFocusEvent *e)
focusInEvent(QFocusEvent *ev)
focusInEvent(QFocusEvent *event)
focusInEvent(QFocusEvent*)
focusItem() const
focusNextPrevChild(bool next )
focusNextPrevChild(bool next)
focusOutEvent(QFocusEvent * e)
focusOutEvent(QFocusEvent *)
focusOutEvent(QFocusEvent *e )
focusOutEvent(QFocusEvent *e)
focusOutEvent(QFocusEvent *ev)
focusOutEvent(QFocusEvent *event)
focusOutEvent(QFocusEvent*)
focusPolicy() const
focusProxy() const
focusStyle() const
focusWidget()
focusWidget() const
font()
font() const
font(const QString &family, const QString &style, int pointSize) const
font(const QWidget*)
font(const char *className)
fontChange(const QFont & )
fontChange(const QFont &) // compat
fontDisplayListBase(const QFont & fnt, int listBase = 2000)
fontEmbeddingEnabled() const
fontFamily() const
fontFilters() const
fontInfo() const
fontItalic() const
fontMetrics()
fontMetrics() const
fontPointSize() const
fontSize() const
fontStrikeOut() const
fontUnderline() const
fontWeight() const
for
forceShow()
forcepoint(QTextStream &s)
forcesign(QTextStream &s)
foreach
foregroundBrush() const
foregroundColor() const
foregroundRole() const
forever
form()
formWindow() const = 0
formWindow(int index) const
formWindowAdded(QDesignerFormWindowInterface *formWindow)
formWindowCount() const
formWindowManager() const
formWindowRemoved(QDesignerFormWindowInterface *formWindow)
format() const
format(int i) const
format(int n = 0) const
format(int n = 0) const = 0
format(int pos)
format(int pos) const
formatIndex() const
formatIndex(int pos)
formatMore()
formatValue(const QSqlField &field, bool trimStrings) const
formatValue(const QSqlField& field, bool trimStrings = false) const
formats() const
formatsForMime(const QString &mimeType, const QMimeData *mimeData) const = 0
forward()
forwardAvailable(bool)
fragment() const
frameAt(int pos) const
frameBoundingRect(QTextFrame *frame) const = 0
frameChanged()
frameChanged(int frameNumber)
frameChanged(int)
frameCount() const
frameForTime(int msec) const
frameGeometry() const
frameRect() const
frameShadow() const
frameShape() const
frameSize() const
frameStyle() const
frameWidth() const
framesPerSecond() const
free()
free(Data *)
free(Data *d)
free(QLinkedListData*)
free(QListData::Data *d)
freeData(QHashData *d)
freeData(QMapData *d)
freeNode(void *node)
freeze(int w=0, int h=0)
fromAce(const QByteArray &)
fromAscii(char c)
fromAscii(const char *, int size = -1)
fromAscii_helper(const char *str, int size = -1)
fromBase64(const QByteArray &base64)
fromCmyk(int c, int m, int y, int k, int a = 255)
fromCmykF(qreal c, qreal m, qreal y, qreal k, qreal a = 1.0)
fromData(const QSize &size, const uchar *bits, QImage::Format monoFormat = QImage::Format_MonoLSB)
fromData(const uchar *data, int size, const char *format = 0)
fromEncoded(const QByteArray &url)
fromEncoded(const QByteArray &url, ParsingMode mode)
fromHsv(int h, int s, int v, int a = 255)
fromHsvF(qreal h, qreal s, qreal v, qreal a = 1.0)
fromHtml(const QString &html)
fromHtml(const QString &html, const QTextDocument *resourceProvider)
fromImage(const QImage &image, Qt::ImageConversionFlags flags = Qt::AutoColor)
fromLatin1(char c)
fromLatin1(const char *, int size = -1)
fromLatin1_helper(const char *str, int size = -1)
fromList(const QList<T> &list)
fromLocal8Bit(const char *, int size = -1)
fromLocalFile(const QString &localfile)
fromMacCGImageRef(CGImageRef image)
fromName(const QString &name)
fromNativeSeparators(const QString &pathName)
fromPage() const
fromPercentEncoding(const QByteArray &)
fromPlainText(const QString &plainText)
fromPunycode(const QByteArray &)
fromRawData(const QByteArray &data, bool beginning = false)
fromRawData(const QChar *, int size)
fromRawData(const char *, int size)
fromRgb(QRgb rgb)
fromRgb(int r, int g, int b, int a = 255)
fromRgbF(qreal r, qreal g, qreal b, qreal a = 1.0)
fromRgba(QRgb rgba)
fromSet(const QSet<T> &set)
fromStdString(const std::string &s)
fromStdWString(const QStdWString &s)
fromStdWString(const std::wstring &s)
fromString(const QString &)
fromString(const QString &s, Qt::DateFormat f = Qt::TextDate)
fromString(const QString &s, const QString &format)
fromString(const QString &str, SequenceFormat format = PortableText)
fromTime_t(uint secsSince1Jan1970UTC)
fromUcs4(const uint *, int size = -1)
fromUnicode(const QChar *uc, int len)
fromUnicode(const QString& str)
fromUnicode(const QString& uc) const
fromUnicode(const QString& uc, int& lenInOut)
fromUnicode(const QString& uc, int& lenInOut) const
fromUtf16(const ushort *, int size = -1)
fromUtf8(const char *, int size = -1)
fromVector(const QVector<T> &vector)
fromWCharArray(const wchar_t *, int size = -1)
fromWinHBITMAP(HBITMAP hbitmap, HBitmapFormat format = NoAlpha)
fullPage() const
gamma() const
generateByteOrderMark() const
generateDynamicTexture() const
generateFontDisplayLists(const QFont & fnt, int listBase)
generatedIconPixmap(QIcon::Mode iconMode, const QPixmap &pixmap, const QStyleOption *opt) const
generatedIconPixmap(QIcon::Mode iconMode, const QPixmap &pixmap, const QStyleOption *opt) const = 0
geometriesChanged()
geometry() const
geometry() const = 0
geometryChanged()
get() const
get() const // get current item
get(const QString &file, QIODevice *dev=0 )
get(const QString &file, QIODevice *dev=0, TransferType type = Binary)
get(const QString &location = QString() )
get(const QString &path, QIODevice *to=0)
get(const QString& path, QIODevice* to=0 )
getCmyk(int *c, int *m, int *y, int *k, int *a = 0)
getCmykF(qreal *c, qreal *m, qreal *y, qreal *k, qreal *a = 0)
getColor(const QColor& init = Qt::white, QWidget* parent=0)
getContentsMargins(int *left, int *top, int *right, int *bottom) const
getCoords(int *x1, int *y1, int *x2, int *y2) const
getCoords(qreal *x1, qreal *y1, qreal *x2, qreal *y2) const
getCursorPosition(int *parag, int *index) const
getDC() const
getDouble(QWidget *parent, const QString &title, const QString &label, double value = 0, double minValue = -2147483647, double maxValue = 2147483647, int decimals = 1, bool *ok = 0, Qt::WindowFlags f = 0)
getExistingDirectory(QWidget *parent = 0, const QString &caption = QString(), const QString &dir = QString(), Options options = ShowDirsOnly)
getExistingDirectory(const QString &dir = QString(), QWidget *parent = 0, const char* name = 0, const QString &caption = QString(), bool dirOnly = true, bool resolveSymlinks = true)
getFont(bool *ok, QWidget* parent=0)
getFont(bool *ok, const QFont &def, QWidget* parent, const QString &caption)
getFont(bool *ok, const QFont &def, QWidget* parent=0)
getFont(bool *ok, const QFont *def, QWidget* parent=0)
getFormat(int para, int index, QFont *font, QColor *color, VerticalAlignment *verticalAlignment)
getHsv(int *h, int *s, int *v, int *a = 0) const
getHsvF(qreal *h, qreal *s, qreal *v, qreal *a = 0) const
getInteger(QWidget *parent, const QString &title, const QString &label, int value = 0, int minValue = -2147483647, int maxValue = 2147483647, int step = 1, bool *ok = 0, Qt::WindowFlags f = 0)
getItem(QWidget *parent, const QString &title, const QString &label, const QStringList &list, int current = 0, bool editable = true, bool *ok = 0,Qt::WindowFlags f = 0)
getItemPosition(int idx, int *row, int *column, int *rowSpan, int *columnSpan)
getKeyAscii() const
getKeyInt() const
getKeyPtr() const
getKeyString() const
getLocation(Q3DockWindow *tb, Qt::Dock &dock, int &index, bool &nl, int &extraOffset) const
getMarkedRegion(int *line1, int *col1, int *line2, int *col2) const
getNetworkProtocol()
getNetworkProtocol(const QString &protocol )
getOpenFileName(QWidget *parent = 0, const QString &caption = QString(), const QString &dir = QString(), const QString &filter = QString(), QString *selectedFilter = 0, Options options = 0)
getOpenFileName(const QString &initially = QString(), const QString &filter = QString(), QWidget *parent = 0, const char* name = 0, const QString &caption = QString(), QString *selectedFilter = 0, bool resolveSymlinks = true)
getOpenFileNames(QWidget *parent = 0, const QString &caption = QString(), const QString &dir = QString(), const QString &filter = QString(), QString *selectedFilter = 0, Options options = 0)
getOpenFileNames(const QString &filter= QString(), const QString &dir = QString(), QWidget *parent = 0, const char* name = 0, const QString &caption = QString(), QString *selectedFilter = 0, bool resolveSymlinks = true)
getParagraphFormat(int para, QFont *font, QColor *color, VerticalAlignment *verticalAlignment, int *alignment, Q3StyleSheetItem::DisplayMode *displayMode, Q3StyleSheetItem::ListStyle *listStyle, int *listDepth)
getProcAddress(const QString &proc) const
getProtocol() const
getRange(int index, int *, int *) const
getRect(int *x, int *y, int *w, int *h) const
getRect(qreal *x, qreal *y, qreal *w, qreal *h) const
getRgb(int *r, int *g, int *b, int *a = 0) const
getRgbF(qreal *r, qreal *g, qreal *b, qreal *a = 0) const
getRgba(QRgb, bool* ok = 0, QWidget* parent=0)
getSaveFileName(QWidget *parent = 0, const QString &caption = QString(), const QString &dir = QString(), const QString &filter = QString(), QString *selectedFilter = 0, Options options = 0)
getSaveFileName(const QString &initially = QString(), const QString &filter = QString(), QWidget *parent = 0, const char* name = 0, const QString &caption = QString(), QString *selectedFilter = 0, bool resolveSymlinks = true)
getSelection(int *, int *)
getSelection(int *paraFrom, int *indexFrom, int *paraTo, int *indexTo, int selNum = 0) const
getText(QWidget *parent, const QString &title, const QString &label, QLineEdit::EchoMode echo = QLineEdit::Normal, const QString &text = QString(), bool *ok = 0, Qt::WindowFlags f = 0)
getX11Data(bool def = false) const
getch()
glDraw()
glInit()
globalStrut()
goBack()
gotoNext(QSqlCachedResult::ValueCache& row, int idx)
gotoNext(QSqlCachedResult::ValueCache& row, int rowIdx)
grabFrameBuffer(bool withAlpha = false)
grabKeyboard()
grabMouse()
grabMouse(const QCursor &)
grabShortcut(const QKeySequence &key, Qt::ShortcutContext context = Qt::WindowShortcut)
grabWidget(QWidget *widget, const QRect &rect)
grabWidget_helper(QWidget *widget, QPixmap &res, QPixmap &buf, const QRect &r, const QPoint &offset, bool)
grabWindow(WId, int x=0, int y=0, int w=-1, int h=-1)
gradient() const
greaterThan(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy)
green() const
greenBufferSize() const
greenF() const
gregorianToJulian(int y, int m, int d)
grid() const = 0
gridSize() const
gridStyle() const
gridX() const
gridY() const
group() const
group() const = 0
groupId() const
groupSeparator() const
grow(int sizeofTypedData, int size, int sizeofT, bool excessive)
grow(int)
hPal()
hScrollBarMode() const
handle() const
handle(bool require_rgn) const
handle(int index) const
handleAt(int p)
handleColumnMove(int fromIdx, int toIdx)
handleColumnResize(int, int, bool, bool = true)
handleError(const QSqlError& e )
handleError(const QSqlError& error)
handleEvent(QWidget *widget, QWidget *managedWidget, QEvent *event)
handleIndexChange()
handleItemChange(Q3IconViewItem *old, bool shift, bool control, bool homeend = false)
handleItemChange(Q3ListBoxItem *old, bool shift, bool control)
handleItemChange(Q3ListViewItem *old, bool shift, bool control)
handleMouseMove(const QPoint& pos)
handleMove(const QPoint &pos, const QPoint &gp, bool drawRect)
handleReadOnlyKeyEvent(QKeyEvent *e)
handleSizeChange(int, int, int)
handleWidth() const
handlerForObject(int objectType) const
handlesChildEvents() const
hardwareAddress() const
hasAcceptableInput() const
hasAlpha() const
hasAlphaBuffer() const
hasAlphaChannel() const
hasApplyButton() const
hasAttribute(const QString& name) const
hasAttributeNS(const QString& nsURI, const QString& localName) const
hasAttributes() const
hasAutoScroll() const
hasCancelButton() const
hasChildNodes() const
hasChildren() const
hasChildren(const QModelIndex &index = QModelIndex()) const
hasChildren(const QModelIndex &parent = QModelIndex()) const
hasChildren(const QModelIndex &parent) const
hasClipping() const
hasColor() const
hasComplexSelection() const
hasContentLength() const
hasContentType() const
hasCursor() const
hasDefaultButton() const
hasDockWindow(Q3DockWindow *dw)
hasDockWindow(Q3DockWindow *w, int *index = 0)
hasEditFocus() const
hasFeature(DriverFeature f) const
hasFeature(DriverFeature f) const = 0
hasFeature(Feature f) const = 0
hasFeature(const QString& feature, const QString& version) const
hasFeature(const QString& name) const
hasFeature(const QString& name) const = 0
hasFocus() const
hasFormat(const QString &mimetype) const
hasFragment() const
hasFrame() const
hasHeightForWidth() const
hasHelpButton() const
hasHost() const
hasHtml() const
hasImage() const
hasIndex(int row, int column, const QModelIndex &parent = QModelIndex()) const
hasKey(const QString &key) const
hasKey(const QString& key ) const
hasMarkedText() const
hasMirrored() const
hasMouseTracking() const
hasOkButton() const
hasOnlyLocalFileSystem()
hasOpenGL()
hasOpenGLFramebufferObjects()
hasOpenGLOverlays()
hasOpenGLPbuffers()
hasOutValues() const
hasOverlay() const
hasPassword() const
hasPath() const
hasPendingCommands() const
hasPendingConnections() const
hasPendingDatagrams() const
hasPendingEvents()
hasPendingRequests() const
hasPort() const
hasProperty(const QString& name) const
hasProperty(const QString& name) const = 0
hasProperty(int propertyId) const
hasQuery() const
hasQueryItem(const QString &key) const
hasRef() const
hasReset(int index) const = 0
hasScaledContents() const
hasSelectedText() const
hasSelection() const
hasSelection() const = 0
hasShrunk()
hasStaticBackground() const
hasStdCppSet() const
hasText() const
hasTracking() const
hasUrls() const
hasUser() const
hashKeyAscii(const char * )
hashKeyString(const QString & )
hbarIsPressed()
hbarIsReleased()
head(const QString &path)
head(const QString& path )
header() const
headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const
headerData(int section, Qt::Orientation orientation, int role) const
headerDataChanged(Qt::Orientation orientation, int first, int last)
headerDataChanged(Qt::Orientation orientation, int logicalFirst, int logicalLast)
headerItem() const
headerTextFormat() const
headerWidth() const
heapSortPushDown(Q3PtrCollection::Item* heap, int first, int last )
height() const
height(const Q3ListBox *) const
heightForWidth(int w) const
heightForWidth(int) const
help()
helpButton() const
helpButtonPressed()
helpClicked()
helpEvent(QGraphicsSceneHelpEvent *event)
helpRequested()
hex(Q3TextStream &s ) // set hex notation
hex(QTextStream &s)
hiddenSectionCount() const
hide()
hideColumn(int col )
hideColumn(int col)
hideColumn(int column)
hideEvent(QHideEvent *)
hideEvent(QHideEvent *e)
hideEvent(QHideEvent *event)
hideEvent(QHideEvent*)
hideOrShow()
hidePopup()
hideRow(int row)
hideSection(int logicalIndex)
hideTearOffMenu()
hideText()
highlightBlock(const QString &text)
highlightParagraph(const QString &text, int endStateOfLastPara)
highlightSections() const
highlighted(Q3ListBoxItem *)
highlighted(const QModelIndex &index)
highlighted(const QString &)
highlighted(const QString &text)
highlighted(const QString&)
highlighted(const QUrl &)
highlighted(int index )
highlighted(int index)
highlighted(int itemId)
history() const
hitButton(const QPoint &) const
hitButton(const QPoint &pos) const
hitTest(const QPointF &point, Qt::HitTestAccuracy accuracy) const = 0
hitTestComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, const QPoint &pt, const QWidget *w = 0) const
hitTestComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, const QPoint &pt, const QWidget *widget = 0) const = 0
hitTestComplexControl(ComplexControl control, const QStyleOptionComplex *option, const QPoint &pos, const QWidget *widget = 0) const
home()
home(bool mark)
home(bool mark=false)
homePath()
horizontalAlignment(Qt::Alignment align)
horizontalHeader() const
horizontalHeaderFormat() const
horizontalHeaderItem(int column) const
horizontalOffset() const
horizontalOffset() const = 0
horizontalScaleAt(qreal step) const
horizontalScrollBar() const
horizontalScrollBarPolicy() const
horizontalScrollMode() const
horizontalScrollbarAction(int action)
horizontalScrollbarValueChanged(int value)
horizontalShearAt(qreal step) const
horizontalSliderPressed()
horizontalSliderReleased()
horizontalStepsPerItem() const
host() const
hostFound()
hostName() const
hostNames() const
hotSpot() const
hotSpot() const = 0
hour() const
hoverEnterEvent(QGraphicsSceneHoverEvent *event)
hoverLeaveEvent(QGraphicsSceneHoverEvent *event)
hoverMoveEvent(QGraphicsSceneHoverEvent *event)
hovered()
hovered(QAction *)
hovered(QAction *action)
hslide(int)
html() const
hue() const // 0 <= hue < 360
hueF() const // 0.0 <= hueF < 360.0
icon() const
icon() const = 0
icon(IconType type) const
icon(const QFileInfo &info) const
iconCache() const
iconList() const = 0
iconPixmap() const
iconProvider()
iconProvider() const
iconSet() const
iconSet(bool on) const
iconSet(int section) const
iconSize() const
iconSizeChanged(const QSize &iconSize)
iconText() const
iconToFilePath(const QIcon &pm) const
iconToFilePath(const QIcon &pm) const = 0
iconToQrcPath(const QIcon &pm) const
iconToQrcPath(const QIcon &pm) const = 0
iconView() const
id() const
id(QAbstractButton *) const
id(QAbstractButton *button) const
id(QWidget *) const
idealWidth() const
identifierName()
idnWhitelist()
ignorableWhitespace(const QString& ch)
ignoreDoubleClick()
ignoreMessage(QtMsgType type, const char *message)
ignoreWhatsThis() const
image(Mode mode = Clipboard) const
imageAdvanced() const
imageCount() const
imageData() const
imageFormat(QIODevice *device)
imageFormat(const QString &fileName)
implementation() const
importNode(const QDomNode& importedNode, bool deep)
inFont(QChar) const
inSort(Q3PtrCollection::Item ) // add item sorted in list
inSort(const Q3ListBoxItem *)
inSort(const QString& text)
inText(const QPoint& pos) const
inWhatsThisMode()
inactive() const
includeFile() const = 0
includeHints() const = 0
incomingConnection(int handle)
incomingConnection(int socket )
indent()
indent() const
indentation() const
index() const
index(const Q3IconViewItem *item) const
index(const Q3ListBoxItem *) const
index(const QString &path, int column = 0) const
index(const QString& fieldName) const
index(const QString& qName) const
index(const QString& uri, const QString& localPart) const
index(const QStringList& fieldNames) const
index(int row, int column = 0, const QModelIndex &parent = QModelIndex()) const
index(int row, int column, const QModelIndex &parent = QModelIndex()) const
index(int row, int column, const QModelIndex &parent = QModelIndex()) const = 0
index(int row, int column, const QModelIndex &parent) const
indexAbove(const QModelIndex &index) const
indexAt(const QPoint &p) const
indexAt(const QPoint &point) const = 0
indexBelow(const QModelIndex &index) const
indexChange(int section, int fromIndex, int toIndex)
indexChanged(int idx)
indexFromItem(QListWidgetItem *item) const
indexFromItem(QTableWidgetItem *item) const
indexFromItem(QTreeWidgetItem *item, int column = 0) const
indexFromItem(const QStandardItem *item) const
indexIn(const QByteArray &ba, int from = 0) const
indexIn(const QString &str, int from = 0) const
indexIn(const QString &str, int offset = 0, CaretMode caretMode = CaretAtZero) const
indexInQuery(const QModelIndex &item) const
indexOf(QChar c, int from = 0, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
indexOf(QDesignerWidgetDataBaseItemInterface *item) const
indexOf(QLayoutItem *item) const = 0
indexOf(QWidget *) const
indexOf(QWidget *w) const
indexOf(QWidget *widget) const
indexOf(QWidget *widget) const = 0
indexOf(QWidget* ) const
indexOf(char c, int from = 0) const
indexOf(const QByteArray &a, int from = 0) const
indexOf(const QRegExp &, int from = 0) const
indexOf(const QRegExp &rx, int from = 0) const
indexOf(const QString &name) const
indexOf(const QString &name) const = 0
indexOf(const QString &s, int from = 0) const
indexOf(const QString &s, int from = 0, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
indexOf(const T &t, int from = 0) const
indexOf(const char *c, int from = 0) const
indexOf(int row, int col) const
indexOf(uint i ) const
indexOfChild(QTreeWidgetItem *child) const
indexOfChild(const QAccessibleInterface *) const = 0
indexOfChild(const QAccessibleInterface *child) const
indexOfChild(const QAccessibleInterface*) const
indexOfClassInfo(const char *name) const
indexOfClassName(const QString &className, bool resolveName = true) const
indexOfEnumerator(const char *name) const
indexOfMethod(const char *method) const
indexOfObject(QObject *object, bool resolveName = true) const
indexOfProperty(const char *name) const
indexOfSignal(const char *signal) const
indexOfSlot(const char *slot) const
indexOfTopLevelItem(QTreeWidgetItem *item) // ### Qt 5: remove me
indexOfTopLevelItem(QTreeWidgetItem *item) const
indexRowSizeHint(const QModelIndex &index) const
indexWidget(const QModelIndex &index) const
indexes() const
indexesMoved(const QModelIndexList &indexes)
info(const QString &entry ) const
information(QWidget *parent, const QString &title, const QString &text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton)
information(QWidget *parent, const QString &title, const QString& text, const QString& button0Text, const QString& button1Text = QString(), const QString& button2Text = QString(), int defaultButtonNumber = 0, int escapeButtonNumber = -1)
information(QWidget *parent, const QString &title, const QString& text, int button0, int button1 = 0, int button2 = 0)
informativeText() const
inheritedFromWidget(int index) const = 0
init()
init(Q3IconViewItem *after = 0#ifndef QT_NO_PICTURE , QPicture *pic = 0#endif )
init(QWidget *creator, const QString& lbl, const QString &canc, int totstps)
init(const QColor &color, Qt::BrushStyle bs)
init(const QHostAddress & address, Q_UINT16 port, int backlog )
init(const QImage&)
init(const QPixmap& pixmap, int hx, int hy)
init(const QWidget *w)
init(int numRows, int numCols)
init(int row, int col)
init(int w, int h, int chunksze=16, int maxclust=100)
init(int)
init(int, int, Type = PixmapType)
init(uint, KeyType, bool, bool )
initAlphaPixmap(uchar *bytes, int length, struct tagBITMAPINFO *bmi)
initDragEnter(QDropEvent *e)
initFrame()
initFrom(const QWidget *widget)
initTiles(QPixmap p, int h, int v, int tilewidth, int tileheight)
initialize()
initialize(QDesignerFormEditorInterface *core)
initialize(QObject *object) const = 0
initializeGL()
initializeOverlayGL()
initializePlugins(QDesignerFormEditorInterface *core)
initializeResources()
initializeSections()
initializeSections(int start, int end)
initialized() const
inputContext()
inputContext() const
inputFormatList()
inputFormats()
inputMask() const
inputMethodEvent(QInputMethodEvent *)
inputMethodEvent(QInputMethodEvent *event)
inputMethodQuery(Qt::InputMethodQuery property) const
inputMethodQuery(Qt::InputMethodQuery query) const
inputMethodQuery(Qt::InputMethodQuery) const
input_bin()
input_dec()
input_double()
input_hex()
input_int()
input_oct()
insert()
insert(Q3StyleSheetItem* item)
insert(QAbstractButton *, int id=-1)
insert(QWidget * widget, QSqlField * field)
insert(QWidget * widget, const QString& field)
insert(bool invalidate = true)
insert(const Key &key, T *object, int cost = 1)
insert(const Key &key, const T &value)
insert(const Key &key, const T &value, bool overwrite)
insert(const QString & classname, const QString & property)
insert(const QString &)
insert(const QString &key, const QPixmap&)
insert(const QString &text, bool, bool = true, bool = true)
insert(const QString &text, uint insertionFlags = CheckNewLines | RemoveSelected)
insert(int i)
insert(int i, QChar c)
insert(int i, char c)
insert(int i, const QByteArray &a)
insert(int i, const QChar *uc, int len)
insert(int i, const QLatin1String &s)
insert(int i, const QString &s)
insert(int i, const T &t)
insert(int i, const char *s)
insert(int i, int n, const T &t)
insert(int index, QDesignerWidgetDataBaseItemInterface *item)
insert(int pos, const Q3SqlFieldInfo &fieldInfo)
insert(int pos, const QSqlField& field)
insert(iterator before, const T &t)
insert(iterator before, int n, const T &x)
insert(typename Q3ValueList<T>::Iterator pos, typename Q3ValueList<T>::size_type n, const T& x)
insert(uint index, Item ) // insert item at index
insertAction(QAction *before, QAction *action)
insertActions(QAction *before, QList<QAction*> actions)
insertAfter(const QDomNode& newChild, const QDomNode& refChild)
insertAndMark(const QString&, bool mark)
insertAny(const QIcon *icon, const QString *text, const QObject *receiver, const char *member, const QKeySequence *shorcut, const QMenu *popup, int id, int index)
insertAt(const QString &s, int line, int col, bool mark)
insertAt(const QString &text, int para, int index)
insertAt(uint index, Q3PtrCollection::Item ) // add item at i'th position
insertBefore(const QDomNode& newChild, const QDomNode& refChild)
insertBlock()
insertBlock(const QTextBlockFormat &format)
insertBlock(const QTextBlockFormat &format, const QTextCharFormat &charFormat)
insertChild(int index, QTreeWidgetItem *child)
insertChildren(int index, const QList<QTreeWidgetItem*> &children)
insertColumn(int column)
insertColumn(int column, const QList<QStandardItem*> &items)
insertColumn(int column, const QModelIndex &parent = QModelIndex())
insertColumns(int col, int count = 1)
insertColumns(int column, int count)
insertColumns(int column, int count, const QModelIndex &parent = QModelIndex())
insertColumns(int column, int count, const QModelIndex &parent)
insertColumns(int pos, int num)
insertCurrent()
insertData(unsigned long offset, const QString& arg)
insertEntry(const Q3ValueList<QUrlInfo> &fi, Q3NetworkOperation *op)
insertExpand(uint index, Item ) // insert, expand if necessary
insertFragment(const QTextDocumentFragment &fragment)
insertFrame(const QTextFrameFormat &format)
insertFromMimeData(const QMimeData *source)
insertHtml(const QString &html)
insertHtml(const QString &text)
insertImage(const QString &name)
insertImage(const QTextImageFormat &format)
insertImage(const QTextImageFormat &format, QTextFrameFormat::Position alignment)
insertInGrid(Q3IconViewItem *item)
insertItem(Q3IconViewItem *item, Q3IconViewItem *after = 0L)
insertItem(Q3ListViewItem *)
insertItem(QMenuItem *item, int id=-1, int index=-1)
insertItem(const Q3ListBoxItem *, const Q3ListBoxItem *after)
insertItem(const Q3ListBoxItem *, int index=-1)
insertItem(const QKeySequence& key, int id=-1)
insertItem(const QPixmap &pixmap, const QString &text, int index=-1 )
insertItem(const QPixmap &pixmap, const QString &text, int index=-1)
insertItem(const QPixmap &pixmap, int index=-1 )
insertItem(const QPixmap &pixmap, int index=-1)
insertItem(const QString &text, int index=-1 )
insertItem(const QString &text, int index=-1)
insertItem(int index, QLayoutItem *)
insertItem(int index, QWidget *widget, const QIcon &icon, const QString &text)
insertItem(int index, QWidget *widget, const QString &text)
insertItem(int index, const QIcon &icon, const QString &text, const QVariant &userData = QVariant())
insertItem(int index, const QString &text, const QVariant &userData = QVariant())
insertItem(int row, QListWidgetItem *item)
insertItem(int row, const QString &label)
insertItems(int index, const QStringList &texts)
insertItems(int row, const QStringList &labels)
insertLayout(int index, QLayout *layout, int stretch = 0)
insertLine(const QString &s, int line = -1)
insertList(QTextListFormat::Style style)
insertList(const QTextListFormat &format)
insertMenu(QAction *before, QMenu *menu)
insertMulti(const Key &key, const T &value)
insertPage(QWidget*, const QString&, int )
insertParagraph(const QString &text, int para)
insertPermanentWidget(int index, QWidget *widget, int stretch = 0)
insertPlainText(const QString &text)
insertPolicy() const
insertRecord(int row, const QSqlRecord &record)
insertRow(int row)
insertRow(int row, QStandardItem *item)
insertRow(int row, const QList<QStandardItem*> &items)
insertRow(int row, const QModelIndex &parent = QModelIndex())
insertRowIntoTable(const QSqlRecord &values)
insertRows(int pos, int num)
insertRows(int row, int count = 1)
insertRows(int row, int count)
insertRows(int row, int count, const QModelIndex &parent = QModelIndex())
insertRows(int row, int count, const QModelIndex &parent)
insertSeparator(QAction *before)
insertSeparator(int index=-1)
insertSpacing(int index, int size)
insertStrList(const Q3StrList &, int index=-1 )
insertStrList(const Q3StrList *, int index=-1 )
insertStrList(const char **, int numStrings=-1, int index=-1)
insertStretch(int index, int stretch = 0)
insertStringList(const QStringList &, int index=-1 )
insertStringList(const QStringList&, int index=-1)
insertSubstitution(const QString&, const QString &)
insertSubstitutions(const QString&, const QStringList &)
insertTab(QWidget *, const QString &, int index = -1)
insertTab(QWidget *child, const QIcon& iconset, const QString &label, int index = -1)
insertTab(int index, QWidget *widget, const QIcon& icon, const QString &label)
insertTab(int index, QWidget *widget, const QString &)
insertTab(int index, const QIcon&icon, const QString &text)
insertTab(int index, const QString &text)
insertTable(int rows, int cols)
insertTable(int rows, int cols, const QTextTableFormat &format)
insertText(const QString &text)
insertText(const QString &text, const QTextCharFormat &format)
insertToolBar(QToolBar *before, QToolBar *toolbar)
insertToolBarBreak(QToolBar *before)
insertTopLevelItem(int index, QTreeWidgetItem *item)
insertTopLevelItems(int index, const QList<QTreeWidgetItem*> &items)
insertWid(QWidget*)
insertWidget(QAction *before, QWidget *widget)
insertWidget(QWidget *widget, const QPair<int, int> &cell)
insertWidget(int index, QWidget *w)
insertWidget(int index, QWidget *widget)
insertWidget(int index, QWidget *widget, int stretch = 0)
insertWidget(int index, QWidget *widget, int stretch = 0, Qt::Alignment alignment = 0)
insertWidget(int row, int col, QWidget *w)
insert_helper(QAbstractButton* , int id=-1)
insert_other(const char *key, Q3PtrCollection::Item, int cost, int priority)
insert_string(const QString &key, Q3PtrCollection::Item, int cost, int priority)
insertionPolicy() const
insideMargin() const
insideSpacing() const
installDefaultFactory(Q3EditorFactory * factory)
installDefaultFactory(Q3SqlEditorFactory * factory)
installDefaultMap(Q3SqlPropertyMap * map)
installEditorFactory(Q3SqlEditorFactory * f )
installEventFilter(QObject *)
installFactory(InterfaceFactory)
installIOHandler(const QString &)
installIOHandler(const QString &format)
installPropertyMap(Q3SqlPropertyMap * map)
installPropertyMap(Q3SqlPropertyMap* m )
installRootObjectHandler(RootObjectHandler)
installSceneEventFilter(QGraphicsItem *filterItem)
installTranslator(QTranslator * messageFile)
installUpdateHandler(UpdateHandler)
instance()
instance(QThread *thread = 0)
instance(int screen = -1)
intProperty(int propertyId) const
intSignal(int)
intValue() const
integerBase() const
interface() const
interfaceFromIndex(int index)
interfaceFromName(const QString &name)
internalActivate(int )
internalActivation()
internalClickTimeout()
internalComboBoxActivated(int)
internalComboBoxHighlighted(int)
internalConstCall(QDBus::CallMode mode, const QString &method, const QList<QVariant> &args = QList<QVariant>()) const
internalDelayedPopup()
internalDrag(Qt::DropActions supportedActions)
internalDrop(QDropEvent *e)
internalEntityDecl(const QString& name, const QString& value)
internalHighlight(int )
internalId() const
internalPointer() const
internalPropGet(const char *propname) const
internalPropSet(const char *propname, const QVariant &value)
internalSetSloppyAction()
internalState() const
internalSubset() const
internalToggle(Q3Action*)
interpretText()
interrupt()
intersect(const QItemSelectionRange &other) const // ### Qt 5: make QT4_SUPPORT
intersect(const QLineF &l, QPointF *intersectionPoint) const
intersect(const QRect &r) const // ### Qt 5: make QT4_SUPPORT
intersect(const QRectF &r) const // ### Qt 5: make QT4_SUPPORT
intersect(const QRegion &r) const
intersect(const QSet<T> &other)
intersected(const QRect &other) const
intersected(const QRectF &other) const
intersects(const QItemSelectionRange &other) const
intersects(const QRect &r) const
intersects(const QRect& r) const
intersects(const QRectF &r) const
intersects(const QRectF &rect) const
intersects(const QRegion &r) const
intrinsicSize(QTextDocument *doc, int posInDocument, const QTextFormat &format)
invalidDataPolicy()
invalidNextOffset(Q3DockWindow *dw)
invalidate()
invalidateFixedSizes()
invalidateHeight()
inverseWorldMatrix() const
invertPixels(InvertMode = InvertRgb)
invertSelection()
inverted(bool *invertible = 0) const
invertedAppearance()
invertedAppearance() const
invertedControls() const
invisibleRootItem() const
invokeMethod(Method method, int child = 0, const QVariantList &params = QVariantList())
invokeMethod(QObject *obj, const char *member, Qt::ConnectionType, QGenericReturnArgument ret, QGenericArgument val0 = QGenericArgument(0), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument())
invokeMethodEx(Method method, int child, const QVariantList &params)
ioDevice() const
ip() const
isAccelerated() const
isActive()
isActive() const
isActiveWindow() const
isAncestorOf(const QGraphicsItem *child) const
isAncestorOf(const QWidget *child) const
isAnchor() const
isAnimated() const
isAttr() const
isAttribute(int index) const = 0
isAutoValue() const
isAvailable()
isBackwardAvailable() const
isBitmapScalable(const QString &family, const QString &style = QString()) const
isBrushSet(ColorGroup cg, ColorRole cr) const
isCDATASection() const
isCachingEnabled() const
isCalculated(const QString& name) const
isChanged(int index) const = 0
isCharacterData() const
isCheckable() const
isChecked() const
isChecked(const Q3ListViewItem*) const
isClean() const
isClickEnabled(int section = -1) const
isClickable() const
isClipEnabled() const
isCloseEnabled() const
isCollapsible(int index) const
isColumnHidden(int col) const
isColumnHidden(int column) const
isColumnReadOnly(int col) const
isColumnSelected(int col, bool full = false) const
isColumnSelected(int column, const QModelIndex &parent) const
isColumnStretchable(int col) const
isComment() const
isCompat() const = 0
isComposing() const = 0
isCompressed() const
isConnected() const
isContainer() const = 0
isContainer(QObject *object, bool resolveName = true) const
isContentsPreviewEnabled() const
isCopyOf(const QFont &) const
isCopyOf(const QPalette &p) const
isCopyOf(const QTextCursor &other) const
isCurrent() const
isCustom() const = 0
isCustom(QObject *object, bool resolveName = true) const
isCustomizable() const
isDefault() const
isDefaultUp() const
isDelayedReply() const
isDescending(int i) const
isDesignable(const QObject *obj = 0) const
isDetached()
isDetached() const
isDigit() const
isDir() const
isDir(bool *ok = 0 )
isDir(const QModelIndex &index) const
isDirty() const = 0
isDirty(const QModelIndex &index) const
isDockEnabled(Q3DockArea *area) const
isDockEnabled(Q3DockWindow *tb, Q3DockArea *area) const
isDockEnabled(Q3DockWindow *tb, Qt::Dock dock) const
isDockEnabled(Qt::Dock dock) const
isDockMenuEnabled() const
isDockNestingEnabled() const
isDockWindowAccepted(Q3DockWindow *dw)
isDocument() const
isDocumentFragment() const
isDocumentType() const
isDown() const
isDownEnabled() const
isDriverAvailable(const QString &name)
isEditable() const
isEditable(const QObject *obj = 0) const
isEditing() const
isEffectEnabled(Qt::UIEffect)
isElement() const
isEmpty() const
isEmpty() const = 0
isEnabled() const
isEnabledTo(QWidget*) const
isEntity() const
isEntityReference() const
isEnumType() const
isEqual(ColorGroup cr1, ColorGroup cr2) const
isEqual(const Q3GArray &a) const
isExclusive() const
isExecutable() const
isExpanded() const
isExpanded(const QModelIndex &index) const
isFile() const
isFinished() const
isFixedPitch(const QString &family, const QString &style = QString()) const
isFlag() const
isFlagType() const
isFlat() const
isForwardAvailable() const
isForwardOnly() const
isFullScreen() const
isGenerated() const
isGenerated(const QString& name) const
isGenerated(int i) const
isGrayscale() const
isGridVisible() const
isHeaderVisible() const
isHidden() const
isHorizontalSliderPressed()
isHorizontallyStretchable() const
isIdentity() const
isIndexHidden(const QModelIndex &index) const
isIndexHidden(const QModelIndex &index) const = 0
isInfoPreviewEnabled() const
isInitialized() const = 0
isInteractive() const
isItemEnabled(int id ) const
isItemEnabled(int index) const
isItemExpanded(const QTreeWidgetItem *item) const
isItemHidden(const QListWidgetItem *item) const
isItemHidden(const QTreeWidgetItem *item) const
isItemSelected(const QListWidgetItem *item) const
isItemSelected(const QTableWidgetItem *item) const
isItemSelected(const QTreeWidgetItem *item) const
isLastDockWindow(Q3DockWindow *dw)
isLeapYear(int year)
isLetter() const
isLetterOrNumber() const
isLibrary(const QString &fileName)
isListening() const
isLoaded() const
isLocalFile() const
isManaged(QWidget *widget) const = 0
isMark() const
isMaximized() const
isMinimal() const
isMinimized() const
isModal() const
isModified() const
isMovable() const
isMovingEnabled() const
isMultiSelection() const
isNotation() const
isNull()
isNull() const
isNull(const QString& name) const
isNull(int field)
isNull(int field) const
isNull(int i)
isNull(int i) const
isNumber() const
isObscured() const
isObscuredBy(const QGraphicsItem *item) const
isOn() const
isOpaque() const
isOpen() const
isOpen(const Q3ListViewItem *) const
isOpenError() const
isOptionEnabled(PrintDialogOption option) const
isOptionEnabled(PrinterOption) const
isOverride() const
isParentOf(const QUrl &url) const
isPassiveInteractor(QWidget *widget)
isPhase2() const
isPrint() const
isProcessingInstruction() const
isPromoted() const = 0
isPunct() const
isReadOnly() const
isReadOnly() const = 0
isReadable() const
isRedoAvailable() const
isRegistered(int type)
isRelative() const
isRelativePath() const
isRelativePath(const QString &path)
isRelativeUrl(const QString &url )
isRenaming() const
isReplaceable() const
isReplyRequired() const
isResettable() const
isResizeEnabled() const
isResizeEnabled(int section = -1) const
isRoot() const
isRowHidden(int row) const
isRowHidden(int row, const QModelIndex &parent) const
isRowReadOnly(int row) const
isRowSelected(int row, bool full = false) const
isRowSelected(int row, const QModelIndex &parent) const
isRowStretchable(int row) const
isRubberSelecting() const
isRunning() const
isScalable(const QString &family, const QString &style = QString()) const
isScriptable(const QObject *obj = 0) const
isSectionHidden(int logicalIndex) const
isSelect() const
isSelectable() const
isSelected() const
isSelected(const Q3ListBoxItem *) const
isSelected(const Q3ListViewItem *) const
isSelected(const QModelIndex &index) const
isSelected(int row, int col) const
isSelected(int row, int col, bool includeCurrent) const
isSelected(int) const
isSeparator() const
isSeparator(const QPoint &pos) const
isSequential() const
isServiceRegistered(const QString &serviceName) const
isSessionRestored() const
isSharing() const
isSignal(int index) const = 0
isSizeGripEnabled() const
isSliderDown() const
isSlot(int index) const = 0
isSmoothlyScalable(const QString &family, const QString &style = QString()) const
isSolid() const
isSortIndicatorShown() const
isSortingEnabled() const
isSpace() const
isStored(const QObject *obj = 0) const
isStretchEnabled() const
isStretchEnabled(int section) const
isStretchable() const
isSupported(const QString& feature, const QString& version) const
isSymLink() const
isSymbol() const
isSystemTrayAvailable()
isTabEnabled(QWidget *) const
isTabEnabled(const char*) const // compatibility
isTabEnabled(int index) const
isTearOffEnabled() const
isTearOffMenuVisible() const
isText() const
isTextModeEnabled() const
isTextVisible() const
isToggleAction() const
isTopLevel() const
isTrimmed(const QString& name) const
isTristate() const
isUndoAvailable() const
isUndoRedoEnabled() const
isUpEnabled() const
isUser(const QObject *obj = 0) const
isValid() const
isValid() const = 0
isValid(int h, int m, int s, int ms = 0)
isValid(int y, int m, int d)
isValidCursorPosition(int pos) const
isVerticalSliderPressed()
isVerticallyStretchable() const
isVirtualDesktop() const
isVisible() const
isVisible(int index) const = 0
isVisibleTo(QWidget*) const
isWidgetSelected(QWidget *widget) const
isWindow() const
isWindowModified() const
isWorking() const
isWrapping() const
isWritable() const
italic() const
italic(const QString &family, const QString &style) const
item() const
item(QObject *object) const = 0
item(const QString& name)
item(const QString& name) const
item(int i) const
item(int index) const
item(int row) const
item(int row, int col ) const
item(int row, int col) const
item(int row, int column = 0) const
item(int row, int column) const
itemAbove() const
itemActivated(QListWidgetItem *item)
itemActivated(QTableWidgetItem *item)
itemActivated(QTreeWidgetItem *item, int column)
itemAt(const QPoint & screenPos) const
itemAt(const QPoint &) const
itemAt(const QPoint &p) const
itemAt(const QPoint &pos) const
itemAt(const QPointF &pos) const
itemAt(int index) const = 0
itemAt(int x, int y) const
itemAt(int) const
itemBelow() const
itemChange(GraphicsItemChange change, const QVariant &value)
itemChanged()
itemChanged(Q3NetworkOperation *)
itemChanged(Q3NetworkOperation *res )
itemChanged(QListWidgetItem *item)
itemChanged(QStandardItem *item)
itemChanged(QTableWidgetItem *item)
itemChanged(QTreeWidgetItem *item, int column)
itemClicked(QListWidgetItem *item)
itemClicked(QTableWidgetItem *item)
itemClicked(QTreeWidgetItem *item, int column)
itemCollapsed(QTreeWidgetItem *item)
itemData(const QModelIndex &index) const
itemData(int index, int role = Qt::UserRole) const
itemDelegate() const
itemDelegate(const QModelIndex &index) const
itemDelegateForColumn(int column) const
itemDelegateForRow(int row) const
itemDoubleClicked(QListWidgetItem *item)
itemDoubleClicked(QTableWidgetItem *item)
itemDoubleClicked(QTreeWidgetItem *item, int column)
itemEditorFactory() const
itemEntered(QListWidgetItem *item)
itemEntered(QTableWidgetItem *item)
itemEntered(QTreeWidgetItem *item, int column)
itemExpanded(QTreeWidgetItem *item)
itemFromIndex(const QModelIndex &index) const
itemHeight(int index = 0) const
itemIcon(int index) const
itemIndexMethod() const
itemInfo(int index) const = 0
itemInserted(int index)
itemMargin() const
itemNumber(const QTextBlock &) const
itemParameter(int id) const
itemPixmapRect(const QRect &r, int flags, const QPixmap &pixmap) const
itemPos() const
itemPos(const Q3ListViewItem *)
itemPressed(QListWidgetItem *item)
itemPressed(QTableWidgetItem *item)
itemPressed(QTreeWidgetItem *item, int column)
itemPrototype() const
itemRect(Q3ListBoxItem *item) const
itemRect(const Q3ListViewItem *) const
itemRemoved(int index)
itemRenamed(Q3IconViewItem *item)
itemRenamed(Q3IconViewItem *item, const QString &)
itemRenamed(Q3ListViewItem *item, int col )
itemRenamed(Q3ListViewItem *item, int col, const QString &)
itemSelectionChanged()
itemText(const QTextBlock &) const
itemText(int index) const
itemTextBackground() const
itemTextPos() const
itemTextRect(const QFontMetrics &fm, const QRect &r, int flags, bool enabled, const QString &text) const
itemToolTip(int index) const
itemUpdated(QGraphicsItem *item, const QRectF &rect)
itemVisible(const Q3ListBoxItem *)
itemVisible(int index)
itemWidget(QListWidgetItem *item) const
itemWidget(QTreeWidgetItem *item, int column) const
items() const
items(const QMimeData *data) const
items(const QPainterPath &path, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
items(const QPoint &pos) const
items(const QPointF &pos) const
items(const QPolygon &polygon, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
items(const QPolygonF &polygon, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
items(const QRect &rect, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
items(const QRectF &rect, Qt::ItemSelectionMode mode = Qt::IntersectsItemShape) const
items(int x, int y) const
itemsBoundingRect() const
itemsExpandable() const
itemsMovable() const
iterator
iterator()
iterator(QTextFrame *frame, int block, int begin, int end)
iterator(const iterator &o)
iterator_category
join(const QString &sep) const
joinPreviousEditBlock()
joinStyle() const
joining() const
julianToGregorian(uint jd, int &y, int &m, int &d)
jumpTable()
jumpTable() const
jumpToFrame(int frameNumber)
jumpToImage(int imageNumber)
jumpToNextFrame()
jumpToNextImage()
kerning() const
key() const
key(const T &value) const
key(int id )
key(int index) const
key(int, bool) const
keyBindings(StandardKey key)
keyCount() const
keyPressEvent(QKeyEvent * e)
keyPressEvent(QKeyEvent * event)
keyPressEvent(QKeyEvent *)
keyPressEvent(QKeyEvent *e )
keyPressEvent(QKeyEvent *e)
keyPressEvent(QKeyEvent *ev)
keyPressEvent(QKeyEvent *event)
keyPressEvent(QKeyEvent* )
keyPressEvent(QKeyEvent*)
keyReleaseEvent(QKeyEvent *)
keyReleaseEvent(QKeyEvent *e)
keyReleaseEvent(QKeyEvent *event)
keyToAscii(Qt::Key key)
keyToString(QKeySequence k )
keyToValue(const char *key) const
key_type
keyboardGrabber()
keyboardInputDirection()
keyboardInputInterval()
keyboardInputLocale()
keyboardModifiers()
keyboardSearch(const QString &search)
keypadNavigationEnabled()
keys()
keys() const
keys() const = 0
keys(const T &value) const
keysToValue(const char * keys) const
kill()
kill() const
killIdleTimer()
killLine()
killTimer(int id)
label() const
label(int section) const
labelText() const
labelText(DialogLabel label) const
language()
language() const
languageChange() // compat
languageToString(Language language)
languages(const QString &key )
last()
last() // set last item in list curr
lastChild() const
lastChildElement(const QString &tagName = QString()) const
lastCursorPosition() const
lastError() const
lastIndexIn(const QString &str, int offset = -1, CaretMode caretMode = CaretAtZero) const
lastIndexOf(QChar c, int from = -1, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
lastIndexOf(char c, int from = -1) const
lastIndexOf(const QByteArray &a, int from = -1) const
lastIndexOf(const QRegExp &, int from = -1) const
lastIndexOf(const QRegExp &rx, int from = -1) const
lastIndexOf(const QString &s, int from = -1) const
lastIndexOf(const QString &s, int from = -1, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
lastIndexOf(const T &t, int from = -1) const
lastIndexOf(const char *c, int from = -1) const
lastInsertId() const
lastItem() const
lastModified() const
lastPos() const
lastPosition() const
lastQuery() const
lastRead() const
lastRecordAvailable(bool available)
lastResortFamily() const
lastResortFont() const
lastResponse() const
lastScenePos() const
lastScreenPos() const
lastWindowClosed()
latin1_helper() const
launch(const QByteArray& buf, QStringList *env=0 )
launch(const QString& buf, QStringList *env=0 )
launchFinished()
layOut()
layOutButtonRow(QHBoxLayout * )
layOutTitleRow(QHBoxLayout *, const QString & )
layout()
layout() const
layoutAboutToBeChanged()
layoutChanged()
layoutData() const
layoutDefault(int *margin, int *spacing)
layoutDirection()
layoutDirection() const
layoutFunction(QString *margin, QString *spacing)
layoutInfo(DomLayout *layout, QObject *parent, int *margin, int *spacing)
layoutItems(const QRect&, bool testonly = false)
layoutMode() const
layout_helper(int numGlyphs)
lazyChildCount() const
leading() const
leaveEvent(QEvent *)
leaveWhatsThisMode()
left() const
left(QTextStream &s)
left(int len) const
leftBearing(QChar) const
leftDock() const
leftEdge() const
leftEdge(int nx) const
leftJustified(int width, char fill = ' ', bool truncate = false) const
leftJustify(uint width, char fill=' ', bool trunc=false)const
leftMargin() const
length() const
lengthProperty(int propertyId) const
lengthVectorProperty(int propertyId) const
lessThan(const QModelIndex &left, const QModelIndex &right) const
lessThan(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy)
lexicalHandler() const
lexicalHandler() const = 0
libraryPaths()
licensedProducts()
licensee()
light(int f = 150) const
line() const
lineAt(int i) const
lineCount() const
lineEdit() const
lineForTextPosition(int pos) const
lineLength(int row) const
lineNumber() const
lineNumber() const = 0
lineOf(int index)
lineOfChar(int para, int chr)
lineSpacing() const
lineStep() const
lineTo(const QPointF &p)
lineTo(qreal x, qreal y)
lineUp(bool keepNewLines)
lineUpDockWindows(bool keepNewLines = false)
lineUpToolBars(bool keepNewLines = false)
lineWidth() const
lineWrapColumnOrWidth() const
lineWrapMode() const
lines() const
linesOfParagraph(int para) const
link(const QString &newName)
link(const QString &oldname, const QString &newName)
linkActivated(const QString &)
linkActivated(const QString& link)
linkClicked(const QString&)
linkHovered(const QString &)
linkHovered(const QString& link)
linkUnderline() const
list(const QString &dir = QString())
list(const QString &dir=QString() )
listBox() const
listBoxSelectionChanged()
listChildren()
listInfo(const QUrlInfo& )
listInfo(const QUrlInfo&)
listStyle() const
listView() const
listen(const QHostAddress &address = QHostAddress::Any, quint16 port = 0)
listen(int backlog )
load()
load(QDataStream &ds)
load(QDataStream &stream, int type, void *data)
load(QIODevice *dev, QWidget *parentWidget=0)
load(QIODevice *dev, const char *format = 0)
load(QIODevice *device, QWidget *parentWidget = 0)
load(QIODevice *device, const char* format)
load(const QByteArray &contents)
load(const QFontPrivate *d, int script)
load(const QString & filename, const QString & directory = QString(), const QString & search_delimiters = QString(), const QString & suffix = QString())
load(const QString &file)
load(const QString &fileName, const char *format = 0)
load(const QString &fileName, const char* format=0)
load(const QString &filename)
load(const QString& fileName, const char *format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor)
load(const QString& fileName, const char *format, ColorMode mode)
load(const uchar *data, int len)
loadComboBoxExtraInfo(DomWidget *ui_widget, QComboBox *comboBox, QWidget *parentWidget)
loadExtraInfo(DomWidget *ui_widget, QWidget *widget, QWidget *parentWidget)
loadFromData(const QByteArray &data, const char* format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor)
loadFromData(const uchar *buf, int len, const char *format = 0)
loadFromData(const uchar *buf, uint len, const char* format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor)
loadFromData(const uchar *buf, uint len, const char* format, ColorMode mode)
loadHints() const
loadListWidgetExtraInfo(DomWidget *ui_widget, QListWidget *listWidget, QWidget *parentWidget)
loadNextPage()
loadPicture(const QString &format, const QString &filename, QPicture *)
loadPicture(const QString &format, const QString &filename, QPicture *pic)
loadResource(int type, const QUrl &name)
loadTableWidgetExtraInfo(DomWidget *ui_widget, QTableWidget *tableWidget, QWidget *parentWidget)
loadTreeWidgetExtraInfo(DomWidget *ui_widget, QTreeWidget *treeWidget, QWidget *parentWidget)
loadUiExtraInfo(DomUi *ui)
loadWidgetExtraInfo(DomWidget *ui_widget)
loadXlfd(int screen, int script, const QFontDef &request, int force_encoding_id = -1)
localAddress() const
localFileToUri(const QString&)
localHostName()
localName() const
localName(int index) const
localPort() const
locale()
locale() const
localeAwareCompare(const QString& s) const
locate(uint ) // get node at i'th pos
location(LibraryLocation) // ### Qt 5: consider renaming it to path()
lock()
lockForRead()
lockForWrite()
logicalFontSize() const
logicalFontSizeStep() const
logicalIndex(int visualIndex) const
logicalIndexAt(const QPoint &pos) const
logicalIndexAt(int position) const
logicalIndexAt(int x, int y) const
login(const QString &user = QString(), const QString &password = QString())
login(const QString &user=QString(), const QString &password=QString() )
longDayName(int weekday)
longMonthName(int month)
look_ascii(const char *key, Q3PtrCollection::Item, int )
look_int(long key, Q3PtrCollection::Item, int )
look_ptr(void *key, Q3PtrCollection::Item, int )
look_string(const QString& key, Q3PtrCollection::Item, int )
lookupHost(const QString &name, QObject *receiver, const char *member)
lookupId() const
loopCount() const
loopLevel()
loops() const
loopsRemaining() const
lostFocus()
lower()
lowerBound(const Key &key)
lowerBound(const Key &key) const
lowercasebase(QTextStream &s)
lowercasedigits(QTextStream &s)
macCGHandle() const
macEvent(EventHandlerCallRef, EventRef)
macEventFilter(EventHandlerCallRef, EventRef)
macGetOpenFileNames(const QString &, QString*, QWidget *, const char *, const QString&, QString *, bool = true, bool = false)
macGetSaveFileName(const QString &, const QString &, QString *, QWidget *, const char*, const QString&, QString *)
macMenu()
macMenu(MenuRef merge=0)
macQDAlphaHandle() const
macQDHandle() const
macSetFont(QPaintDevice *)
macUpdateMenuBar()
magenta() const
magentaF() const
mailServers() const
main
mainContainer() const = 0
mainContainerChanged(QWidget *mainContainer)
mainWidget()
mainWindow() const
majorVersion() const
majorVersion() const = 0
makeAbsolute()
makeAbsolute(const QString& abs_or_rel_name, const QString& context) const
makeArc(int x, int y, int w, int h, int a1, int a2)
makeArc(int x, int y, int w, int h, int a1, int a2, const QMatrix &matrix)
makeCurrent()
makeDecoder() const
makeEllipse(int x, int y, int w, int h)
makeEncoder() const
makeOverlayCurrent()
makeParagVisible(Q3TextParagraph *p)
makeRoomFor(int cost, int priority = -1)
makeRowLayout(Q3IconViewItem *begin, int &y, bool &changed)
makeVisible()
malloc(int alloc)
malloc(int sizeofTypedData, int size, int sizeofT, QVectorData *init)
manageAction(QAction *action)
manageWidget(QWidget *widget)
manhattanLength() const
map()
map(QObject *sender)
map(const QLine &l) const
map(const QLineF &l) const
map(const QPainterPath &p) const
map(const QPoint &p) const
map(const QPointF&p) const
map(const QPolygon &a) const
map(const QPolygonF &a) const
map(const QRegion &r) const
map(int x, int y, int *rx, int *ry) const
map(int x, int y, int *tx, int *ty) const
map(qreal x, qreal y, qreal *tx, qreal *ty) const
mapFrom(QWidget *, const QPoint &) const
mapFromGlobal(const QPoint &) const
mapFromItem(const QGraphicsItem *item, const QPainterPath &path) const
mapFromItem(const QGraphicsItem *item, const QPointF &point) const
mapFromItem(const QGraphicsItem *item, const QPolygonF &polygon) const
mapFromItem(const QGraphicsItem *item, const QRectF &rect) const
mapFromItem(const QGraphicsItem *item, qreal x, qreal y) const
mapFromParent(const QPainterPath &path) const
mapFromParent(const QPoint &) const
mapFromParent(const QPointF &point) const
mapFromParent(const QPolygonF &polygon) const
mapFromParent(const QRectF &rect) const
mapFromParent(qreal x, qreal y) const
mapFromScene(const QPainterPath &path) const
mapFromScene(const QPointF &point) const
mapFromScene(const QPolygonF &polygon) const
mapFromScene(const QRectF &rect) const
mapFromScene(qreal x, qreal y) const
mapFromScene(qreal x, qreal y, qreal w, qreal h) const
mapFromSource(const QModelIndex &sourceIndex) const
mapFromSource(const QModelIndex &sourceIndex) const = 0
mapRect(const QRect &) const
mapRect(const QRectF &) const
mapSelectionFromSource(const QItemSelection &selection) const
mapSelectionFromSource(const QItemSelection &sourceSelection) const
mapSelectionToSource(const QItemSelection &proxySelection) const
mapSelectionToSource(const QItemSelection &selection) const
mapTo(QWidget *, const QPoint &) const
mapToActual(int) const // obsolete, do not use
mapToGlobal(const QPoint &) const
mapToIndex(int section) const
mapToItem(const QGraphicsItem *item, const QPainterPath &path) const
mapToItem(const QGraphicsItem *item, const QPointF &point) const
mapToItem(const QGraphicsItem *item, const QPolygonF &polygon) const
mapToItem(const QGraphicsItem *item, const QRectF &rect) const
mapToItem(const QGraphicsItem *item, qreal x, qreal y) const
mapToLogical(int) const // obsolete, do not use
mapToParent(const QPainterPath &path) const
mapToParent(const QPoint &) const
mapToParent(const QPointF &point) const
mapToParent(const QPolygonF &polygon) const
mapToParent(const QRectF &rect) const
mapToParent(qreal x, qreal y) const
mapToPolygon(const QRect &r) const
mapToRegion(const QRect &r) const
mapToScene(const QPainterPath &path) const
mapToScene(const QPoint &point) const
mapToScene(const QPointF &point) const
mapToScene(const QPolygon &polygon) const
mapToScene(const QPolygonF &polygon) const
mapToScene(const QRect &rect) const
mapToScene(const QRectF &rect) const
mapToScene(int x, int y) const
mapToScene(int x, int y, int w, int h) const
mapToScene(qreal x, qreal y) const
mapToSection(int index) const
mapToSource(const QModelIndex &proxyIndex) const
mapToSource(const QModelIndex &proxyIndex) const = 0
mapped(QObject *)
mapped(QWidget *)
mapped(const QString &)
mapped(int)
mappedSection(QWidget *widget) const
mappedWidgetAt(int section) const
mapped_type
mapping(QObject *object) const
mapping(QWidget *widget) const
mapping(const QString &text) const
mapping(int id) const
margin() const
margin(Margin m) const
margins() const
margins(uint *top, uint *left, uint *bottom, uint *right) const
markContentsDirty(int from, int length)
markLine(int idx)
markedText() const
marshall(QDBusArgument &, int id, const void *data)
mask() const
mask(QPixmap *pix) const
match(const QModelIndex &start, int role, const QVariant &value, int hits = 1, Qt::MatchFlags flags = Qt::MatchFlags(Qt::MatchStartsWith|Qt::MatchWrap)) const
match(const QModelIndex &start, int role, const QVariant &value, int hits, Qt::MatchFlags flags) const
match(const QString &filter, const QString &fileName)
match(const QStringList &filters, const QString &fileName)
matchAllDirs() const
matchedLength() const
matches(QKeySequence::StandardKey key) const
matches(const QKeySequence &seq) const
matchesFlags(const Q3ListViewItem*) const
matchesFlags(const QTreeWidgetItem *item) const
matrix() const
matrixAt(qreal step) const
matrixEnabled() const
matrixForElement(const QString &id) const
maxCount() const
maxItemTextLength() const
maxItemWidth() const
maxLength() const
maxLogLines() const
maxPage() const
maxPendingConnections() const
maxSpace(int hint, Q3DockWindow *dw)
maxValue() const
maxVisibleItems() const
maxWidth() const
maximum() const
maximumBlockCount() const
maximumCacheSize() const
maximumDate() const
maximumHeight() const
maximumSize() const
maximumSize() const = 0
maximumTime() const
maximumViewportSize() const
maximumWidth() const
member() const
memberGroup(int index) const = 0
memberName(int index) const = 0
membufStderr()
membufStdout()
menu() const
menuAboutToShow()
menuAction() const
menuBar() const
menuRole() const
menuStatusText(int id)
menuText() const
menuWidget() const
merge(const QItemSelection &other, QItemSelectionModel::SelectionFlags command)
merge(const QTextFormat &other)
mergeBlockCharFormat(const QTextCharFormat &modifier)
mergeBlockFormat(const QTextBlockFormat &modifier)
mergeCells(const QTextCursor &cursor)
mergeCells(int row, int col, int numRows, int numCols)
mergeCharFormat(const QTextCharFormat &modifier)
mergeCurrentCharFormat(const QTextCharFormat &modifier)
mergeWith(const QUndoCommand *other)
message() const
messageChanged(const QString &message)
messageChanged(const QString &text)
messageClicked()
metaDataBase() const
metaInformation(MetaInformation info) const
metaObject() const
method() const
method(int index) const
methodCount() const
methodOffset() const
methodType() const
metric(PaintDeviceMetric m) const
metric(PaintDeviceMetric metric) const
metric(PaintDeviceMetric) const
metric(QPaintDevice::PaintDeviceMetric) const = 0
mibEnum() const = 0
mibEnums() const = 0
mid(int index, int len = -1) const
mid(int pos, int length = -1) const
midLineWidth() const
mightBeRichText(const QString&)
mightGrow()
mimeData() const
mimeData(Mode mode = Clipboard ) const
mimeData(const QList<QListWidgetItem*> items) const
mimeData(const QList<QTableWidgetItem*> items) const
mimeData(const QList<QTreeWidgetItem*> items) const
mimeData(const QModelIndexList &indexes) const
mimeFor(QString flav)
mimeFor(int flav)
mimeForFormat(const FORMATETC &formatetc) const = 0
mimeSourceFactory() const
mimeTypes() const
minLeftBearing() const
minPage() const
minRightBearing() const
minValue() const
minimum() const
minimumContentsLength() const
minimumDate() const
minimumDuration() const
minimumHeight() const
minimumHeightForWidth(int) const
minimumSectionSize() const
minimumSize() const
minimumSize() const = 0
minimumSizeHint() const
minimumTime() const
minimumWidth() const
minorVersion() const
minorVersion() const = 0
minute() const
mirrored(bool horizontally = false, bool vertically = true) const
mirroredChar() const
miterLimit() const
mkdir(const QModelIndex &parent, const QString &name)
mkdir(const QString &dir )
mkdir(const QString &dir)
mkdir(const QString &dirName) const
mkdir(const QString &dirName, bool createParentDirectories) const
mkdir(const QString &dirname )
mkpath(const QString &dirPath) const
mnemonic(const QString &text)
mode() const
modeButtonsDestroyed()
model() const
modelAboutToBeReset()
modelColumn() const
modelReset()
modelSorting() const
modificationChanged(bool m)
modifiers() const
month() const
monthName(int, FormatType format = LongFormat) const
monthShown() const
mouseButtonClicked(int button, Q3IconViewItem* item, const QPoint& pos)
mouseButtonClicked(int, Q3ListBoxItem*, const QPoint&)
mouseButtonClicked(int, Q3ListViewItem *, const QPoint&, int)
mouseButtonPressed(int button, Q3IconViewItem* item, const QPoint& pos)
mouseButtonPressed(int, Q3ListBoxItem*, const QPoint&)
mouseButtonPressed(int, Q3ListViewItem *, const QPoint& , int)
mouseButtons()
mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event)
mouseDoubleClickEvent(QMouseEvent * )
mouseDoubleClickEvent(QMouseEvent *)
mouseDoubleClickEvent(QMouseEvent *e)
mouseDoubleClickEvent(QMouseEvent *event)
mouseGrabber()
mouseGrabberItem() const
mouseHandler(int x, QMouseEvent *event)
mouseMoveEvent(QGraphicsSceneMouseEvent *event)
mouseMoveEvent(QMouseEvent * )
mouseMoveEvent(QMouseEvent *)
mouseMoveEvent(QMouseEvent *e)
mouseMoveEvent(QMouseEvent *ev)
mouseMoveEvent(QMouseEvent *event)
mouseMoveEvent(QMouseEvent *me)
mousePressEvent(QGraphicsSceneMouseEvent *event)
mousePressEvent(QMouseEvent * )
mousePressEvent(QMouseEvent *)
mousePressEvent(QMouseEvent *e)
mousePressEvent(QMouseEvent *ev)
mousePressEvent(QMouseEvent *event)
mousePressEvent(QMouseEvent *me)
mousePressEventEx(QMouseEvent *)
mouseReleaseEvent(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent(QMouseEvent * )
mouseReleaseEvent(QMouseEvent *)
mouseReleaseEvent(QMouseEvent *e)
mouseReleaseEvent(QMouseEvent *ev)
mouseReleaseEvent(QMouseEvent *event)
mouseReleaseEvent(QMouseEvent *me)
movableChanged(bool movable)
move(const QPoint &)
move(const QPoint &pnt)
move(double x, double y)
move(double x, double y, int frame)
move(int from, int to)
move(int x, int y)
moveBottom(int pos)
moveBottom(qreal pos)
moveBottomLeft(const QPoint &p)
moveBottomLeft(const QPointF &p)
moveBottomRight(const QPoint &p)
moveBottomRight(const QPointF &p)
moveBy(const QPoint &pnt)
moveBy(double dx, double dy)
moveBy(int dx, int dy)
moveCell(int, int) // obsolete, do not use
moveCenter(const QPoint &p)
moveCenter(const QPointF &p)
moveChild(QWidget* child, int x, int y )
moveContents(int x, int y)
moveCursor(CursorAction action)
moveCursor(CursorAction action, QTextCursor::MoveMode mode = QTextCursor::MoveAnchor)
moveCursor(CursorAction action, bool select)
moveCursor(CursorAction cursorAction, Qt::KeyboardModifiers modifiers)
moveCursor(CursorAction, Qt::KeyboardModifiers)
moveCursor(Q3TextEdit::CursorAction action, bool select)
moveCursor(QTextCursor::MoveOperation operation, QTextCursor::MoveMode mode = QTextCursor::MoveAnchor)
moveDockWindow(Q3DockWindow *, Qt::Dock = Qt::DockTop)
moveDockWindow(Q3DockWindow *, Qt::Dock, bool nl, int index, int extraOffset = -1)
moveDockWindow(Q3DockWindow *w, const QPoint &globalPos, const QRect &rect, bool swap)
moveDockWindow(Q3DockWindow *w, int index = -1)
moveEvent(QMoveEvent *)
moveItem(Q3ListViewItem *after)
moveLeft(int pos)
moveLeft(qreal pos)
movePosition(MoveOperation op, MoveMode = MoveAnchor, int n = 1)
movePosition(MoveOperation op, MoveMode mode = MoveAnchor)
moveRight(int pos)
moveRight(qreal pos)
moveSection(int from, int to)
moveSection(int section, int toIndex)
moveSplitter(int p)
moveSplitter(int pos, int index)
moveTo(const QPoint &p)
moveTo(const QPointF &p)
moveTo(int x, int t)
moveTo(qreal x, qreal t)
moveTo(qreal x, qreal y)
moveToJustAfter(Q3ListViewItem *)
moveToThread(QThread *thread)
moveToolBar(Q3DockWindow *, Qt::Dock = Qt::DockTop)
moveToolBar(Q3DockWindow *, Qt::Dock, bool nl, int index, int extraOffset = -1)
moveTop(int pos)
moveTop(qreal pos)
moveTopLeft(const QPoint &p)
moveTopLeft(const QPointF &p)
moveTopRight(const QPoint &p)
moveTopRight(const QPointF &p)
moved()
moved(int, int) // obsolete, do not use
movedContents(int dx, int dy)
movement() const
movie() const
msec() const
msecsTo(const QTime &) const
msg_index(uint)
msleep(unsigned long)
multiArg(int numArgs, const QString **args) const
multiLinesEnabled() const
mutable
mutableFindNode(QMapData::Node *update[], const Key &key) const
name() const
name() const = 0
nameFilter() const
nameFilters() const
nameFiltersFromString(const QString &nameFilter)
nameToIcon(const QString &filePath, const QString &qrcPath = QString())
nameToIcon(const QString &filePath, const QString &qrcPath)
nameToPixmap(const QString &filePath, const QString &qrcPath = QString())
nameToPixmap(const QString &filePath, const QString &qrcPath)
nameToType(const char *name)
namedItem(const QString& name) const
namedItemNS(const QString& nsURI, const QString& localName) const
names() const = 0
namespaceURI() const
nativeModifiers() const
nativeScanCode() const
nativeVirtualKey() const
naturalTextRect() const
naturalTextWidth() const
nav(Nav nav)
navigate(RelationFlag rel, int entry, QAccessibleInterface **target) const
navigate(RelationFlag relation, int index, QAccessibleInterface **iface) const = 0
navigate(RelationFlag, int, QAccessibleInterface **) const
negativeSign() const
neighbourItem(Direction dir, const QPoint &relativeTo, const Q3IconViewItem *item) const
netmask() const
neutralEnumerator(const QString &enumName) const = 0
newChild(const QUrlInfo &, Q3NetworkOperation *res )
newChildren(const Q3ValueList<QUrlInfo> &, Q3NetworkOperation *res )
newConnection()
newConnection(int socket )
newData()
newFolderClicked()
newItem(Item) // create object
newLine()
newLine() const
newPage()
newRow(const char *dataTag)
newValue(const QDate& d)
newValue(const QTime& t)
next()
next() // set next item in list curr
next() const
nextButton() const
nextCheckState()
nextCursorPosition(int oldPos, CursorMode mode = SkipCharacters) const
nextFrameDelay() const
nextImageDelay() const
nextInFocusChain() const
nextItem() const
nextNode(Node *node)
nextPendingConnection()
nextRecordAvailable(bool available)
nextSibling() const
nextSiblingElement(const QString &taName = QString()) const
nodeName() const
nodeType() const
nodeValue() const
node_construct(Node *n, const T &t)
node_copy(Node *from, Node *to, Node *src)
node_create(Node *update[], int offset)
node_create(QMapData *d, QMapData::Node *update[], const Key &key, const T &value)
node_delete(Node *update[], int offset, Node *node)
node_destruct(Node *from, Node *to)
node_destruct(Node *n)
noforcepoint(QTextStream &s)
noforcesign(QTextStream &s)
normal() const
normalCopy()
normalExit() const
normalGeometry() const
normalVector() const
normalize()
normalized() const
normalizedSignature(const char *method)
normalizedType(const char *type)
noshowbase(QTextStream &s)
notationDecl(const QString& name, const QString& publicId, const QString& systemId)
notationName() const
notations() const
notchSize() const
notchTarget() const
notchesVisible() const
notify(QObject *, QEvent *)
notifyAccessibilityUpdate(int, QAccessibleInterface*, int)
npDataTransferProgress(int, int )
npDone(bool )
npListInfo(const QUrlInfo & )
npReadyRead()
npStateChanged(int )
nullText() const
numBytes() const
numCaptures() const
numColors() const
numCols() const
numColumns() const
numCopies() const
numDigits() const
numItemsVisible() const
numLines() const
numRows() const
numRowsAffected()
numRowsAffected() const
numScreens() const
numSelections() const
number() const
number(double, char f = 'g', int prec = 6)
number(double, char f='g', int prec=6)
number(int, int base = 10)
number(int, int base=10)
number(long, int base=10)
number(qlonglong, int base = 10)
number(qlonglong, int base=10)
number(qulonglong, int base = 10)
number(qulonglong, int base=10)
number(uint, int base = 10)
number(uint, int base=10)
number(ulong, int base=10)
numberFlags() const
numberOfColumns() const
numberOptions() const
object() const
object() const = 0
object(const Key &key) const
object(int objectIndex) const
objectDestroyed()
objectDestroyed(QObject *)
objectDestroyed(QObject *object)
objectForFormat(const QTextFormat &) const
objectIndex() const
objectInspector() const
objectName() const
objectRegisteredAt(const QString &path) const
objects() const = 0
oct(Q3TextStream &s ) // set oct notation
oct(QTextStream &s)
offIconSet() const
offset() const
ok() const
okClicked()
okRename(int col)
onIconSet() const
onItem(Q3IconViewItem *item)
onItem(Q3ListBoxItem *item)
onItem(Q3ListViewItem *item)
onViewport()
opacity() const
opaqueArea() const
opaqueMoving() const
opaqueResize() const
open()
open(FILE *f, OpenMode flags)
open(OpenMode flags)
open(OpenMode mode )
open(OpenMode mode)
open(OpenMode openMode)
open(QIODevice::OpenMode flags, FILE *fh)
open(QIODevice::OpenMode flags, int fd)
open(QIODevice::OpenMode openMode)
open(const QString & db, const QString & user, const QString & password, const QString & host, int port, const QString & connOpts)
open(const QString & db, const QString & user, const QString & password, const QString & host, int port, const QString& connOpts)
open(const QString& db, const QString& user = QString(), const QString& password = QString(), const QString& host = QString(), int port = -1, const QString& connOpts = QString())
open(const QString& db, const QString& user, const QString& password, const QString& host, int port, const QString& connOpts)
open(const QString& user, const QString& password)
open(int fd, OpenMode flags)
openAssistant()
openExternalLinks() const
openFocusItem()
openGLVersionFlags()
openMode() const
openPersistentEditor(QListWidgetItem *item)
openPersistentEditor(QTableWidgetItem *item)
openPersistentEditor(QTreeWidgetItem *item, int column = 0)
openPersistentEditor(const QModelIndex &index)
openUrl(const QUrl &url)
operation() const
operationGet(Q3NetworkOperation *op )
operationInProgress() const
operationListChildren(Q3NetworkOperation *op )
operationMkDir(Q3NetworkOperation *op )
operationPut(Q3NetworkOperation *op )
operationPutChunk(Q3NetworkOperation *op )
operationRemove(Q3NetworkOperation *op )
operationRename(Q3NetworkOperation *op )
optimAppend(const QString &str)
optimAppendTag(int index, const QString & tag)
optimCharIndex(const QString &str, int mx) const
optimCheckLimit(const QString& str)
optimDoAutoScroll()
optimDrawContents(QPainter * p, int cx, int cy, int cw, int ch)
optimFind(const QString & str, bool, bool, bool, int *, int *)
optimHasBoldMetrics(int line)
optimHasSelection() const
optimInsert(const QString &str, int line, int index)
optimInsertTag(int line, int index, const QString & tag)
optimMouseMoveEvent(QMouseEvent * e)
optimMousePressEvent(QMouseEvent * e)
optimMouseReleaseEvent(QMouseEvent * e)
optimParseTags(QString * str, int lineNo = -1, int indexOffset = 0)
optimPreviousLeftTag(int line)
optimRemoveSelection()
optimSelectAll()
optimSelectedText() const
optimSetSelection(int startLine, int startIdx, int endLine, int endIdx)
optimSetText(const QString &str)
optimSetTextFormat(Q3TextDocument *, Q3TextCursor *, Q3TextFormat * f, int, int, Q3TextEditOptimPrivate::Tag * t)
optimText() const
option(ImageOption option) const
option(Option ) const
order() const
orderByClause() const
organizationDomain()
organizationName()
orientation() const
orientationChanged(Qt::Orientation o)
orientationChanged(Qt::Orientation orientation)
originCorner() const
outOfRange(int h, int m, int s) const
outOfRange(int y, int m, int d) const
outputFileName()const
outputFormat() const
outputFormatList()
outputFormats()
output_int(int, ulong, bool )
overflow()
overlayContext() const
overlayTransparentColor() const
overline() const
overlinePos() const
overrideCursor()
overrideWindowFlags(Qt::WindowFlags type)
overrideWindowState(Qt::WindowStates state)
overwriteMode() const
owner() const
owner(FileOwner) const
ownerDestroyed()
ownerDocument() const
ownerElement() const
ownerId() const
ownerId(FileOwner) const
ownsClipboard() const
ownsFindBuffer() const
ownsMode(Mode mode) const
ownsSelection() const
p1() const
p2() const
pPos(int i) const
pSize(int i) const
padChar() const
page(int ) const
pageCount() const
pageCount() const = 0
pageCountChanged(int newPages)
pageDown(bool mark=false)
pageOrder() const
pageRect() const
pageSetup(QWidget *parent = 0)
pageSize() const
pageStep() const
pageUp(bool mark=false)
paint(QPainter *)
paint(QPainter *p, const QColorGroup &cg, const QRect &cr, bool selected)
paint(QPainter *painter, const QRect &rect, QIcon::Mode mode, QIcon::State state)
paint(QPainter *painter, const QRect &rect, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off) const
paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget = 0)
paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget=0)
paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const = 0
paintBranches(QPainter * p, const QColorGroup & cg, int w, int y, int h)
paintCell(QPainter * p, int row, int col, const QRect & cr, bool selected, const QColorGroup &cg )
paintCell(QPainter *, const QColorGroup & cg, int column, int width, int alignment)
paintCell(QPainter *, int row, int col)
paintCell(QPainter *p, int row, int col, const QRect &cr, bool selected)
paintCell(QPainter *p, int row, int col, const QRect &cr, bool selected, const QColorGroup &cg)
paintCell(QPainter *painter, const QRect &rect, const QDate &date) const
paintDevice() const
paintDocument(bool drawAll, QPainter *p, int cx = -1, int cy = -1, int cw = -1, int ch = -1)
paintEmptyArea(QPainter *, const QRect &)
paintEmptyArea(QPainter *p, int cx, int cy, int cw, int ch)
paintEngine() const
paintEngine() const = 0
paintEvent(QPaintEvent * )
paintEvent(QPaintEvent *)
paintEvent(QPaintEvent *e)
paintEvent(QPaintEvent *ev)
paintEvent(QPaintEvent *event)
paintEvent(QPaintEvent *pe)
paintEvent(QPaintEvent*)
paintField(QPainter * p, const QSqlField* field, const QRect & cr, bool selected )
paintFocus(QPainter *, const QColorGroup & cg, const QRect & r)
paintFocus(QPainter *, const QColorGroup &cg, const QRect & r)
paintFocus(QPainter *p, const QColorGroup &cg)
paintFocus(QPainter *p, const QRect &r)
paintGL()
paintItem(QPainter *p, const QColorGroup &cg)
paintOverlayGL()
paintRect(int p, int s)
paintSection(QPainter *p, int index, const QRect& fr)
paintSection(QPainter *painter, const QRect &rect, int logicalIndex) const
paintSectionLabel(QPainter* p, int index, const QRect& fr)
painter() const
paintingActive() const
palette()
palette() const
palette(const QWidget *)
palette(const char *className)
paletteBackgroundColor() const
paletteBackgroundPixmap() const
paletteChange(const QPalette &) // compat
paletteForegroundColor() const
paper() const
paperRect() const
paperSource() const
paragraphAt(const QPoint &pos) const
paragraphBackgroundColor(int para) const
paragraphLength(int para) const
paragraphRect(int para) const
paragraphs() const
parameter() const
parameterNames() const
parameterNames(int index) const = 0
parameterTypes() const
parameterTypes(int index) const = 0
parameters() const
parent() const
parent(const QModelIndex &child) const
parent(const QModelIndex &child) const = 0
parentFrame() const
parentItem() const
parentNode() const
parentObject() const
parentWidget() const
parentWidget(bool sameWindow) const
parse(const QString &str)
parse(const QString& str )
parse(const QString& url )
parse(const QXmlInputSource& input)
parse(const QXmlInputSource* input)
parse(const QXmlInputSource* input, bool incremental)
parseContinue()
parseDir(const QString &buffer, QUrlInfo &info ) // ### Qt 4.0: delete this?(not public API)
parseFontName(const QString &name, QString &foundry, QString &family)
parseLine(const QString &line, int number)
parseLine(const QString& line, int number )
password() const
paste()
pasteSpecial(const QPoint&)
pasteSubType(const QByteArray &subtype)
pasteSubType(const QByteArray &subtype, QMimeSource *m)
path() const
path(bool correct = true ) const
pathFromIndex(const QModelIndex &index) const
pathSelected(int)
pattern() const
patternSyntax() const
peek(char *data, qint64 maxlen)
peek(qint64 maxlen)
peerAddress() const
peerName() const
peerPort() const
pen() const
penProperty(int propertyId) const
pendingDatagramSize() const
percent() const
percentageVisible() const
permission(QFile::Permissions permissions) const
permissions() const
permissions(const QString &filename)
persistentIndexList() const
piConnectState(int )
piError(int, const QString& )
piFinished(const QString& )
piFtpReply(int, const QString& )
pickSpecial(QMimeSource* ms, bool always_ask, const QPoint&)
picture() const
pictureFormat(QIODevice *)
pictureFormat(const QString &fileName)
picture_io_handler
pid() const
pixel(const QColor &color) const
pixel(const QPoint &pt) const
pixel(int screen = -1) const
pixel(int x, int y) const
pixelIndex(const QPoint &pt) const
pixelIndex(int x, int y) const
pixelMetric(PixelMetric m, const QStyleOption *opt = 0, const QWidget *widget = 0) const
pixelMetric(PixelMetric metric, const QStyleOption *option = 0, const QWidget *widget = 0) const
pixelMetric(PixelMetric metric, const QStyleOption *option = 0, const QWidget *widget = 0) const = 0
pixelMetric(PixelMetric pm, const QStyleOption *option = 0, const QWidget *widget = 0) const
pixelSize() const
pixmap() const
pixmap(Mode mode = Clipboard) const
pixmap(Size size, Mode mode, State state = Off) const
pixmap(Size size, bool enabled, State state = Off) const
pixmap(const QFileInfo &)
pixmap(const QSize &size, Mode mode = Normal, State state = Off) const
pixmap(const QSize &size, QIcon::Mode mode, QIcon::State state)
pixmap(int index ) const
pixmap(int index) const
pixmap(int row, int col) const
pixmap(int) const
pixmapFunction() const = 0
pixmapHotSpot() const
pixmapList() const = 0
pixmapRect(bool relative = true) const
pixmapSize(Size which)
pixmapSizeChanged(bool)
pixmapToFilePath(const QPixmap &pm) const
pixmapToFilePath(const QPixmap &pm) const = 0
pixmapToQrcPath(const QPixmap &pm) const
pixmapToQrcPath(const QPixmap &pm) const = 0
placeChanged(Q3DockWindow::Place p)
placeCursor(const QPoint &pos, Q3TextCursor *c = 0)
placeCursor(const QPoint &pos, Q3TextCursor *c, bool link)
plane() const
play()
play(QPainter *p)
play(const QString& filename)
pluginManager() const
pluginPath() const = 0
pluginPaths() const
point(int i) const
point(int i, int *x, int *y) const
pointAt(qreal t) const
pointSize() const
pointSizeF() const
pointSizes(const QString &family, const QString &style = QString())
pointer
points() const
polish(QApplication *)
polish(QApplication *app)
polish(QApplication*)
polish(QPalette &)
polish(QPalette &pal)
polish(QPalette&)
polish(QWidget *)
polish(QWidget *widget)
polish(QWidget*)
polishEvent(QEvent*)
polygon() const
pop()
popContext()
popDownListBox()
populateCursor()
popup()
popup() const
popup(const QPoint &pos, QAction *at=0)
popupContextMenu(Q3ListBoxItem *, const QPoint &)
popupContextMenu(Q3ListViewItem *, const QPoint &, int)
popupContextMenu(const QString &filename, bool withSort, PopupAction &action, const QPoint &p)
popupDelay() const
popupDetail(const QString& contents, const QPoint& pos)
popupMode() const
port() const
port(int defaultPort) const
pos()
pos() const
pos(int nth = 0)
posAt(qreal step) const
position() const
position() const = 0
positionFromValue(int val, int space) const
positionInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format)
possibleActions() const
post(const QString &path, QIODevice *data, QIODevice *to=0 )
post(const QString &path, const QByteArray &data, QIODevice *to=0)
post(const QString& path, QIODevice* data, QIODevice* to=0 )
post(const QString& path, const QByteArray& data, QIODevice* to=0 )
postEvent(QObject *receiver, QEvent *event)
postNav(bool primeUpd)
preNav()
precision() const
precision(int )
preeditAreaPosition() const
preeditAreaText() const
preferredEditAction() const
prefix() const
prefix(const QString&) const
prefixes() const
prefixes(const QString&) const
prepare(const QString &query)
prepare(const QString& query)
prepare(const QString& stmt)
prepareGeometryChange()
prepend()
prepend(Q3PtrCollection::Item ) // add item at start of list
prepend(char c)
prepend(const QByteArray &a)
prepend(const T &)
prepend(const T &t)
prepend(const char *s)
pressed()
pressed(Q3IconViewItem *)
pressed(Q3IconViewItem *, const QPoint &)
pressed(Q3ListBoxItem *)
pressed(Q3ListBoxItem *, const QPoint &)
pressed(Q3ListViewItem *)
pressed(Q3ListViewItem *, const QPoint &, int)
pressed(const QModelIndex &index)
pressed(int id)
pressed(int row, int col, int button, const QPoint &mousePos)
pressed(int section)
prev()
prev() // set prev item in list curr
prev() const
prevItem() const
prevRecordAvailable(bool available)
prevValue() const
previewMode() const
previewUrl(const Q3Url &url)
previous()
previous() const
previousBlockState() const
previousCursorPosition(int oldPos, CursorMode mode = SkipCharacters) const
previousNode(Node *node)
previousSibling() const
previousSiblingElement(const QString &tagName = QString()) const
primaryIndex(bool prime = true) const
primaryIndex(const QString &table) const
primaryIndex(const QString &tableName) const
primaryIndex(const QString& tablename) const
primaryKey() const
primaryScreen() const
primeDelete()
primeDelete(QSqlRecord* buf )
primeDelete(QSqlRecord* buf)
primeInsert()
primeInsert(QSqlRecord* buf )
primeInsert(QSqlRecord* buf)
primeInsert(int row, QSqlRecord &record)
primeUpdate()
primeUpdate(QSqlRecord* buf )
primeUpdate(QSqlRecord* buf)
print(QPrinter *printer) const
printEngine() const
printProgram() const
printRange() const
printSetup(QWidget *parent = 0)
printer()
printer() const
printerName() const
printerSelectionOption() const
printerState() const
printerState() const = 0
priority() const
procError(QProcess::ProcessError err)
processChannelMode() const
processEvents(ProcessEventsFlags flags = AllEvents)
processEvents(ProcessEventsFlags flags, int maximumTime)
processEvents(QEventLoop::ProcessEventsFlags flags = QEventLoop::AllEvents)
processEvents(QEventLoop::ProcessEventsFlags flags)
processEvents(QEventLoop::ProcessEventsFlags flags, int maxtime)
processExited()
processIdentifier()
processName(const QString&, bool, QString&, QString&) const
processNextOperation(Q3NetworkOperation *old )
processOperation(Q3NetworkOperation *op )
processSpans(int n, QPoint* point, int* width)
processingInstruction(const QString& target, const QString& data)
progress() const
progressString() const
properties() const
property(PrintEnginePropertyKey key) const = 0
property(QWidget * widget)
property(const QString& name, bool *ok = 0) const
property(const QString& name, bool *ok = 0) const = 0
property(const char *name) const
property(int index) const
property(int index) const = 0
property(int propertyId) const
propertyChanged(const QString &name, const QVariant &value)
propertyCount() const
propertyEditor() const
propertyGroup(int index) const = 0
propertyMap(const QList<DomProperty*> &properties)
propertyName(int index) const = 0
propertyOffset() const
proposedAction() const
protocol() const
protocolDetail() const
provides(const char*) const
proxy() const
publicId() const
push(QUndoCommand *cmd)
pushContext()
push_back(char c)
push_back(const QByteArray &a)
push_back(const char *c)
push_front(char c)
push_front(const QByteArray &a)
push_front(const char *c)
put(QIODevice *dev, const QString &file )
put(QIODevice *dev, const QString &file, TransferType type = Binary)
put(const QByteArray &data, const QString &file )
put(const QByteArray &data, const QString &file, TransferType type = Binary)
put(const QByteArray &data, const QString &location = QString() )
putPoints(int index, int nPoints, const QPolygon & from, int fromIndex=0)
putPoints(int index, int nPoints, const int *points)
putPoints(int index, int nPoints, int firstx, int firsty, ...)
putch(int )
q3InitNetworkProtocols()
qAddPostRoutine(QtCleanUpFunction)
qApp
qAppName()
qAppName() // get application name
qBinaryFindHelper(RandomAccessIterator begin, RandomAccessIterator end, const T &value, LessThan lessThan)
qChecksum(const char *s, uint len)
qCompare(T1 const &, T2 const &, const char *, const char *, const char *, int)
qCompare<double>(double const &t1, double const &t2, const char *actual, const char *expected, const char *file, int line)
qCompare<float>(float const &t1, float const &t2, const char *actual, const char *expected, const char *file, int line)
qCompress(const uchar* data, int nbytes, int compressionLevel = -1)
qCritical()
qCritical(const char *, ...) /* print critical message */
qDBusReplyFill(const QDBusMessage &reply, QDBusError &error, QVariant &data)
qData(const char *tagName, int typeId)
qDebug
qDebug()
qDebug(const char *, ...) /* print debug message */
qDrawArrow(QPainter *p, Qt::ArrowType type, Qt::GUIStyle style, bool down, int x, int y, int w, int h, const QPalette &pal, bool enabled)
qDrawItem(QPainter *p, Qt::GUIStyle gs, int x, int y, int w, int h, int flags, const QPalette &pal, bool enabled, const QPixmap *pixmap, const QString& text, int len=-1, const QColor* penColor = 0)
qDrawPlainRect(QPainter *p, const QRect &r, const QColor &, int lineWidth = 1, const QBrush *fill = 0)
qDrawPlainRect(QPainter *p, int x, int y, int w, int h, const QColor &, int lineWidth = 1, const QBrush *fill = 0)
qDrawShadeLine(QPainter *p, const QPoint &p1, const QPoint &p2, const QPalette &pal, bool sunken = true, int lineWidth = 1, int midLineWidth = 0)
qDrawShadeLine(QPainter *p, int x1, int y1, int x2, int y2, const QPalette &pal, bool sunken = true, int lineWidth = 1, int midLineWidth = 0)
qDrawShadePanel(QPainter *p, const QRect &r, const QPalette &pal, bool sunken = false, int lineWidth = 1, const QBrush *fill = 0)
qDrawShadePanel(QPainter *p, int x, int y, int w, int h, const QPalette &pal, bool sunken = false, int lineWidth = 1, const QBrush *fill = 0)
qDrawShadeRect(QPainter *p, const QRect &r, const QPalette &pal, bool sunken = false, int lineWidth = 1, int midLineWidth = 0, const QBrush *fill = 0)
qDrawShadeRect(QPainter *p, int x, int y, int w, int h, const QPalette &pal, bool sunken = false, int lineWidth = 1, int midLineWidth = 0, const QBrush *fill = 0)
qDrawWinButton(QPainter *p, const QRect &r, const QPalette &pal, bool sunken = false, const QBrush *fill = 0)
qDrawWinButton(QPainter *p, int x, int y, int w, int h, const QPalette &pal, bool sunken = false, const QBrush *fill = 0)
qDrawWinPanel(QPainter *p, const QRect &r, const QPalette &pal, bool sunken = false, const QBrush *fill = 0)
qDrawWinPanel(QPainter *p, int x, int y, int w, int h, const QPalette &pal, bool sunken = false, const QBrush *fill = 0)
qElementData(const char *elementName, int metaTypeId)
qErrnoWarning(const char *msg, ...)
qErrnoWarning(int code, const char *msg, ...)
qExec(QObject *testObject, int argc = 0, char **argv = 0)
qExpectFail(const char *dataIndex, const char *comment, TestFailMode mode, const char *file, int line)
qFail(const char *statementStr, const char *file, int line)
qFatal(const char *, ...) /* print fatal message and exit */
qFindChild(const QObject *, const QString & = QString())
qFindChild(const QObject *o, const QString &name = QString(), T = 0)
qFindChildren(const QObject *, const QRegExp &)
qFindChildren(const QObject *, const QString & = QString())
qFindChildren(const QObject *o, const QRegExp &re, T = 0)
qFindChildren(const QObject *o, const QString &name = QString(), T = 0)
qFree(void *ptr)
qFromBigEndian(const uchar *src)
qFromLittleEndian(const uchar *src)
qGlobalData(const char *tagName, int typeId)
qGreater
qHash(const QByteArray &key)
qHash(const QHostAddress &key)
qHash(const QString &key)
qImageFromMimeSource(const QString &abs_name)
qInstallMsgHandler(QtMsgHandler)
qInstallPath()
qInstallPathBins()
qInstallPathData()
qInstallPathDocs()
qInstallPathHeaders()
qInstallPathLibs()
qInstallPathPlugins()
qInstallPathSysconf()
qInstallPathTranslations()
qInternalCallback
qItemRect(QPainter *p, Qt::GUIStyle gs, int x, int y, int w, int h, int flags, bool enabled, const QPixmap *pixmap, const QString& text, int len=-1)
qLess
qLowerBoundHelper(RandomAccessIterator begin, RandomAccessIterator end, const T &value, LessThan lessThan)
qMalloc(size_t size)
qMemCopy
qMemCopy(void *dest, const void *src, size_t n)
qMemSet
qMemSet(void *dest, int c, size_t n)
qName(int index) const
qPixmapFromMimeSource(const QString &abs_name)
qPrintable
qRealloc(void *ptr, size_t size)
qRegisterGuiVariant()
qRemovePostRoutine(QtCleanUpFunction)
qSharedBuild()
qSkip(const char *message, SkipMode mode, const char *file, int line)
qSleep(int ms)
qSortHelper(RandomAccessIterator begin, RandomAccessIterator end, const T &dummy)
qSortHelper(RandomAccessIterator start, RandomAccessIterator end, const T &t, LessThan lessThan)
qStableSortHelper(RandomAccessIterator start, RandomAccessIterator end, const T &t, LessThan lessThan)
qStableSortHelper(RandomAccessIterator, RandomAccessIterator, const T &)
qStringComparisonHelper(const QString &s1, const char *s2)
qSystemWarning(const char *msg, int code = -1)
qUncompress(const uchar* data, int nbytes)
qUpperBoundHelper(RandomAccessIterator begin, RandomAccessIterator end, const T &value, LessThan lessThan)
qVariantCanConvert(const QVariant &)
qVariantFromValue(const T &)
qVariantSetValue(QVariant &, const T &)
qVariantValue(const QVariant &)
qVerify(bool statement, const char *statementStr, const char *description, const char *file, int line)
qVersion()
qWarn(const char *message)
qWarning
qWarning()
qWarning(const char *, ...) /* print warning message */
q_atomic_decrement(volatile int *ptr)
q_atomic_increment(volatile int *ptr)
q_atomic_lock(int *lock)
q_atomic_set_int(volatile int *ptr, int newval)
q_atomic_set_ptr(volatile void *ptr, void *newval)
q_atomic_test_and_set_acquire_int(volatile int *ptr, int expected, int newval)
q_atomic_test_and_set_int(volatile int *ptr, int expected, int newval)
q_atomic_test_and_set_ptr(volatile void *ptr, void *expected, void *newval)
q_atomic_test_and_set_release_int(volatile int *ptr, int expected, int newval)
q_atomic_unlock(int *lock)
qbswap(T source)
qgetenv(const char *varName)
qglClearColor(const QColor& c) const
qglColor(const QColor& c) const
qint16
qint32
qint64
qint8
qlonglong
qptrdiff
qrand()
qreal
qsnprintf(char *str, size_t n, const char *fmt, ...)
qsrand(uint seed)
qstrcmp(const char *str1, const char *str2)
qstrcpy(char *dst, const char *src)
qstrdup(const char *)
qstricmp(const char *, const char *)
qstrncpy(char *dst, const char *src, uint len)
qstrnicmp(const char *, const char *, uint len)
qtHandler()
qt_assert(const char *assertion, const char *file, int line)
qt_assert_x(const char *where, const char *what, const char *file, int line)
qt_check_pointer(const char *, int)
qt_cleanup()
qt_closestItemFirst(const QGraphicsItem *, const QGraphicsItem *)
qt_closestLeaf(const QGraphicsItem *, const QGraphicsItem *)
qt_createGLSLProgram(QGLContext *ctx, GLuint &program, const char *shader_src, GLuint &shader)
qt_error_string(int errorCode = -1)
qt_format_text(const QFont &font, const QRectF &_r, int tf, const QString& str, QRectF *brect, int tabstops, int* tabarray, int tabarraylen, QPainter *painter)
qt_getClipRects(const QRegion &r, int &num)
qt_image_colortable(const QImage &image)
qt_image_id(const QImage &image)
qt_init(QApplicationPrivate *priv, int, Display *display, Qt::HANDLE visual, Qt::HANDLE colormap)
qt_mac_activate_action(MenuRef, uint, QAction::ActionEvent, bool)
qt_mac_cg_context(const QPaintDevice *)
qt_mac_convert_mac_region(RgnHandle rgn)
qt_mac_create_iconref(const QPixmap &)
qt_mac_create_imagemask(const QPixmap &, const QRectF &rect)
qt_mac_hiview_for(const QWidget *w)
qt_mac_is_metal(const QWidget *w)
qt_mac_menu_event(EventHandlerCallRef, EventRef, void *)
qt_mac_posInWindow(const QWidget *w)
qt_mac_set_cursor(const QCursor *c, const QPoint &p)
qt_mac_trayicon_activate_action(QMenu *, QAction *action)
qt_mac_unmultiplyPixmapAlpha(const QPixmap &)
qt_mac_watchingAboutToShow(QMenu *)
qt_mac_window_for(const QWidget *w)
qt_message_output(QtMsgType, const char *buf)
qt_metacall(QMetaObject::Call, int, void **)
qt_metacast(const char *)
qt_pixmap_id(const QPixmap &pixmap)
qt_qFindChild_helper(const QObject *parent, const QString &name, const QMetaObject &mo)
qt_qFindChildren_helper(const QObject *parent, const QString &name, const QRegExp *re, const QMetaObject &mo, QList<void *> *list)
qt_qscrollbarStyleOption(QScrollBar *scrollBar)
qt_qsliderStyleOption(QSlider *slider)
qt_qwidget_data(QWidget *widget)
qt_resolve_GLSL_functions(QGLContext *ctx)
qt_resolve_frag_program_extensions(QGLContext *)
qt_resolve_framebufferobject_extensions(QGLContext *)
qt_sendSpontaneousEvent(QObject*, QEvent*)
qt_setCoords(QRect *r, int xp1, int yp1, int xp2, int yp2)
qt_snprintf(char *str, int size, const char *format, ...)
qt_syncBackingStore(QRegion, QWidget *)
qt_syncBackingStore(QRegion, QWidget *, bool)
qt_syncBackingStore(QWidget *)
qt_testCollision(const Q3CanvasSprite* s1, const Q3CanvasSprite* s2)
qt_unview(Q3Canvas* c)
qt_winMB2QString(const char* mb, int len=-1)
qt_winQString2MB(const QChar *ch, int len)
qt_winQString2MB(const QString& s, int len=-1)
qtsystray_sendActivated(QSystemTrayIcon *, int)
quadTo(const QPointF &ctrlPt, const QPointF &endPt)
quadTo(qreal ctrlPtx, qreal ctrlPty, qreal endPtx, qreal endPty)
quality() const
query() const
query(QueryType type, QVariant in) const
queryAccessibleInterface(QObject *)
queryChange()
queryItemValue(const QString &key) const
queryItems() const
queryList(const char *inheritsClass = 0, const char *objName = 0, bool regexpMatch = true, bool recursiveSearch = true) const
queryPairDelimiter() const
queryValueDelimiter() const
question(QWidget *parent, const QString &title, const QString &text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton)
question(QWidget *parent, const QString &title, const QString& text, const QString& button0Text, const QString& button1Text = QString(), const QString& button2Text = QString(), int defaultButtonNumber = 0, int escapeButtonNumber = -1)
question(QWidget *parent, const QString &title, const QString& text, int button0, int button1 = 0, int button2 = 0)
quint16
quint32
quint64
quint8
quintptr
quit()
quitOnLastWindowClosed()
qulonglong
qvariant_cast_helper(const QVariant &, QVariant::Type, void *)
qvfv(const T &t)
qvsnprintf(char *str, size_t n, const char *fmt, va_list ap)
qwsBits() const
qwsBytesPerLine() const
qwsDecoration()
qwsDisplay()
qwsEvent(QWSEvent *)
qwsEventFilter(QWSEvent *)
qwsProcessEvent(QWSEvent*)
qwsSetCustomColors(QRgb *colortable, int start, int numColors)
qwsSetDecoration(QDecoration *)
qwsSetDecoration(const QString &decoration)
radius() const
raise()
raiseWidget(QWidget *)
raiseWidget(int)
rangeChange()
rangeChanged(int min, int max)
rangeGeometry(int topRow, int leftCol, int bottomRow, int rightCol, bool &optimize)
raw(int num ) const
rawArg(int num ) const
rawCommand(const QString &command )
rawCommand(const QString &command)
rawCommandReply(int, const QString& )
rawCommandReply(int, const QString&)
rawMode() const
rawName() const
reIndex()
read()
read(QDataStream & )
read(QDataStream & ) // read list from stream
read(QDataStream & ) // read vector from stream
read(QDataStream &, Item & )
read(QDataStream &, Q3PtrCollection::Item & )
read(QDataStream &, Q3PtrCollection::Item &)
read(QDataStream &in)
read(QDataStream &s, Q3PtrCollection::Item &d )
read(QDataStream&, Q3PtrCollection::Item& )
read(QImage *image)
read(char *data, qint64 maxlen)
read(const QObject *obj) const
read(qint64 maxlen)
readAll()
readAllStandardError()
readAllStandardOutput()
readBlock(char *data, Q_ULONG maxlen )
readBufferSize() const
readBytes(char *&, uint &len)
readChannel() const
readChannelMode() const
readCollisionMasks(const QString& filenamepattern)
readData(char *data, qint64 maxlen)
readDatagram(char *data, qint64 maxlen, QHostAddress *host = 0, quint16 *port = 0)
readField(QWidget * widget)
readFields()
readFormats(Q3TextCursor &c1, Q3TextCursor &c2, Q3TextString &text, bool fillStyles = false)
readLine()
readLine(char *data, qint64 maxlen)
readLine(qint64 maxlen = 0)
readLineData(char *data, qint64 maxlen)
readLineStderr()
readLineStdout()
readLink() const
readLink(const QString &fileName)
readPixmaps(const QString& datafilenamepattern, int framecount, bool maskonly)
readPixmaps(const QString& datafilenamepattern, int framecount=0)
readPort()
readRawBytes(char *, uint len )
readRawData(char *, int len)
readStdError()
readStddev(Qt::HANDLE dev, char *buf, uint bytes )
readStderr()
readStdout()
readyRead()
readyRead(const Q3HttpResponseHeader& resp )
readyRead(const QHttpResponseHeader &resp)
readyReadStandardError()
readyReadStandardOutput()
readyReadStderr()
readyReadStdout()
realNumberNotation() const
realNumberPrecision() const
realloc()
realloc(int alloc)
realloc(int size, int alloc)
reason()
reason() const
reasonPhrase() const
rebuildContainers()
recalcPoly()
receiveBufferSize() const
receivers(const char* signal) const
reconfigureItems()
record()
record() const
record(const QSqlQuery& query) const
record(const QString &tableName) const
record(const QString& tablename) const
record(int row) const
recordInfo(const QSqlQuery& query) const
rect() const
rect(const QStyleOptionViewItem &option, const QModelIndex &index, int role) const
rect(int child) const
rect(int child) const = 0
rectForIndex(const QModelIndex &index) const
rects() const
red() const
redBufferSize() const
redF() const
redirected(const QPaintDevice *device, QPoint *offset = 0)
redo()
redo(QTextCursor *cursor)
redoAvailable(bool b)
redoAvailable(bool yes)
redoAvailable(bool)
redoText() const
redoTextChanged(const QString &redoText)
reexpand()
ref() const
ref(uint i)
reference
reformat()
refresh()
refresh() const
refresh(QSqlRecord* buf)
refresh(Refresh mode )
refresh(const QModelIndex &parent = QModelIndex())
refreshSlot()
registerCallback(Callback, qInternalCallback)
registerEditor(QVariant::Type type, QItemEditorCreatorBase *creator)
registerExtensions(QAbstractExtensionFactory *factory, const QString &iid = QString())
registerExtensions(QAbstractExtensionFactory *factory, const QString &iid)
registerFormat(const QString &extension, ReadFunc readFunc, WriteFunc writeFunc, Qt::CaseSensitivity caseSensitivity = Qt::CaseSensitive)
registerHandler(int objectType, QObject *component)
registerMarshallOperators(int typeId, MarshallFunction, DemarshallFunction)
registerMimeType(const QString &mime)
registerNetworkProtocol(const QString &protocol, Q3NetworkProtocolFactoryBase *protocolFactory )
registerObject(const QString &path, QObject *object, RegisterOptions options = ExportAdaptors)
registerResource(const QString &rccFilename, const QString &resourceRoot=QString())
registerService(const QString &serviceName)
registerService(const QString &serviceName, ServiceQueueOptions qoption = DontQueueService, ServiceReplacementOptions roption = DontAllowReplacement)
registerSocketNotifier(QSocketNotifier *notifier)
registerSqlDriver(const QString &name, QSqlDriverCreatorBase *creator)
registerStreamOperators(const char *typeName, SaveOperator saveOp, LoadOperator loadOp)
registerTimer(int interval, QObject *object)
registerTimer(int timerId, int interval, QObject *object)
registerTool(QDesignerFormWindowToolInterface *tool)
registerType(const char *typeName, Destructor destructor, Constructor constructor)
registerUserData()
registeredServiceNames() const
registeredTimers(QObject *object) const = 0
rehash(int hint)
rehighlight()
reject()
rejected()
relation(int column) const
relationModel(int column) const
relationTo(int child, const QAccessibleInterface *other, int otherChild) const
relationTo(int child, const QAccessibleInterface *other, int otherChild) const = 0
relationTo(int, const QAccessibleInterface *, int) const
relativeFilePath(const QString &fileName) const
release()
release(int n = 1)
releaseDC(HDC hdc) const
releaseDC(HDC) const
releaseFromDynamicTexture()
releaseKeyboard()
releaseMouse()
releaseShortcut(int id)
releaseWidget(QWidget *widget)
released()
released(int id)
released(int section)
relinkNode(Q3LNode * ) // relink as first item
reload()
remove()
remove(Q3PtrCollection::Item = 0 ) // remove item(0=current)
remove(QAbstractButton *)
remove(QChar c, Qt::CaseSensitivity cs = Qt::CaseSensitive)
remove(QObject *object)
remove(QWidget * widget)
remove(QWidget *)
remove(const Key &key)
remove(const QModelIndex &index)
remove(const QString & classname)
remove(const QString &file )
remove(const QString &file)
remove(const QString &fileName)
remove(const QString &filename )
remove(const QString &key)
remove(const QString &s, Qt::CaseSensitivity cs = Qt::CaseSensitive)
remove(const QString& field)
remove(const QTextBlock &)
remove(int i)
remove(int i, int len)
remove(int i, int n)
remove(int index)
remove(int index, int len)
remove(int pos)
remove(uint index ) // remove item
removeAction(QAction *a)
removeAction(QAction *action)
removeAll(const T &t)
removeAllApplicationFonts()
removeAllQueryItems(const QString &key)
removeAllValues(const QString &key)
removeAnimation(Q3CanvasItem*)
removeApplicationFont(int id)
removeAt(int i)
removeAt(uint ) // remove item at i'th position
removeAttribute(const QString& name)
removeAttributeNS(const QString& nsURI, const QString& localName)
removeAttributeNode(const QDomAttr& oldAttr)
removeBrush(const QString &name)
removeButton(QAbstractButton *)
removeButton(QAbstractButton *button)
removeCategory(int cat_idx)
removeChild(QObject* child)
removeChild(QWidget* child)
removeChild(const QDomNode& oldChild)
removeColumn(int col )
removeColumn(int col)
removeColumn(int column)
removeColumn(int column, const QModelIndex &parent = QModelIndex())
removeColumn(int index)
removeColumns(const Q3MemArray<int> &cols)
removeColumns(int column, int count)
removeColumns(int column, int count, const QModelIndex &parent = QModelIndex())
removeColumns(int pos, int num)
removeDatabase(const QString& connectionName)
removeDockWidget(QDockWidget *dockwidget)
removeDockWindow(Q3DockWindow *)
removeDockWindow(Q3DockWindow *w, bool makeFloating, bool swap, bool fixNewLines = true)
removeEntry(Q3NetworkOperation *)
removeEventFilter(QObject *)
removeFactory(InterfaceFactory)
removeFactory(Q3MimeSourceFactory *f)
removeFirst() // remove first item
removeFirstNumber(int sec)
removeFormWindow(QDesignerFormWindowInterface *formWindow)
removeFrom(QWidget*)
removeFromChunks()
removeFromDock(bool fixNewLines = true)
removeFromGroup(QGraphicsItem *item)
removeFromIndex()
removeGuard(QObject **ptr)
removeItem(Q3CanvasItem*)
removeItem(QGraphicsItem *item)
removeItem(QLayoutItem *)
removeItem(int i)
removeItem(int id )
removeItem(int index )
removeItem(int index)
removeItemFromChunk(Q3CanvasItem*, int i, int j)
removeItemFromChunkContaining(Q3CanvasItem*, int x, int y)
removeLabel(int section)
removeLast() // remove last item
removeLastNumber(int sec)
removeLibraryPath(const QString &)
removeLine(int line)
removeMapping(QWidget *widget)
removeMappings(QObject *sender)
removeMe()
removeNamedItem(const QString& name)
removeNamedItemNS(const QString& nsURI, const QString& localName)
removeNode(Q3LNode * ) // remove node
removePage(QWidget * )
removePage(QWidget *)
removeParagraph(int para)
removePath(const QString &file)
removePaths(const QStringList &files)
removePostedEvents(QObject *receiver)
removeProgressDia()
removeQueryItem(const QString &key)
removeRef(Q3PtrCollection::Item = 0 ) // remove item(0=current)
removeRenameBox()
removeResourceFile(const QString &path)
removeRow(int row)
removeRow(int row, const QModelIndex &parent = QModelIndex())
removeRows(const Q3MemArray<int> &rows)
removeRows(int pos, int num)
removeRows(int row, int count)
removeRows(int row, int count, const QModelIndex &parent = QModelIndex())
removeSceneEventFilter(QGraphicsItem *filterItem)
removeSelectedText()
removeSelectedText(int selNum = 0)
removeSelection(const Q3TableSelection &s)
removeSelection(int num)
removeSelection(int selNum = 0)
removeStack(QUndoStack *stack)
removeSubstitution(const QString &)
removeTab(int index)
removeToolBar(Q3DockWindow *)
removeToolBar(QToolBar *toolbar)
removeTranslator(QTranslator * messageFile)
removeValue(const QString &key)
removeValue(const QString& key )
removeView(Q3CanvasView*)
removeWidget(QWidget *)
removeWidget(QWidget *w)
removeWidget(QWidget *widget)
removeWidget(int cat_idx, int wgt_idx)
remove_ascii(const char *key, Q3PtrCollection::Item item=0 )
remove_int(long key, Q3PtrCollection::Item item=0 )
remove_other(const char *key)
remove_ptr(void *key, Q3PtrCollection::Item item=0 )
remove_string(const QString &key)
remove_string(const QString &key, Q3PtrCollection::Item item=0 )
removed(Q3NetworkOperation *res )
rename()
rename(const QString &newName)
rename(const QString &oldName, const QString &newName)
rename(const QString &oldname, const QString &newname )
rename(const QString &oldname, const QString &newname)
renameEnabled() const
renameEnabled(int col) const
renameItem()
render(QPainter *p)
render(QPainter *p, const QRectF &bounds)
render(QPainter *p, const QString &elementId, const QRectF &bounds=QRectF())
render(QPainter *painter, const QRectF &target = QRectF(), const QRect &source = QRect(), Qt::AspectRatioMode aspectRatioMode = Qt::KeepAspectRatio)
render(QPainter *painter, const QRectF &target = QRectF(), const QRectF &source = QRectF(), Qt::AspectRatioMode aspectRatioMode = Qt::KeepAspectRatio)
renderFlags() const
renderHints() const
renderPixmap(int w = 0, int h = 0, bool useContext = false)
renderText(double x, double y, double z, const QString & str, const QFont & fnt = QFont(), int listBase = 2000)
renderText(int x, int y, const QString & str, const QFont & fnt = QFont(), int listBase = 2000)
renderer() const
repaint()
repaint() const
repaint(const QRect &)
repaint(const QRegion &)
repaint(int x, int y, int w, int h)
repaintCell(int row, int col )
repaintCell(int row, int col)
repaintCell(int row, int column, bool erase=true)
repaintChanged()
repaintContents(bool erase=true )
repaintContents(const QRect& r, bool erase=true )
repaintContents(int x, int y, int w, int h, bool erase=true )
repaintItem(Q3IconViewItem *item)
repaintItem(const Q3ListViewItem *) const
repaintNeeded()
repaintSelectedItems()
repaintSelection()
repaintSelections()
repaintSelections(Q3TableSelection *oldSelection, Q3TableSelection *newSelection, bool updateVertical = true, bool updateHorizontal = true)
repeatAction() const
replace(QChar before, QChar after, Qt::CaseSensitivity cs = Qt::CaseSensitive)
replace(QChar c, const QString &after, Qt::CaseSensitivity cs = Qt::CaseSensitive)
replace(char before, char after)
replace(char before, const QByteArray &after)
replace(char before, const char *after)
replace(char c, const QString &after)
replace(const Key &key, const T &value)
replace(const QByteArray &before, const QByteArray &after)
replace(const QByteArray &before, const char *after)
replace(const QRegExp &rx, const QString &after)
replace(const QString &before, const QByteArray &after)
replace(const QString &before, const QString &after, Qt::CaseSensitivity cs = Qt::CaseSensitive)
replace(const QString &before, const char *after)
replace(const char *before, const QByteArray &after)
replace(const char *before, const char *after)
replace(int i, const T &t)
replace(int i, int len, QChar after)
replace(int i, int len, const QChar *s, int slen)
replace(int i, int len, const QString &after)
replace(int index, int len, const QByteArray &s)
replace(int index, int len, const char *s)
replace(int pos, const QSqlField& field)
replaceAt(uint, Q3PtrCollection::Item ) // replace item at position i with item
replaceChild(const QDomNode& newChild, const QDomNode& oldChild)
replaceData(unsigned long offset, unsigned long count, const QString& arg)
replaceInStrings(const QRegExp &rx, const QString &after)
replaceInStrings(const QString &before, const QString &after, Qt::CaseSensitivity cs = Qt::CaseSensitive)
request(const Q3HttpRequestHeader &header, QIODevice *device=0, QIODevice *to=0 )
request(const Q3HttpRequestHeader &header, const QByteArray &data, QIODevice *to=0 )
request(const QHttpRequestHeader &header, QIODevice *device=0, QIODevice *to=0)
request(const QHttpRequestHeader &header, const QByteArray &data, QIODevice *to=0)
requestFinished(int, bool )
requestFinished(int, bool)
requestPhase2()
requestStarted(int )
requestStarted(int)
requestWidget(QWidget *parent)
requestedFormat() const
requiredStatus() const
rereadDir()
reserve(int size)
reset()
reset(Q3TextStream &s ) // set default flags
reset(QObject *obj) const
reset(QTextStream &s)
reset(const QString &query)
reset(const QString& query)
reset(const QString& sqlquery)
reset(int index)
resetBindCount() // HACK
resetCachedContent()
resetFormat()
resetInputContext()
resetMatrix()
resetRawData(const char *d, uint len)
resetStatus()
resetWidgetProperty(QWidget *widget, const QString &name)
resize(const QSize &)
resize(const QSize& )
resize(const QString &filename, qint64 sz)
resize(int rows, int cols)
resize(int size)
resize(int w, int h )
resize(int w, int h)
resize(int width, int height)
resize(qint64 sz)
resize(uint )
resize(uint newsize ) // resize vector
resize(uint newsize)
resize(uint newsize, Optimization optim)
resizeAnchor() const
resizeArrays(int size)
resizeColumnToContents(int column)
resizeColumnsToContents()
resizeContents(int w, int h )
resizeContents(int width, int height)
resizeData(int len )
resizeData(int len)
resizeEvent(QResizeEvent * )
resizeEvent(QResizeEvent * event)
resizeEvent(QResizeEvent *)
resizeEvent(QResizeEvent *e)
resizeEvent(QResizeEvent *event)
resizeEvent(QResizeEvent *re)
resizeEvent(QResizeEvent* e)
resizeEvent(QResizeEvent* ev)
resizeEvent(QResizeEvent*)
resizeGL(int w, int h)
resizeInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format)
resizeMode() const
resizeMode(int logicalIndex) const
resizeOverlayGL(int w, int h)
resizePolicy() const
resizeRowToContents(int row)
resizeRowsToContents()
resizeSection(int logicalIndex, int size)
resizeSection(int section, int s)
resizeSections()
resizeSections(QHeaderView::ResizeMode mode)
resize_helper(const QSize &s)
resized()
resized(const QSize &size)
resized(int)
resolution() const
resolve(const QFont &) const
resolve(const QPalette &) const
resolve(const QString &fileName, const char *symbol)
resolve(const QString &fileName, int verNum, const char *symbol)
resolve(const char *symbol)
resolveEntity(const QString& publicId, const QString& systemId, QXmlInputSource*& ret)
resolveLinkFile(const QString& linkfile)
resolveQrcPath(const QString &filePath, const QString &qrcPath, const QString &workingDirectory = QString()) const = 0
resolveSymlinks() const
resolved(const QUrl &relative) const
resortDir()
resource(int type, const QUrl &name) const
resourceFiles() const = 0
resourceFilesChanged()
resourceLocation() const
responseHeaderReceived(const Q3HttpResponseHeader& resp )
responseHeaderReceived(const QHttpResponseHeader &resp)
restart()
restartCommand() const
restartHint() const
restore()
restoreContents(Q3PtrVector<Q3TableItem> &tmp, Q3PtrVector<TableWidget> &tmp2)
restoreGeometry(const QByteArray &geometry)
restoreOverrideCursor()
restoreRedirected(const QPaintDevice *device)
restoreState(Q3CheckListItem *key, int depth = 0)
restoreState(const QByteArray &state)
restoreState(const QByteArray &state, int version = 0)
result() const
resultsReady()
retransmit()
retrieveData(const QString &mimetype, QVariant::Type preferredType) const
retune(int chunksize, int maxclusters=100)
returnPressed()
returnPressed(Q3IconViewItem *item)
returnPressed(Q3ListBoxItem *)
returnPressed(Q3ListViewItem *)
reverse() const
revert()
revertAll()
revertRow(int row)
rgb() const
rgbSwapped() const
rgba() const
rheight()
right() const
right(QTextStream &s)
right(int len) const
rightBearing(QChar) const
rightButtonClicked(Q3IconViewItem* item, const QPoint& pos)
rightButtonClicked(Q3ListBoxItem *, const QPoint &)
rightButtonClicked(Q3ListViewItem *, const QPoint&, int)
rightButtonPressed(Q3IconViewItem* item, const QPoint& pos)
rightButtonPressed(Q3ListBoxItem *, const QPoint &)
rightButtonPressed(Q3ListViewItem *, const QPoint&, int)
rightDock() const
rightEdge() const
rightEdge(int nx) const
rightJustification() const
rightJustified(int width, char fill = ' ', bool truncate = false) const
rightJustify(uint width, char fill=' ',bool trunc=false)const
rightMargin() const
rmdir(const QModelIndex &index)
rmdir(const QString &dir )
rmdir(const QString &dir)
rmdir(const QString &dirName) const
rmdir(const QString &dirName, bool recurseParentDirectories) const
rmpath(const QString &dirPath) const
role(int child) const
role(int child) const = 0
rollback()
rollbackTransaction()
rootFrame() const
rootIndex() const
rootIsDecorated() const
rootModelIndex() const
rootPath()
rotate(qreal a)
rotate(qreal angle)
rotationAt(qreal step) const
row() const
row(const QListWidgetItem *item) const
row(const QTableWidgetItem *item) const
rowAt(int y) const
rowAt(int) const
rowBegin(Q3IconViewItem *item) const
rowCount() const
rowCount(const QModelIndex &parent = QModelIndex()) const
rowCount(const QModelIndex &parent = QModelIndex()) const = 0
rowCount(const QModelIndex &parent) const
rowCountChanged(int oldCount, int newCount)
rowEnd(const QTextCursor &c) const
rowHeight(int row) const
rowHeightChanged(int row)
rowIndexChanged(int section, int fromIndex, int toIndex)
rowIntersectsSelection(int row, const QModelIndex &parent) const
rowMinimumHeight(int row) const
rowMode() const
rowMoved(int row, int oldIndex, int newIndex)
rowMovingEnabled() const
rowPos(int row) const
rowResized(int row, int oldHeight, int newHeight)
rowSpan() const
rowSpan(int row, int column) const
rowStart(const QTextCursor &c) const
rowStretch(int row) const
rowViewportPosition(int row) const
rows() const
rowsAboutToBeInserted(const QModelIndex &parent, int first, int last)
rowsAboutToBeRemoved(const QModelIndex &parent, int first, int last)
rowsAboutToBeRemoved(const QModelIndex &parent, int start, int end)
rowsInserted(const QModelIndex &parent, int first, int last)
rowsInserted(const QModelIndex &parent, int start, int end)
rowsRemoved(const QModelIndex &parent, int first, int last)
rtti() const
run()
rwidth()
rx()
ry()
sRect(int index)
sampleBuffers() const
samples() const
saturation() const
saturationF() const
save()
save(QDataStream &ds) const
save(QDataStream &stream, int type, const void *data)
save(QIODevice *dev, QWidget *widget)
save(QIODevice *dev, const char *format = 0)
save(QIODevice *device, const char* format=0, int quality=-1) const
save(QIODevice* device, const char* format = 0, int quality = -1) const
save(QTextStream&, int) const
save(const QString &fileName, const char *format = 0)
save(const QString &fileName, const char* format=0, int quality=-1) const
save(const QString& fileName, const char* format = 0, int quality = -1) const
saveBrush(const QBrush &brush)
saveColorGroup(const QPalette &palette)
saveComboBoxExtraInfo(QComboBox *widget, DomWidget *ui_widget, DomWidget *ui_parentWidget)
saveConnections()
saveContents(Q3PtrVector<Q3TableItem> &tmp, Q3PtrVector<TableWidget> &tmp2)
saveCustomWidgets()
saveDom(DomUI *ui, QWidget *widget)
saveExtraInfo(QWidget *widget, DomWidget *ui_widget, DomWidget *ui_parentWidget)
saveGeometry() const
saveListWidgetExtraInfo(QListWidget *widget, DomWidget *ui_widget, DomWidget *ui_parentWidget)
savePicture(const QString &format, const QString &filename, const QPicture &)
savePicture(const QString &format, const QString &filename, const QPicture &pic)
savePrepare(const QString& sqlquery)
saveResources()
saveState() const
saveState(QSessionManager& sm)
saveState(int version = 0) const
saveStateRequest(QSessionManager &sessionManager)
saveTabStops()
saveTableWidgetExtraInfo(QTableWidget *tablWidget, DomWidget *ui_widget, DomWidget *ui_parentWidget)
saveTreeWidgetExtraInfo(QTreeWidget *treeWidget, DomWidget *ui_widget, DomWidget *ui_parentWidget)
saveUiExtraInfo(DomUi *ui)
saveWidgetExtraInfo(DomWidget *ui_widget)
scale(const QSize &s, Qt::AspectRatioMode mode)
scale(const QSizeF &s, Qt::AspectRatioMode mode)
scale(int w, int h, Qt::AspectRatioMode mode)
scale(qreal sx, qreal sy)
scale(qreal w, qreal h, Qt::AspectRatioMode mode)
scaleFont(QFont& font, int logicalSize) const
scaled(const QSize &s, Qt::AspectRatioMode aspectMode = Qt::IgnoreAspectRatio, Qt::TransformationMode mode = Qt::FastTransformation) const
scaledClipRect() const
scaledSize()
scaledSize() const
scaledToHeight(int h, Qt::TransformationMode mode = Qt::FastTransformation) const
scaledToWidth(int w, Qt::TransformationMode mode = Qt::FastTransformation) const
scan(const Q3PointArray& pa, bool winding, int index, int npoints, Edge edges)
scan(const Q3PointArray& pa, bool winding, int index, int npoints, bool stitchable)
scan(const Q3PointArray& pa, bool winding, int index=0, int npoints=-1)
scanLine(int)
scanLine(int) const
scanPolygon(const Q3PointArray& pa, int winding, QPolygonalProcessor& process) const
scene() const
sceneBoundingRect() const
sceneEvent(QEvent *event)
sceneEventFilter(QGraphicsItem *watched, QEvent *event)
sceneMatrix() const
scenePos() const
sceneRect() const
sceneRectChanged(const QRectF &rect)
scheduleDelayedItemsLayout()
scheme() const
scientific(QTextStream &s)
scope() const
scopeId() const
screen() const
screen(int screen = -1)
screenGeometry(int screen = -1) const
screenNumber(const QPoint &) const
screenNumber(const QWidget *widget = 0) const
screenPos() const
scroll(int dx, int dy)
scroll(int dx, int dy, const QRect&)
scrollBarWidgets(Qt::Alignment alignment)
scrollBarsEnabled() const
scrollBy(int dx, int dy )
scrollContentsBy(int dx, int dy)
scrollDirtyRegion(int dx, int dy)
scrollTo(const QModelIndex &index, ScrollHint hint = EnsureVisible)
scrollTo(const QModelIndex &index, ScrollHint hint)
scrollToAnchor(const QString &name)
scrollToAnchor(const QString& name)
scrollToBottom()
scrollToItem(const QListWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible)
scrollToItem(const QTableWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible)
scrollToItem(const QTreeWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible)
scrollToTop()
searchPaths()
searchPaths() const
second() const
second_type
secsTo(const QDateTime &) const
secsTo(const QTime &) const
section(QChar sep, int start, int end = -1, SectionFlags flags = SectionDefault) const
section(const QRegExp &reg, int start, int end = -1, SectionFlags flags = SectionDefault) const
section(const QString &in_sep, int start, int end = -1, SectionFlags flags = SectionDefault) const
sectionAt(int pos) const
sectionAutoResize(int logicalIndex, QHeaderView::ResizeMode mode)
sectionClicked(int logicalIndex)
sectionClicked(int) // obsolete, do not use
sectionCountChanged(int oldCount, int newCount)
sectionDoubleClicked(int logicalIndex)
sectionFormattedText(int sec)
sectionHandleDoubleClicked(int logicalIndex)
sectionHandleDoubleClicked(int section)
sectionLength(int sec) const
sectionMoved(int logicalIndex, int oldVisualIndex, int newVisualIndex)
sectionOffsetEnd(int sec) const
sectionPos(int section) const
sectionPosition(int logicalIndex) const
sectionPressed(int logicalIndex)
sectionRect(int section) const
sectionResized(int logicalIndex, int oldSize, int newSize)
sectionSize(int logicalIndex) const
sectionSize(int section) const
sectionSizeFromContents(int logicalIndex) const
sectionSizeHint(int logicalIndex) const
sectionSizeHint(int section, const QFontMetrics& fm) const
sectionText(Section section) const
sectionText(int sec)
sectionText(int sec) const
sectionViewportPosition(int logicalIndex) const
sectionsAboutToBeRemoved(const QModelIndex &parent, int logicalFirst, int logicalLast)
sectionsHidden() const
sectionsInserted(const QModelIndex &parent, int logicalFirst, int logicalLast)
sectionsMoved() const
seek(int i, bool relative = false)
seek(qint64 off)
seek(qint64 offset)
seek(qint64 pos)
seek(qint64)
segmentStyle() const
select()
select(SelectionType selection)
select(const QItemSelection &selection, QItemSelectionModel::SelectionFlags command)
select(const QModelIndex &index, QItemSelectionModel::SelectionFlags command)
select(const QModelIndex &topLeft, const QModelIndex &bottomRight)
select(const QSqlIndex & filter, const QSqlIndex & sort)
select(const QSqlIndex& sort)
select(const QString & filter, const QSqlIndex & sort = QSqlIndex())
select(const QString &, const QSqlIndex& = QSqlIndex())
selectAll()
selectAll(bool b)
selectAll(bool select = true)
selectAll(bool select)
selectCells(int start_row, int start_col, int end_row, int end_col)
selectColor(const QColor&)
selectColumn(int col)
selectColumn(int column)
selectDirectoryOrFile(Q3ListBoxItem *)
selectDirectoryOrFile(Q3ListViewItem *)
selectFile(const QString &filename)
selectFilter(const QString &filter)
selectRange(Q3ListBoxItem *from, Q3ListBoxItem *to, bool invert, bool includeFirst, bool clearSel = false)
selectRange(Q3ListViewItem *from, Q3ListViewItem *to, bool invert, bool includeFirst, bool clearSel = false)
selectRange(Q3ListViewItem *newItem, Q3ListViewItem *oldItem, Q3ListViewItem *anchorItem)
selectRow(int row)
selectStatement() const
selectWidget(QWidget *w, bool select = true)
selected() const
selected(Q3Action*)
selected(Q3ListBoxItem *)
selected(QAction *)
selected(const QPixmap &pixmap, const QPalette &palette, bool enabled) const
selected(const QString &)
selected(const QString& )
selected(const QString&)
selected(const QString&) // obsolete
selected(int index)
selected(int)
selectedAlpha() const
selectedColumns(int row = 0) const
selectedDate() const
selectedFile() const
selectedFiles() const
selectedFilter() const
selectedId() const
selectedIndexes() const
selectedItem() const
selectedItems()
selectedItems() const
selectedRanges() const
selectedRows(int column = 0) const
selectedTableCells(int *firstRow, int *numRows, int *firstColumn, int *numColumns) const
selectedText() const
selectedWidget(int index) const = 0
selectedWidgetCount() const = 0
selection() const
selection(int num) const
selectionBehavior() const
selectionChanged()
selectionChanged(Q3IconViewItem *item)
selectionChanged(Q3ListBoxItem *)
selectionChanged(Q3ListViewItem *)
selectionChanged(const QItemSelection &selected, const QItemSelection &deselected)
selectionCommand(const QModelIndex &index, const QEvent *event = 0) const
selectionEnd() const
selectionMode() const
selectionModel() const
selectionStart() const
selfNesting() const
send(const QDBusMessage &message) const
sendBufferSize() const
sendEvent(QObject *receiver, QEvent *event)
sendEvent(const QInputMethodEvent &event)
sendPostedEvents()
sendPostedEvents(QObject *receiver, int event_type)
sendRequest()
sendSpontaneousEvent(QObject *receiver, QEvent *event)
sender()
sender() const
separator()
separator() const
separatorsCollapsible() const
serialNumber() const
serverAddress() const
serverError() const
serverPort() const
servers() const
service() const
serviceOwner(const QString &name) const
serviceOwnerChanged(const QString &name, const QString &oldOwner, const QString &newOwner)
servicePid(const QString &serviceName) const
serviceRegistered(const QString &service)
serviceUid(const QString &serviceName) const
serviceUnregistered(const QString &service)
sessionBus()
sessionId() const
sessionKey() const
set(void* p)
setAccel(const QKeySequence& key)
setAccelerated(bool on)
setAccelerator(const QString &accel)
setAcceptDockWindow(Q3DockWindow *dw, bool accept)
setAcceptDrops(bool on)
setAcceptMode(AcceptMode mode)
setAcceptRichText(bool accept)
setAcceptedMouseButtons(Qt::MouseButtons buttons)
setAcceptsHoverEvents(bool enabled)
setAccessibleDescription(const QString &accessibleDescription)
setAccessibleDescription(const QString &description)
setAccessibleName(const QString &name)
setAccessibleText(const QString &accessibleText)
setAccum(bool enable)
setAccumBufferSize(int size)
setActionEditor(QDesignerActionEditorInterface *actionEditor)
setActionGroup(QActionGroup *group)
setActive(bool a)
setActive(bool active = true)
setActive(bool yes)
setActiveAction(QAction *act)
setActiveAction(QAction *action)
setActiveFormWindow(QDesignerFormWindowInterface *formWindow)
setActiveStack(QUndoStack *stack)
setActiveWindow(QWidget *w)
setActiveWindow(QWidget* act)
setAdditionalFormats(const QList<FormatRange> &overrides)
setAddress(const QString &address)
setAddress(const Q_IPV6ADDR &ip6Addr)
setAddress(const sockaddr *sockaddr)
setAddress(quint32 ip4Addr)
setAddress(quint8 *ip6Addr)
setAddressReusable(bool )
setAddresses(const QList<QHostAddress> &addresses)
setAdvancePeriod(int ms)
setAlignment(QLayout *l, Qt::Alignment alignment)
setAlignment(QWidget *w, Qt::Alignment alignment)
setAlignment(Qt::Alignment a)
setAlignment(Qt::Alignment alignment)
setAlignment(Qt::Alignment flag)
setAlignment(Qt::Alignment flags)
setAlignment(Qt::Alignment)
setAlignment(int a)
setAlignment(int alignment)
setAlignment(int f)
setAllChanged()
setAllColumnsShowFocus(bool enable)
setAllColumnsShowFocus(bool)
setAllowedAreas(Qt::DockWidgetAreas areas)
setAllowedAreas(Qt::ToolBarAreas areas)
setAlpha(bool enable)
setAlpha(int alpha)
setAlphaBuffer(bool)
setAlphaBufferSize(int size)
setAlphaChannel(const QImage &alphaChannel)
setAlphaChannel(const QPixmap &)
setAlphaF(qreal alpha)
setAlternatingRowColors(bool enable)
setAnchor(bool anc)
setAngle(qreal angle)
setAngles(int start, int length)
setAnimated(bool enable)
setAnimated(bool enabled)
setAnimated(bool y)
setAppDpiX(int screen, int dpi)
setAppDpiY(int screen, int dpi)
setAppTime(unsigned long time)
setAppUserTime(unsigned long time)
setApplicationName(const QString &application)
setApplicationProxy(const QNetworkProxy &proxy)
setApplyButton()
setApplyButton(const QString &text)
setAppropriate(Q3DockWindow *dw, bool a)
setAppropriate(QWidget *, bool )
setArg(int num, const QString &arg )
setArgs(int, char **)
setArguments(const QList<QVariant> &arguments)
setArguments(const QStringList &args )
setArguments(const QStringList& args )
setArrangement(Arrangement am)
setArrayIndex(int i)
setArrowType(Qt::ArrowType type)
setAscent(qreal a)
setAt(int at)
setAttribute(Qt::ApplicationAttribute attribute, bool on = true)
setAttribute(Qt::WidgetAttribute, bool on = true)
setAttribute(const QString& name, const QString& value)
setAttribute(const QString& name, double value)
setAttribute(const QString& name, float value)
setAttribute(const QString& name, qlonglong value)
setAttribute(const QString& name, qulonglong value)
setAttribute(int index, bool b)
setAttributeNS(const QString nsURI, const QString& qName, const QString& value)
setAttributeNS(const QString nsURI, const QString& qName, double value)
setAttributeNS(const QString nsURI, const QString& qName, qlonglong value)
setAttributeNS(const QString nsURI, const QString& qName, qulonglong value)
setAttributeNode(const QDomAttr& newAttr)
setAttributeNodeNS(const QDomAttr& newAttr)
setAuthor(const QString &author)
setAuthority(const QString &authority)
setAutoAdd(bool a)
setAutoAdvance(bool advance)
setAutoArrange(bool b)
setAutoBufferSwap(bool on)
setAutoClose(bool b)
setAutoCompletion(bool )
setAutoCompletion(bool enable)
setAutoCompletionCaseSensitivity(Qt::CaseSensitivity sensitivity)
setAutoDefault(bool)
setAutoDelete(bool b, int i = 10000 )
setAutoDelete(bool enable )
setAutoDetectUnicode(bool enabled)
setAutoEdit(bool autoEdit )
setAutoEdit(bool autoEdit)
setAutoExclusive(bool)
setAutoFillBackground(bool enabled)
setAutoFormatting(AutoFormatting features)
setAutoFormatting(AutoFormatting)
setAutoGeometry(bool)
setAutoRaise(bool enable)
setAutoRelaySignals(bool enable)
setAutoRemove(bool b)
setAutoRepeat(bool on)
setAutoRepeat(bool)
setAutoRepeatDelay(int)
setAutoRepeatInterval(int)
setAutoReset(bool b)
setAutoResize(bool )
setAutoScroll(bool enable)
setAutoValue(bool autoVal)
setBackEnabled(QWidget *, bool )
setBackEnabled(bool )
setBackground(const QBrush &background)
setBackground(const QBrush &bg)
setBackground(const QBrush &brush)
setBackgroundBrush(const QBrush &brush)
setBackgroundColor(const QColor &)
setBackgroundColor(const QColor &color)
setBackgroundColor(const QColor& c)
setBackgroundMode(Qt::BGMode mode)
setBackgroundMode(Qt::BackgroundMode, Qt::BackgroundMode = Qt::PaletteBackground)
setBackgroundPixmap(const QPixmap &)
setBackgroundPixmap(const QPixmap& p)
setBackgroundRole(QPalette::ColorRole)
setBar(Q3ProgressBar *)
setBar(QProgressBar *bar)
setBaseSize(const QSize &)
setBaseSize(int basew, int baseh)
setBatchSize(int batchSize)
setBinMode()
setBit(int i)
setBit(int i, bool val)
setBlockCharFormat(const QTextCharFormat &format)
setBlockFormat(const QTextBlockFormat &format)
setBlocking(bool )
setBlue(int blue)
setBlueBufferSize(int size)
setBlueF(qreal blue)
setBold(bool b)
setBold(bool)
setBorder(qreal border)
setBottom(double)
setBottom(int pos)
setBottom(int)
setBottom(qreal pos)
setBottomItem(int index)
setBottomLeft(const QPoint &p)
setBottomLeft(const QPointF &p)
setBottomRight(const QPoint &p)
setBottomRight(const QPointF &p)
setBoundaryChecking(bool active)
setBoundingRect(const QRect &r)
setBroadcast(const QHostAddress &newBroadcast)
setBrush(ColorGroup cg, ColorRole cr, const QBrush &brush)
setBrush(ColorRole cr, const QBrush &brush)
setBrush(QBrush b)
setBrush(Qt::BrushStyle style)
setBrush(const QBrush &brush)
setBrushManager(QDesignerBrushManagerInterface *brushManager)
setBrushOrigin(const QPoint &)
setBrushOrigin(const QPointF &)
setBrushOrigin(int x, int y)
setBuddy(QWidget *)
setBuffer(QByteArray *a)
setButton(Qt::MouseButton button)
setButton(int id)
setButtonDownPos(Qt::MouseButton button, const QPointF &pos)
setButtonDownScenePos(Qt::MouseButton button, const QPointF &pos)
setButtonDownScreenPos(Qt::MouseButton button, const QPoint &pos)
setButtonSymbols(ButtonSymbols bs)
setButtonText(int button, const QString &text)
setButtons(Qt::MouseButtons buttons)
setByteOrder(ByteOrder)
setCacheEnabled(bool enable)
setCacheLimit(int)
setCacheMode(CacheMode mode)
setCachedSizeHint(const QSize &sh ) const
setCaching(bool on)
setCachingEnabled(bool)
setCalculated(const QString& name, bool calculated)
setCalendarPopup(bool enable)
setCancelButton()
setCancelButton(QPushButton *)
setCancelButton(QPushButton *button)
setCancelButton(const QString &text)
setCancelButtonText(const QString &)
setCanvas(Q3Canvas* v)
setCanvas(Q3Canvas*)
setCapStyle(Qt::PenCapStyle pcs)
setCapStyle(Qt::PenCapStyle style)
setCascadingSectionResizes(bool enable)
setCaseSensitivity(Qt::CaseSensitivity caseSensitivity)
setCaseSensitivity(Qt::CaseSensitivity cs)
setCell(uchar cell)
setCellContentFromEditor(int row, int col)
setCellHeight(int)
setCellPadding(qreal padding)
setCellSize(int , int) // obsolete, do not use
setCellWidget(int row, int col, QWidget *e)
setCellWidget(int row, int column, QWidget *widget)
setCellWidth(int)
setCenter(const QPointF &center)
setCenterButtons(bool center)
setCenterIndicator(bool on)
setCentralWidget(QWidget *)
setCentralWidget(QWidget *widget)
setChanged(const QRect& area)
setChanged(int index, bool changed)
setChangedChunk(int i, int j)
setChangedChunkContaining(int x, int y)
setCharFormat(const QTextCharFormat &format)
setCheckState(Qt::CheckState checkState)
setCheckState(Qt::CheckState state)
setCheckable(bool checkable)
setCheckable(bool)
setChecked(bool b)
setChecked(bool checked)
setChecked(bool)
setChild(int row, QStandardItem *item)
setChild(int row, int column, QStandardItem *item)
setChildGeometries()
setChildrenCollapsible(bool)
setClean()
setCleanIcon(const QIcon &icon)
setClickEnabled(bool, int section = -1)
setClickable(bool clickable)
setClipPath(const QPainterPath &path, Qt::ClipOperation op = Qt::ReplaceClip)
setClipRect(const QRect &, Qt::ClipOperation op = Qt::ReplaceClip)
setClipRect(const QRect &rect)
setClipRect(const QRectF &, Qt::ClipOperation op = Qt::ReplaceClip)
setClipRect(int x, int y, int w, int h, Qt::ClipOperation op = Qt::ReplaceClip)
setClipRegion(const QRegion &, Qt::ClipOperation op = Qt::ReplaceClip)
setClipping(bool clip)
setClipping(bool enable)
setCloseMode(int m)
setCmyk(int c, int m, int y, int k, int a = 255)
setCmykF(qreal c, qreal m, qreal y, qreal k, qreal a = 1.0)
setCodec(QTextCodec *codec)
setCodec(QTextCodec* )
setCodec(const char *codecName)
setCodecForCStrings(QTextCodec *c)
setCodecForLocale(QTextCodec *c)
setCodecForTr(QTextCodec *c)
setCol(int c)
setCollapsible(int index, bool)
setCollateCopies(bool collate)
setCollateCopiesEnabled(bool)
setColor(ColorGroup cg, ColorRole cr, const QColor &color)
setColor(ColorRole cr, const QColor &color)
setColor(Qt::GlobalColor color)
setColor(const QColor &)
setColor(const QColor &c)
setColor(const QColor &col)
setColor(const QColor &color)
setColor(const QColor&)
setColor(int i, QRgb c)
setColorAt(qreal pos, const QColor &color)
setColorData(const QVariant &color)
setColorGroup(ColorGroup cr, const QBrush &windowText, const QBrush &button, const QBrush &light, const QBrush &dark, const QBrush &mid, const QBrush &text, const QBrush &bright_text, const QBrush &base, const QBrush &alternate_base, const QBrush &window, const QBrush &midlight, const QBrush &button_text, const QBrush &shadow, const QBrush &highlight, const QBrush &highlighted_text, const QBrush &link, const QBrush &link_visited)
setColorGroup(ColorGroup cr, const QBrush &windowText, const QBrush &button, const QBrush &light, const QBrush &dark, const QBrush &mid, const QBrush &text, const QBrush &bright_text, const QBrush &base, const QBrush &window)
setColorGroup(ColorGroup, const QColorGroup &)
setColorMode(ColorMode)
setColorSpec(int)
setColorTable(const QVector<QRgb> colors)
setColormap(const QGLColormap & map)
setColumn(uint col, const QString& fieldName, const QString& label = QString(), int width = -1, const QIconSet& iconset = QIconSet() )
setColumnAlignment(int, int)
setColumnCount(int columns)
setColumnHidden(int column, bool hide)
setColumnLabels(const QStringList &labels)
setColumnLayout(int strips, Qt::Orientation o)
setColumnMinimumWidth(int column, int minSize)
setColumnMode(LayoutMode)
setColumnMode(int)
setColumnMovingEnabled(bool b)
setColumnReadOnly(int col, bool ro)
setColumnStretch(int column, int stretch)
setColumnStretchable(int col, bool stretch )
setColumnStretchable(int col, bool stretch)
setColumnText(int column, const QIcon& icon, const QString &label)
setColumnText(int column, const QString &label)
setColumnWidth(int col, int w )
setColumnWidth(int col, int w)
setColumnWidth(int column, int width)
setColumnWidthMode(int column, WidthMode)
setColumns(int columns)
setColumns(int)
setComment(const QString &comment)
setCommitString(const QString &commitString, int replaceFrom = 0, int replaceLength = 0)
setCommunication(int c )
setCompat(bool compat)
setCompleter(QCompleter *c)
setCompleter(QCompleter *completer)
setCompletionColumn(int column)
setCompletionMode(CompletionMode mode)
setCompletionPrefix(const QString &prefix)
setCompletionRole(int role)
setCompositionMode(CompositionMode mode)
setConfirmCancels(bool confirm )
setConfirmCancels(bool confirm)
setConfirmDelete(bool confirm )
setConfirmDelete(bool confirm)
setConfirmEdits(bool confirm )
setConfirmEdits(bool confirm)
setConfirmInsert(bool confirm )
setConfirmInsert(bool confirm)
setConfirmOverwrite(bool enabled)
setConfirmUpdate(bool confirm )
setConfirmUpdate(bool confirm)
setConnectOptions(const QString& options = QString())
setContainer(bool container)
setContent(QIODevice* dev, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(QIODevice* dev, bool namespaceProcessing, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(QXmlInputSource *source, QXmlReader *reader, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(const QByteArray& text, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(const QByteArray& text, bool namespaceProcessing, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(const QString& text, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContent(const QString& text, bool namespaceProcessing, QString *errorMsg=0, int *errorLine=0, int *errorColumn=0 )
setContentFromEditor(QWidget *w)
setContentHandler(QXmlContentHandler* handler)
setContentLength(int len )
setContentLength(int len)
setContentType(const QString &type)
setContentType(const QString& type )
setContents(QIODevice *dev)
setContents(const QString &contents)
setContentsMargins(int left, int top, int right, int bottom)
setContentsPos(int x, int y )
setContentsPos(int x, int y)
setContentsPreview(QWidget *w, Q3FilePreview *preview)
setContentsPreviewEnabled(bool)
setContext(QGLContext* context, const QGLContext* shareContext = 0, bool deleteOldContext = true)
setContext(Qt::ShortcutContext context)
setContextMenu(QMenu *menu)
setContextMenuPolicy(Qt::ContextMenuPolicy policy)
setContexts(const QString&)
setControlPoints(Q3PointArray, bool closed=true)
setCoordinateMode(CoordinateMode mode)
setCoords(int x1, int y1, int x2, int y2)
setCoords(qreal x1, qreal y1, qreal x2, qreal y2)
setCorner(Qt::Corner corner, Qt::DockWidgetArea area)
setCornerWidget(QWidget * w, Qt::Corner corner = Qt::TopRightCorner)
setCornerWidget(QWidget *w, Qt::Corner corner = Qt::TopRightCorner)
setCornerWidget(QWidget *widget)
setCornerWidget(QWidget*)
setCorrectionMode(CorrectionMode cm)
setCreator(const QString &)
setCurrent(const QString &path)
setCurrentBlockState(int newState)
setCurrentBlockUserData(QTextBlockUserData *data)
setCurrentBrush(const QString &name)
setCurrentCell(int row, int col)
setCurrentCell(int row, int col, bool updateSelections, bool ensureVisible = false)
setCurrentCell(int row, int column)
setCurrentCharFormat(const QTextCharFormat &format)
setCurrentFont(const QFont &f)
setCurrentFrame(int)
setCurrentIndex(const QModelIndex &index)
setCurrentIndex(const QModelIndex &index, QItemSelectionModel::SelectionFlags command)
setCurrentIndex(int index)
setCurrentItem(Q3IconViewItem *item)
setCurrentItem(Q3ListBoxItem *)
setCurrentItem(Q3ListViewItem *)
setCurrentItem(QListWidgetItem *item)
setCurrentItem(QTableWidgetItem *item)
setCurrentItem(QTreeWidgetItem *item)
setCurrentItem(QTreeWidgetItem *item, int column)
setCurrentItem(const QString &i)
setCurrentItem(int i)
setCurrentItem(int index )
setCurrentItem(int index)
setCurrentModelIndex(const QModelIndex &index)
setCurrentPage(int year, int month)
setCurrentPath(const QString &path)
setCurrentRow(int row)
setCurrentSection(Section section)
setCurrentSelection(int row, int col )
setCurrentState(ToggleState s)
setCurrentText(const QString& )
setCurrentTime(int msec)
setCurrentTool(int index)
setCurrentWidget(QWidget *w)
setCurrentWidget(QWidget *widget)
setCursor(const QCursor &)
setCursor(const QCursor &cursor)
setCursorFlashTime(int)
setCursorName(const QString &cursorName)
setCursorPosition(int line, int col, bool mark)
setCursorPosition(int parag, int index)
setCursorPosition(int)
setCursorWidth(int width)
setCurveShape(CurveShape shape)
setCurveThreshold(qreal threshold)
setCustom(bool custom)
setCustomColor(int, QRgb)
setCustomHighlighting(bool)
setDTDHandler(QXmlDTDHandler* handler)
setDashPattern(Qt::PenStyle)
setDashPattern(const QVector<qreal> &dashPattern)
setDashPattern(const QVector<qreal> &pattern)
setData(QMimeSource*, Mode mode = Clipboard)
setData(const QByteArray &d)
setData(const QByteArray &data)
setData(const QByteArray& dat)
setData(const QModelIndex &index, const QVariant &value, int role = Qt::EditRole)
setData(const QModelIndex &index, const QVariant &value, int role)
setData(const QModelIndex &item, const QVariant &value, int role = Qt::EditRole)
setData(const QString &mimetype, const QByteArray &data)
setData(const QString& abs_name, QMimeSource* data)
setData(const QString& d)
setData(const QString& dat)
setData(const QString&)
setData(const QVariant &value, int role = Qt::UserRole + 1)
setData(const QVariant &var)
setData(const char *data, int len)
setData(const char* data, uint size)
setData(int column, int role, const QVariant &value)
setData(int key, const QVariant &value)
setData(int role, const QVariant &value)
setDatabaseName(const QString& name)
setDatabaseText(const QString& databaseText)
setDate(const QDate &date)
setDate(const QDate& date)
setDate(int year, int month, int date)
setDateFormat(const Qt::DateFormat f )
setDateRange(const QDate &min, const QDate &max)
setDateTextFormat(const QDate &date, const QTextCharFormat &color)
setDateTime(const QDateTime & dt)
setDateTime(const QDateTime &dateTime)
setDay(int day)
setDecMode()
setDecimals(int prec)
setDecimals(int)
setDeclHandler(QXmlDeclHandler* handler)
setDecodingFunction(DecoderFn)
setDefault(bool)
setDefault(const QLocale &locale)
setDefaultAction(QAction *)
setDefaultAlignment(Qt::Alignment alignment)
setDefaultButton()
setDefaultButton(QPushButton *button)
setDefaultButton(const QString &text)
setDefaultFactory(Q3MimeSourceFactory*)
setDefaultFactory(QItemEditorFactory *factory)
setDefaultFont(const QFont &)
setDefaultFont(const QFont &f)
setDefaultFont(const QFont &font)
setDefaultFormat(const QGLFormat& f)
setDefaultOverlayFormat(const QGLFormat& f)
setDefaultPositioning(int n, Qt::Orientation orient)
setDefaultPropertyValues(const QList<QVariant> &list)
setDefaultRenameAction(RenameAction a)
setDefaultSectionSize(int size)
setDefaultSheet(Q3StyleSheet*)
setDefaultStyleSheet(const QString &sheet)
setDefaultSuffix(const QString &suffix)
setDefaultTextColor(const QColor &c)
setDefaultUp(bool)
setDefaultValue(const QVariant &value)
setDefaultWidget(QWidget *w)
setDelayedReply(bool enable) const
setDelta(int delta)
setDepth(bool enable)
setDepthBufferSize(int size)
setDescending(int i, bool desc)
setDescent(qreal d)
setDescription(const QString &)
setDescription(const QString &desc)
setDescription(const QString &description)
setDesktopSettingsAware(bool)
setDetailedText(const QString &text)
setDevice(QIODevice * )
setDevice(QIODevice *)
setDevice(QIODevice *device)
setDevice(QPaintDevice *pDev)
setDir(bool b)
setDir(const QDir &)
setDir(const QString&)
setDirectRendering(bool enable)
setDirection(Direction direction)
setDirection(Direction)
setDirectory(const QDir &directory)
setDirectory(const QString &directory)
setDirty(DirtyFlags df)
setDirty(bool dirty)
setDirtyRegion(const QRegion &region)
setDisabled(bool)
setDiscardCommand(const QStringList&)
setDisplay(uint disp)
setDisplayFormat(const QString &format)
setDisplayMode(DisplayMode m)
setDocName(const QString &)
setDockEnabled(Q3DockWindow *tb, Qt::Dock dock, bool enable)
setDockEnabled(Qt::Dock dock, bool enable)
setDockMenuEnabled(bool)
setDockNestingEnabled(bool enabled)
setDockWindowsMovable(bool)
setDocument(Q3TextDocument *doc)
setDocument(QTextDocument *doc)
setDocument(QTextDocument *document)
setDocumentLayout(QAbstractTextDocumentLayout *layout)
setDocumentLocator(QXmlLocator* locator)
setDotsPerMeterX(int)
setDotsPerMeterY(int)
setDoubleBuffer(bool enable)
setDoubleBuffering(bool y)
setDoubleClickInterval(int)
setDoubleSidedPrinting(bool enable)
setDown(bool)
setDownEnabled(bool on)
setDragAutoScroll(bool b )
setDragCursor(const QPixmap &cursor, Qt::DropAction action)
setDragDropMode(DragDropMode behavior)
setDragDropOverwriteMode(bool overwrite)
setDragEnabled(bool allow)
setDragEnabled(bool b)
setDragEnabled(bool dragEnabled)
setDragEnabled(bool enable)
setDragMode(DragMode mode)
setDrawBase(bool drawTheBase)
setDriverText(const QString& driverText)
setDropAction(Qt::DropAction action)
setDropEnabled(bool allow)
setDropEnabled(bool dropEnabled)
setDropIndicatorShown(bool enable)
setDuplicatesEnabled(bool enable )
setDuplicatesEnabled(bool enable)
setDuration(int duration)
setDynamicSortFilter(bool enable)
setEchoMode(EchoMode)
setEditFocus(bool on)
setEditMode(EditMode mode, int row, int col)
setEditStrategy(EditStrategy strategy)
setEditText(const QString &)
setEditText(const QString &text)
setEditTriggers(EditTriggers triggers)
setEditWidget(QWidget * widget)
setEditable(bool )
setEditable(bool b)
setEditable(bool editable)
setEdited(bool)
setEditorData(QWidget *editor, const QModelIndex &index) const
setEffectEnabled(Qt::UIEffect, bool enable = true)
setElementId(const QString &id)
setElementPositionAt(int i, qreal x, qreal y)
setElideMode(Qt::TextElideMode)
setEmptyLabel(const QString &label)
setEnabled(bool )
setEnabled(bool b)
setEnabled(bool enable )
setEnabled(bool enable)
setEnabled(bool enabled)
setEnabled(bool yes)
setEnabled(bool)
setEnabledOptions(PrintDialogOptions options)
setEncodedData(const QByteArray &)
setEncodedPathAndQuery(const QString& enc )
setEncodedQuery(const QByteArray &query)
setEncodedUrl(const QByteArray &url)
setEncodedUrl(const QByteArray &url, ParsingMode mode)
setEncoding(Encoding )
setEncoding(Encoding encoding)
setEncodingFunction(EncoderFn)
setEndFrame(int frame)
setEngines(QPrintEngine *printEngine, QPaintEngine *paintEngine)
setEntityResolver(QXmlEntityResolver* handler)
setEntries(int count, const QRgb * colors, int base = 0)
setEntry(int idx, QRgb color)
setEntry(int idx, const QColor & color)
setEnvironment(const QStringList &environment)
setEraseColor(const QColor &)
setErasePixmap(const QPixmap &)
setError(Error err )
setError(HostInfoError error)
setError(QFile::FileError error, const QString &str)
setErrorCode(int ec )
setErrorHandler(QXmlErrorHandler* handler)
setErrorString(const QString &errorString)
setEscapeButton(QAbstractButton *button)
setEventFilter(EventFilter filter)
setExclusive(bool)
setExpand(uint index, char c)
setExpand(uint index, const char *d, uint sz)
setExpandable(bool)
setExpanded(bool expand)
setExpanded(const QModelIndex &index, bool expand)
setExportMacro(const QString &exportMacro)
setExtends(const QString &s)
setExtension(Extension extension, const QVariant &variant)
setExtension(QWidget* extension)
setExtensionManager(QExtensionManager *extensionManager)
setExtensionType(const QString& ext, const char* mimetype)
setExtraSelections(const QList<ExtraSelection> &selections)
setFallbacksEnabled(bool b)
setFalseText(const QString& falseText )
setFamily(const QString &)
setFamily(const QString &f)
setFeature(const QString& name, bool value)
setFeatures(DockWidgetFeatures features)
setFeatures(Feature f)
setFieldAlignment(FieldAlignment alignment)
setFieldWidth(int width)
setFile(bool b)
setFile(const QDir &dir, const QString &file)
setFile(const QFile &file)
setFile(const QString &file)
setFileMode(FileMode mode)
setFileName(const QString &)
setFileName(const QString &file)
setFileName(const QString &fileName)
setFileName(const QString &file_name)
setFileName(const QString &name)
setFileName(const QString &txt)
setFileName(const QString& txt )
setFileNameAndVersion(const QString &fileName, int verNum)
setFileNames(const QStringList & fnames)
setFilePath(const QStringList&)
setFileTemplate(const QString &name)
setFillRule(Qt::FillRule fillRule)
setFillRule(Qt::FillRule rule)
setFilter(Filters filter)
setFilter(QDir::Filters filters)
setFilter(const QString &filter)
setFilter(const QString& filter )
setFilter(const QString& filter)
setFilter(const QString&)
setFilterCaseSensitivity(Qt::CaseSensitivity cs)
setFilterFixedString(const QString &pattern)
setFilterKeyColumn(int column)
setFilterRegExp(const QRegExp &regExp)
setFilterRegExp(const QString &pattern)
setFilterRole(int role)
setFilterWildcard(const QString &pattern)
setFilters(const QString&)
setFilters(const QStringList &filters)
setFilters(const QStringList&)
setFilters(const char **)
setFinalStop(const QPointF &stop)
setFinishEnabled(QWidget *, bool )
setFirstDayOfWeek(Qt::DayOfWeek dayOfWeek)
setFixedExtent(int d, Q3DockWindow *dw)
setFixedExtentHeight(int h)
setFixedExtentWidth(int w)
setFixedHeight(int h)
setFixedPitch(bool)
setFixedSize(const QSize &)
setFixedSize(int w, int h)
setFixedWidth(int w)
setFlag(GraphicsItemFlag flag, bool enabled = true)
setFlags(Flags flags)
setFlags(GraphicsItemFlags flags)
setFlags(Qt::ItemFlags flags)
setFlat(bool flat)
setFlat(bool)
setFloating(bool floating)
setFlow(Flow flow)
setFocalPoint(const QPointF &focalPoint)
setFocus(Qt::FocusReason focusReason = Qt::OtherFocusReason)
setFocus(Qt::FocusReason reason)
setFocusItem(QGraphicsItem *item, Qt::FocusReason focusReason = Qt::OtherFocusReason)
setFocusPolicy(Qt::FocusPolicy policy)
setFocusProxy(QWidget *)
setFocusSection(int s)
setFocusSection(int sec)
setFocusStyle(FocusStyle fs)
setFocusWidget(QWidget *w )
setFont(const QFont & )
setFont(const QFont & font )
setFont(const QFont & font)
setFont(const QFont &)
setFont(const QFont &, const char* className = 0)
setFont(const QFont &f)
setFont(const QFont &font)
setFont(const QFont&)
setFont(int column, const QFont &font)
setFontEmbeddingEnabled(bool enable)
setFontFamily(const QString &fontFamily)
setFontFamily(const QString&)
setFontFilters(FontFilters filters)
setFontInternal(const QFont &f)
setFontItalic(bool b)
setFontItalic(bool)
setFontPointSize(qreal s)
setFontSize(int s)
setFontStrikeOut(bool)
setFontUnderline(bool b)
setFontUnderline(bool)
setFontWeight(int w)
setForeground(const QBrush &brush)
setForegroundBrush(const QBrush &brush)
setForegroundRole(QPalette::ColorRole)
setForm(Q3SqlForm* form)
setFormManager(QDesignerFormWindowManagerInterface *formWindowManager)
setFormWindow(QDesignerFormWindowInterface *formWindow)
setFormat(Q3TextFormat *f, int flags)
setFormat(const QByteArray &format)
setFormat(const QByteArray &format) const
setFormat(const QGLFormat& format)
setFormat(const QString &format)
setFormat(const QTextCharFormat &format)
setFormat(const QTextFormat &format)
setFormat(const QTextListFormat &format)
setFormat(const QTextTableFormat &format)
setFormat(const char *)
setFormat(int start, int count, const QColor &color)
setFormat(int start, int count, const QFont &font)
setFormat(int start, int count, const QFont &font, const QColor &color)
setFormat(int start, int count, const QTextCharFormat &format)
setForwardOnly(bool forward)
setFragment(const QString &fragment)
setFrame(bool)
setFrame(int)
setFrameAnimation(FrameAnimationType=Cycle, int step=1, int state=0)
setFrameFormat(const QTextFrameFormat &format)
setFrameRange(int startFrame, int endFrame)
setFrameRect(const QRect &)
setFrameShadow(Shadow)
setFrameShape(Shape)
setFrameStyle(int)
setFramesPerSecond(int num)
setFromTo(int fromPage, int toPage)
setFullPage(bool)
setGamma(float gamma)
setGamma(float)
setGenerateByteOrderMark(bool generate)
setGenerated(bool gen)
setGenerated(const QString& name, bool generated)
setGenerated(int i, bool generated)
setGeometry(const QRect &)
setGeometry(const QRect &r)
setGeometry(const QRect &rect)
setGeometry(const QRect&)
setGeometry(int x, int y, int w, int h)
setGlobalStrut(const QSize &)
setGreen(int green)
setGreenBufferSize(int size)
setGreenF(qreal green)
setGrid(const QPoint &grid)
setGridSize(const QSize &size)
setGridStyle(Qt::PenStyle style)
setGridVisible(bool show)
setGridX(int rx)
setGridY(int ry)
setGroup(QGraphicsItemGroup *group)
setGroup(QUndoGroup *group)
setGroup(const QString &group)
setGroup(const QString &s)
setHBarGeometry(QScrollBar& hbar, int x, int y, int w, int h)
setHMS(int h, int m, int s, int ms = 0)
setHScrollBarMode(ScrollBarMode )
setHandleWidth(int)
setHandlesChildEvents(bool enabled)
setHeader(QHeaderView *header)
setHeaderData(int section, Qt::Orientation orientation, const QVariant &value, int role = Qt::EditRole)
setHeaderData(int section, Qt::Orientation orientation, const QVariant &value, int role)
setHeaderItem(QTreeWidgetItem *item)
setHeaderLabel(const QString &label)
setHeaderLabels(const QStringList &labels)
setHeaderTextFormat(const QTextCharFormat &format)
setHeaderVisible(bool show)
setHeight(const QTextLength &height)
setHeight(int h)
setHeight(int)
setHeight(qreal h)
setHeight(qreal height)
setHelp(const QString &help)
setHelpButton()
setHelpButton(const QString &text)
setHelpEnabled(QWidget *, bool )
setHelpEnabled(bool )
setHexMode()
setHidden(bool hide)
setHighlightSections(bool highlight)
setHistory(const QStringList &paths)
setHorizontalHeader(QHeaderView *header)
setHorizontalHeaderFormat(HorizontalHeaderFormat format)
setHorizontalHeaderItem(int column, QStandardItem *item)
setHorizontalHeaderItem(int column, QTableWidgetItem *item)
setHorizontalHeaderLabels(const QStringList &labels)
setHorizontalScrollBar(QScrollBar *scrollbar)
setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy)
setHorizontalScrollMode(ScrollMode mode)
setHorizontalStepsPerItem(int steps)
setHorizontallyStretchable(bool b)
setHost(const QString &host)
setHost(const QString &hostname, Q_UINT16 port=80 )
setHost(const QString &hostname, quint16 port = 80)
setHost(const QString& user )
setHostName(const QString &hostName)
setHostName(const QString &name)
setHostName(const QString& host)
setHotSpot(const QPoint &hotspot)
setHour(int h)
setHsv(int h, int s, int v, int a = 255)
setHsvF(qreal h, qreal s, qreal v, qreal a = 1.0)
setHtml(const QString &html)
setHtml(const QString &text)
setIODevice(QIODevice *)
setIcon(Icon)
setIcon(const QIcon &icon)
setIcon(const QPixmap &i)
setIcon(int column, const QIcon &icon)
setIconCache(QDesignerIconCacheInterface *cache)
setIconPixmap(const QPixmap &pixmap)
setIconProvider(Q3FileIconProvider *)
setIconProvider(QFileIconProvider *provider)
setIconSet(const QIcon &)
setIconSet(const QIcon &, bool on)
setIconSet(const QIcon&)
setIconSize(const QSize &iconSize)
setIconSize(const QSize &size)
setIconText(const QString &text)
setId(QAbstractButton *button, int id)
setId(int index, int id)
setId(int)
setIdnWhitelist(const QStringList &)
setIgnoreWhatsThis(bool )
setImage(QImage image)
setImage(const QImage &, Mode mode = Clipboard)
setImage(const QString& abs_name, const QImage& im)
setImage(int i, Q3CanvasPixmap* p)
setImageData(const QVariant &image)
setIncludeFile(const QString &includeFile)
setIncludeHints(const QStringList &includeHints)
setIndent(int indent)
setIndent(int)
setIndentation(int i)
setIndex(int idx)
setIndexWidget(const QModelIndex &index, QWidget *widget)
setIndicator(QString &progress_str, int progress, int totalSteps)
setInfoPreview(QWidget *w, Q3FilePreview *preview)
setInfoPreviewEnabled(bool)
setInformativeText(const QString &text)
setInitialized(bool on)
setInputContext(QInputContext *)
setInputMask(const QString &inputMask)
setInsertPolicy(InsertPolicy policy)
setInsertionPolicy(Policy policy )
setInsideMargin(int m)
setInsideSpacing(int s)
setIntegerBase(int base)
setInteractive(bool allowed)
setInterval(int msec)
setInvalidDataPolicy(InvalidDataPolicy policy)
setInvertedAppearance(bool invert)
setInvertedAppearance(bool)
setInvertedControls(bool)
setIoRedirection(bool value )
setIp(const QHostAddress &newIp)
setIsATableHeader(bool b)
setItalic(bool b)
setItem(QGraphicsItem *item)
setItem(int row, QStandardItem *item)
setItem(int row, int col, Q3TableItem * item )
setItem(int row, int col, Q3TableItem *item)
setItem(int row, int column, QStandardItem *item)
setItem(int row, int column, QTableWidgetItem *item)
setItemData(const QModelIndex &index, const QMap<int, QVariant> &roles)
setItemData(int index, const QVariant &value, int role = Qt::UserRole)
setItemDelegate(QAbstractItemDelegate *delegate)
setItemDelegateForColumn(int column, QAbstractItemDelegate *delegate)
setItemDelegateForRow(int row, QAbstractItemDelegate *delegate)
setItemEditorFactory(QItemEditorFactory *factory)
setItemEnabled(int id, bool enable )
setItemEnabled(int index, bool enabled)
setItemExpanded(const QTreeWidgetItem *item, bool expand)
setItemHidden(const QListWidgetItem *item, bool hide)
setItemHidden(const QTreeWidgetItem *item, bool hide)
setItemIcon(int index, const QIcon &icon)
setItemIndexMethod(ItemIndexMethod method)
setItemMargin(int)
setItemParameter(int id, int param)
setItemPrototype(const QStandardItem *item)
setItemPrototype(const QTableWidgetItem *item)
setItemRect(const QRect &r)
setItemSelected(const QListWidgetItem *item, bool select)
setItemSelected(const QTableWidgetItem *item, bool select)
setItemSelected(const QTreeWidgetItem *item, bool select)
setItemText(int index, const QString &text)
setItemTextBackground(const QBrush &b)
setItemTextPos(ItemTextPos pos)
setItemToolTip(int index, const QString &toolTip)
setItemWidget(QListWidgetItem *item, QWidget *widget)
setItemWidget(QTreeWidgetItem *item, int column, QWidget *widget)
setItemsExpandable(bool enable)
setItemsMovable(bool b)
setJoinStyle(Qt::PenJoinStyle pcs)
setJoinStyle(Qt::PenJoinStyle style)
setKerning(bool)
setKey(const QKeySequence& key)
setKey(const QString &k)
setKey(int key, int index)
setKeyboardInputInterval(int)
setKeypadNavigationEnabled(bool)
setLabel(QLabel *)
setLabel(QLabel *label)
setLabel(const QHostAddress & address )
setLabel(const QString & label )
setLabel(const QString &)
setLabel(int, const QIcon&, const QString &, int size = -1)
setLabel(int, const QString &, int size = -1)
setLabelText(DialogLabel label, const QString &text)
setLabelText(const QString &)
setLastError(const QSqlError &error)
setLastError(const QSqlError& e)
setLastModified(const QDateTime &dt)
setLastPos(const QPointF &pos)
setLastScenePos(const QPointF &pos)
setLastScreenPos(const QPoint &pos)
setLayout(QLayout *)
setLayoutData(QTextFrameLayoutData *data)
setLayoutDefault(int margin, int spacing)
setLayoutDirection(Qt::LayoutDirection direction)
setLayoutFunction(const QString &margin, const QString &spacing)
setLayoutMode(LayoutMode mode)
setLazyChildCount(bool enable)
setLeft(int pos)
setLeft(qreal pos)
setLeftMargin(int m)
setLength(int fieldLength)
setLength(qreal len)
setLexicalHandler(QXmlLexicalHandler* handler)
setLibraryPaths(const QStringList &)
setLine(const QLineF &line)
setLineEdit(QLineEdit *edit )
setLineEdit(QLineEdit *edit)
setLineSpacing(int ls)
setLineWidth(int)
setLineWidth(qreal width)
setLineWrapColumnOrWidth(int w)
setLineWrapMode(LineWrapMode mode)
setLinkUnderline(bool)
setListBox(Q3ListBox * )
setListStyle(ListStyle)
setLoadHints(LoadHints hints)
setLocalAddress(const QHostAddress &address)
setLocalPort(quint16 port)
setLocale(const QLocale &locale)
setLogicalFontSize(int s)
setLogicalFontSizeStep(int s)
setLookupId(int id)
setLoopCount(int count)
setLoops(int)
setMainContainer(QWidget *mainContainer)
setMainWidget(QWidget *)
setManagerProperty(const QString& name, const QString& value)
setManagerProperty(const QString& name, const QStringList& value)
setMapping(QObject *sender, QObject *object)
setMapping(QObject *sender, QWidget *widget)
setMapping(QObject *sender, const QString &text)
setMapping(QObject *sender, int id)
setMargin(Margin, int)
setMargin(int)
setMargin(qreal margin)
setMargins(int left, int top, int right, int bottom)
setMask(const QBitmap &)
setMask(const QRegion &)
setMatchAllDirs(bool on)
setMatrix(const QMatrix &mat)
setMatrix(const QMatrix &matrix, bool combine = false)
setMatrix(qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy)
setMatrixEnabled(bool enabled)
setMaxCost(int m)
setMaxCost(int maxCost)
setMaxCount(int )
setMaxCount(int max)
setMaxItemTextLength(int w)
setMaxItemWidth(int w)
setMaxLength(int)
setMaxLogLines(int numLines)
setMaxPendingConnections(int numConnections)
setMaxValue(int minVal)
setMaxVisibleItems(int maxItems)
setMaximum(double max)
setMaximum(int max)
setMaximum(int maximum)
setMaximum(int)
setMaximumBlockCount(int maximum)
setMaximumCacheSize(const QSize &size)
setMaximumDate(const QDate &date)
setMaximumDate(const QDate &max)
setMaximumHeight(int maxh)
setMaximumSize(const QSize &)
setMaximumSize(int maxw, int maxh)
setMaximumTime(const QTime &max)
setMaximumWidth(int maxw)
setMemberGroup(int index, const QString &group)
setMenu(QMenu *menu)
setMenu(QMenu* menu)
setMenuBar(QMenuBar *)
setMenuBar(QMenuBar *menubar)
setMenuBar(QWidget *w)
setMenuRole(MenuRole menuRole)
setMenuText(const QString&)
setMenuWidget(QWidget *menubar)
setMetaDataBase(QDesignerMetaDataBaseInterface *metaDataBase)
setMetaInformation(MetaInformation info, const QString &)
setMidLineWidth(int)
setMimeData(QMimeData *data)
setMimeData(QMimeData *data, Mode mode = Clipboard)
setMimeData(const QMimeData *data)
setMimeSourceFactory(Q3MimeSourceFactory* factory)
setMinMax(int min, int max)
setMinMax(int minPage, int maxPage)
setMinValue(int minVal)
setMinimal(bool minimal)
setMinimum(double min)
setMinimum(int min)
setMinimum(int minimum)
setMinimum(int)
setMinimumContentsLength(int characters)
setMinimumDate(const QDate &date)
setMinimumDate(const QDate &min)
setMinimumDuration(int ms)
setMinimumHeight(int minh)
setMinimumSectionSize(int size)
setMinimumSize(const QSize &)
setMinimumSize(int minw, int minh)
setMinimumTime(const QTime &min)
setMinimumWidth(int minw)
setMinute(int m)
setMiterLimit(qreal length)
setMiterLimit(qreal limit)
setModal(bool modal)
setMode(Mode)
setMode(int flags)
setModel(QAbstractItemModel *c)
setModel(QAbstractItemModel *model)
setModelColumn(int column)
setModelColumn(int visibleColumn)
setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &index) const
setModelSorting(ModelSorting sorting)
setModified()
setModified(bool m = true)
setModified(bool m)
setModified(bool)
setModifiers(Qt::KeyboardModifiers modifiers)
setMonth(int month)
setMouseTracking(bool enable)
setMovable(bool movable)
setMovement(Movement movement)
setMovie(QMovie *movie)
setMovingEnabled(bool b)
setMovingEnabled(bool)
setMultiLinesEnabled(bool b)
setMultiSelection(bool enable)
setMultiSelection(bool multi)
setName(const QString &name)
setName(const QString& name)
setName(const QString& name, bool autopopulate = true)
setNameFilter(const QString &nameFilter )
setNameFilter(const QString &nameFilter)
setNameFilters(const QStringList &filters)
setNameFilters(const QStringList &nameFilters)
setNamedColor(const QString& name)
setNamedItem(const QDomNode& newNode)
setNamedItemNS(const QDomNode& newNode)
setNetmask(const QHostAddress &newNetmask)
setNewLine(bool b)
setNextEnabled(QWidget *, bool )
setNextEnabled(bool )
setNextPage(QWidget * )
setNoReplayFor(QWidget *widget)
setNodeValue(const QString&)
setNotchTarget(double target)
setNotchesVisible(bool visible)
setNotifyOnExit(bool value )
setNull(const QString& name)
setNull(int i)
setNullText(const QString& nullText )
setNum(double)
setNum(double, char f = 'g', int prec = 6)
setNum(double, char f='g', int prec=6)
setNum(float, char f = 'g', int prec = 6)
setNum(float, char f='g', int prec=6)
setNum(int)
setNum(int, int base = 10)
setNum(int, int base=10)
setNum(long)
setNum(long, int base=10)
setNum(qlonglong, int base = 10)
setNum(qlonglong, int base=10)
setNum(qulonglong, int base = 10)
setNum(qulonglong, int base=10)
setNum(short)
setNum(short, int base = 10)
setNum(short, int base=10)
setNum(uint)
setNum(uint, int base = 10)
setNum(uint, int base=10)
setNum(ulong)
setNum(ulong, int base=10)
setNum(ushort)
setNum(ushort, int base = 10)
setNum(ushort, int base=10)
setNumColors(int)
setNumCols(int c )
setNumCols(int r)
setNumCols(int)
setNumColumns(int columns)
setNumCopies(int)
setNumDigits(int nDigits)
setNumRows(int r )
setNumRows(int r)
setNumRows(int)
setNumber(int number)
setNumberFlags(NumberFlags flags)
setNumberOfColumns(int ncols)
setNumberOptions(NumberOptions options)
setOKButton(const QString &text = QString())
setObject(QObject *object)
setObjectIndex(int object)
setObjectInspector(QDesignerObjectInspectorInterface *objectInspector)
setObjectName(const QString &name)
setObjectType(int type)
setOctMode()
setOffIconSet(const QIcon&)
setOffset(const QPoint&)
setOffset(const QPointF &offset)
setOffset(int o)
setOffset(int offset)
setOffset(int pos)
setOffsetToSectionPosition(int visualIndex)
setOkButton()
setOkButton(const QString &text)
setOn(bool on)
setOn(bool)
setOnIconSet(const QIcon&)
setOpacity(qreal opacity)
setOpaqueMoving(bool b)
setOpaqueMoving(bool)
setOpaqueResize(bool opaque = true)
setOpen(Q3ListViewItem *, bool)
setOpen(bool o)
setOpen(bool)
setOpenError(bool e)
setOpenExternalLinks(bool open)
setOpenMode(OpenMode openMode)
setOption(ImageOption option, const QVariant &value)
setOption(Option, int )
setOption(QGL::FormatOptions opt)
setOptionEnabled(PrinterOption, bool enable)
setOptions(const QModelIndex &index, const QStyleOptionViewItem &option) const
setOrder(Order order)
setOrganizationDomain(const QString &orgDomain)
setOrganizationName(const QString &orgName)
setOrientation(Orientation)
setOrientation(Qt::Orientation aOrientation)
setOrientation(Qt::Orientation o)
setOrientation(Qt::Orientation orientation)
setOrientation(Qt::Orientation)
setOriginCorner(Qt::Corner)
setOutputFileName(const QString &)
setOutputFormat(OutputFormat format)
setOutputToFile(bool)
setOverlay(bool enable)
setOverline(bool)
setOverrideCursor(const QCursor &)
setOverwriteMode(bool overwrite)
setOwner(const QString &s)
setPadChar(QChar ch)
setPadding(qreal padding)
setPageOrder(PageOrder)
setPageSize(PageSize)
setPageSize(const QSizeF &size)
setPageStep(int)
setPaintDevice(QPaintDevice *device)
setPalette(const QPalette & )
setPalette(const QPalette &)
setPalette(const QPalette &, const char* className = 0)
setPaletteBackgroundColor(const QColor &)
setPaletteBackgroundPixmap(const QPixmap &)
setPaletteForegroundColor(const QColor &)
setPaper(const QBrush& pap)
setPaperSource(PaperSource)
setParagType(Q3StyleSheetItem::DisplayMode dm, Q3StyleSheetItem::ListStyle listStyle)
setParagraphBackgroundColor(int para, const QColor &bg)
setParameter(int value)
setParameters(const char *)
setParent(QObject *)
setParent(QWidget *parent)
setParent(QWidget *parent, Qt::WindowFlags f)
setParentItem(QGraphicsItem *parent)
setPassword(const QString &password)
setPassword(const QString& pass )
setPassword(const QString& password)
setPath(Format format, Scope scope, const QString &path)
setPath(const QPainterPath &path)
setPath(const QString &path)
setPath(const QString& path )
setPattern(const QByteArray &pattern)
setPattern(const QString &pattern)
setPatternSyntax(PatternSyntax syntax)
setPaused(bool paused)
setPeerAddress(const QHostAddress &address)
setPeerName(const QString &name)
setPeerPort(quint16 port)
setPen(QPen p)
setPen(Qt::PenStyle style)
setPen(const QColor &color)
setPen(const QPen &pen)
setPercentageVisible(bool)
setPermissions(Permissions permissionSpec)
setPermissions(const QString &filename, Permissions permissionSpec)
setPermissions(int p)
setPermissions(uint perms)
setPicture(const QPicture &)
setPicture(const QPicture &icon)
setPixel(const QPoint &pt, uint index_or_rgb)
setPixel(int x, int y, uint index_or_rgb)
setPixelSize(int)
setPixelSizeFloat(qreal)
setPixmap(QPixmap)
setPixmap(QPixmap, const QPoint& hotspot)
setPixmap(const QPixmap &)
setPixmap(const QPixmap &, Mode mode = Clipboard)
setPixmap(const QPixmap &icon)
setPixmap(const QPixmap &icon, bool recalc, bool redraw = true)
setPixmap(const QPixmap &p)
setPixmap(const QPixmap &pixmap)
setPixmap(const QString& abs_name, const QPixmap& pm)
setPixmap(int row, int col, const QPixmap & pix )
setPixmap(int row, int col, const QPixmap &pix)
setPixmap(int, const QPixmap &)
setPixmapFunction(const QString &pixmapFunction)
setPixmapRect(const QRect &r)
setPixmapSize(Size which, const QSize &size)
setPlainText(const QString &text)
setPlane(int plane)
setPluginManager(QDesignerPluginManager *pluginManager)
setPluginPath(const QString &path)
setPluginPath(const QStringList &pluginPaths)
setPoint(int index, const QPoint &p)
setPoint(int index, int x, int y)
setPointSize(int s)
setPointSize(int)
setPointSizeF(qreal)
setPoints(Q3PointArray)
setPoints(int nPoints, const int *points)
setPoints(int nPoints, int firstx, int firsty, ...)
setPoints(int x1, int y1, int x2, int y2)
setPolygon(const QPolygonF &polygon)
setPopup(QAbstractItemView *popup)
setPopupDelay(int delay)
setPopupMode(ToolButtonPopupMode mode)
setPort(int p)
setPort(int port )
setPort(int port)
setPort(quint16 port)
setPos(const QPointF &pos)
setPos(int x, int y)
setPos(qreal x, qreal y)
setPosAt(qreal step, const QPointF &pos)
setPosition(const QPointF &p)
setPosition(const QPointF &pos)
setPosition(int pos, MoveMode mode = MoveAnchor)
setPositionForIndex(const QPoint &position, const QModelIndex &index)
setPossibleActions(Qt::DropActions actions)
setPrecision(int precision)
setPreeditArea(int position, const QString &text)
setPrefix(const QString &prefix)
setPrefix(const QString& pre)
setPrefix(const QString&, const QString&)
setPreviewMode(PreviewMode m)
setPrimaryIndex(const QSqlIndex& idx)
setPrimaryKey(const QSqlIndex &key)
setPrintProgram(const QString &)
setPrintRange(PrintRange range)
setPrinter(QPrinter *, bool = false)
setPrinterName(const QString &)
setPrinterSelectionOption(const QString &)
setPriority(Priority priority)
setProcessChannelMode(ProcessChannelMode mode)
setProcessState(ProcessState state)
setProgress(int progress)
setProgress(int progress, int totalSteps)
setPromoted(bool b)
setProperty(PrintEnginePropertyKey key, const QVariant &value)
setProperty(QWidget * widget, const QVariant & value)
setProperty(const QString &name, const QVariant &value)
setProperty(const QString& name, void* value)
setProperty(const char *name, const QVariant &value)
setProperty(int index, const QVariant &value)
setProperty(int propertyId, const QVariant &value)
setProperty(int propertyId, const QVector<QTextLength> &lengths)
setPropertyEditor(QDesignerPropertyEditorInterface *propertyEditor)
setPropertyGroup(int index, const QString &group)
setPropertyValue(const QString &name, const QVariant &value, bool changed = true)
setProposedAction(Qt::DropAction action)
setProtocol(const QString& protocol )
setProtocolDetail(const QString &detail )
setProxy(const QNetworkProxy &networkProxy)
setProxy(const QString &host, int port, const QString &username = QString(), const QString &password = QString())
setProxy(const QString &host, quint16 port)
setProxyModel(const QModelIndex &source_index) const
setQuality(int quality)
setQuality(int)
setQuery(const QSqlQuery &query)
setQuery(const QString &query, const QSqlDatabase &db = QSqlDatabase())
setQuery(const QString& query)
setQuery(const QString& txt )
setQueryDelimiters(char valueDelimiter, char pairDelimiter)
setQueryItems(const QList<QPair<QString, QString> > &query)
setQuitOnLastWindowClosed(bool quit)
setRadioButtonExclusive(bool)
setRadius(qreal radius)
setRange(const QDate& min, const QDate& max)
setRange(const QTime& min, const QTime& max)
setRange(double bottom, double top, int decimals = 0)
setRange(double min, double max)
setRange(int bottom, int top)
setRange(int min, int max)
setRange(int minValue, int maxValue)
setRange(int minimum, int maximum)
setRangeSelected(const QTableWidgetSelectionRange &range, bool select)
setRawArg(int num, const QByteArray &arg )
setRawData(const char *d, uint len)
setRawMode(bool)
setRawName(const QString &)
setReadBufferSize(Q_ULONG )
setReadBufferSize(qint64 size)
setReadChannel(ProcessChannel channel)
setReadChannelMode(ProcessChannelMode mode)
setReadOnly(bool active)
setReadOnly(bool b)
setReadOnly(bool enable)
setReadOnly(bool enabled)
setReadOnly(bool r)
setReadOnly(bool readOnly)
setReadOnly(bool ro)
setReadOnly(bool)
setReadable(bool b)
setRealNumberNotation(RealNumberNotation notation)
setRealNumberPrecision(int precision)
setReason(Reason reason)
setReceiveBufferSize(uint )
setRecord(QSqlRecord* buf)
setRecord(QSqlRecord* record)
setRecord(int row, const QSqlRecord &record)
setRecordType(RecordType rr = A )
setRect()
setRect(const QRectF &rect)
setRect(int x, int y, int w, int h)
setRect(qreal x, qreal y, qreal w, qreal h)
setRects(const QRect *rect, int num)
setRed(int red)
setRedBufferSize(int size)
setRedF(qreal red)
setRedirected(const QPaintDevice *device, QPaintDevice *replacement, const QPoint& offset = QPoint())
setRef(const QString& txt )
setRegExp(const QRegExp& rx)
setRelation(int column, const QSqlRelation &relation)
setRenameEnabled(bool allow)
setRenameEnabled(int col, bool b)
setRenderHint(QPainter::RenderHint hint, bool enabled = true)
setRenderHint(RenderHint hint, bool on = true)
setRenderHints(QPainter::RenderHints hints)
setRenderHints(RenderHints hints, bool on = true)
setRepeatAction(SliderAction action, int thresholdTime = 500, int repeatTime = 50)
setReplaceable(bool)
setRequest(const QString &method, const QString &path, int majorVer = 1, int minorVer = 1)
setRequest(const QString& method, const QString& path, int majorVer = 1, int minorVer = 1 )
setRequiredStatus(RequiredStatus status)
setResizeAnchor(ViewportAnchor anchor)
setResizeEnabled(bool b)
setResizeEnabled(bool, int section = -1)
setResizeMode(QWidget *w, ResizeMode mode)
setResizeMode(ResizeMode am)
setResizeMode(ResizeMode m)
setResizeMode(ResizeMode mode)
setResizeMode(int logicalIndex, ResizeMode mode)
setResizePolicy(ResizePolicy )
setResolution(int)
setResolveSymlinks(bool enable)
setResolveSymlinks(bool enabled)
setRestartCommand(const QStringList&)
setRestartHint(RestartHint)
setResult(int r)
setRgb(QRgb rgb)
setRgb(int r, int g, int b, int a = 255)
setRgbF(qreal r, qreal g, qreal b, qreal a = 1.0)
setRgba(QRgb rgba)
setRgba(bool enable)
setRight(int pos)
setRight(qreal pos)
setRightJustification(bool)
setRootIndex(const QModelIndex &index)
setRootIsDecorated(bool show)
setRootIsDecorated(bool)
setRootModelIndex(const QModelIndex &index)
setRootObject(QAccessibleInterface *)
setRootObject(QObject*)
setRotationAt(qreal step, qreal angle)
setRow(int r)
setRow(uchar row)
setRowCount(int rows)
setRowHeight(int row, int h)
setRowHeight(int row, int height)
setRowHidden(int row, bool hide)
setRowHidden(int row, const QModelIndex &parent, bool hide)
setRowLabels(const QStringList &labels)
setRowMinimumHeight(int row, int minSize)
setRowMode(LayoutMode)
setRowMode(int)
setRowMovingEnabled(bool b)
setRowReadOnly(int row, bool ro)
setRowStretch(int row, int stretch)
setRowStretchable(int row, bool stretch)
setRubberBand(int position)
setSampleBuffers(bool enable)
setSamples(int numSamples)
setScaleAt(qreal step, qreal sx, qreal sy)
setScaledClipRect(const QRect &rect)
setScaledContents(bool)
setScaledSize(const QSize &size)
setScene(QGraphicsScene *scene)
setScenePos(const QPointF &pos)
setSceneRect(const QRectF &rect)
setSceneRect(qreal x, qreal y, qreal w, qreal h)
setScheme(const QString &scheme)
setScopeId(const QString &id)
setScreenPos(const QPoint &pos)
setScrollBarsEnabled(bool enable)
setSearchPaths(const QStringList &paths)
setSecond(int s)
setSectionHidden(int logicalIndex, bool hide)
setSectionSizeAndHeight(int section, int size)
setSegmentStyle(SegmentStyle)
setSelect(bool s)
setSelectable(bool enable)
setSelectable(bool s)
setSelectable(bool selectable)
setSelected(Q3IconViewItem *item, bool s, bool cb = false)
setSelected(Q3ListBoxItem *, bool)
setSelected(Q3ListViewItem *, bool)
setSelected(bool s)
setSelected(bool s, bool cb)
setSelected(bool select)
setSelected(bool selected)
setSelected(bool yes)
setSelected(bool)
setSelected(int, bool)
setSelectedAlpha(int)
setSelectedDate(const QDate &date)
setSelectedFilter(const QString&)
setSelectedFilter(int)
setSelectedSection(Section section)
setSelection(const QRect &rect, QItemSelectionModel::SelectionFlags command)
setSelection(const QRect&, QItemSelectionModel::SelectionFlags)
setSelection(const QString &)
setSelection(int parag_from, int index_from, int parag_to, int index_to, int selNum = 0)
setSelection(int, int)
setSelectionAnchor(Q3ListViewItem *)
setSelectionArea(const QPainterPath &path)
setSelectionAttributes(int selNum, const QColor &back, bool invertText)
setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior)
setSelectionMode(QAbstractItemView::SelectionMode mode)
setSelectionMode(SelectionMode m)
setSelectionMode(SelectionMode mode)
setSelectionMode(SelectionMode)
setSelectionModel(QItemSelectionModel *selectionModel)
setSelfNesting(bool)
setSendBufferSize(uint )
setSeparator(bool b)
setSeparator(const QString& s)
setSeparatorsCollapsible(bool collapse)
setSequence(Q3CanvasPixmapArray* seq)
setShape(Qt::CursorShape newShape)
setShape(Shape shape)
setShapeMode(ShapeMode mode)
setSharedRenderer(QSvgRenderer *renderer)
setShearAt(qreal step, qreal sh, qreal sv)
setShortcut(const QKeySequence &key)
setShortcut(const QKeySequence &shortcut)
setShortcutAutoRepeat(int id, bool enable = true)
setShortcutContext(Qt::ShortcutContext context)
setShortcutEnabled(int id, bool enable = true)
setShortcuts(QKeySequence::StandardKey)
setShortcuts(const QList<QKeySequence> &shortcuts)
setShowGrid(bool b)
setShowGrid(bool show)
setShowHiddenFiles(bool s)
setShowSortIndicator(bool show)
setShowToolTips(bool b)
setSignalValue(int)
setSignature(const QString &signature)
setSingleShot(bool singleShot)
setSingleStep(double val)
setSingleStep(int val)
setSingleStep(int)
setSize(Q3SqlCursor* sql )
setSize(const QSize &s)
setSize(const QSizeF &s)
setSize(int w, int h)
setSize(qint64 size)
setSizeAdjustPolicy(SizeAdjustPolicy policy)
setSizeConstraint(SizeConstraint)
setSizeGripEnabled(bool)
setSizeHint(const QSize &sizeHint)
setSizeIncrement(const QSize &)
setSizeIncrement(int w, int h)
setSizeLimit(int )
setSizePolicy(QSizePolicy)
setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical)
setSizes()
setSizes(const QList<int> &list)
setSliderDown(bool)
setSliderPosition(int)
setSmallDecimalPoint(bool)
setSocket(QTcpSocket *socket)
setSocket(int )
setSocket(int socket )
setSocket(int socket, Type type )
setSocketDescriptor(int socketDescriptor)
setSocketDescriptor(int socketDescriptor, SocketState state = ConnectedState, OpenMode openMode = ReadWrite)
setSocketDevice(Q3SocketDevice * )
setSocketError(SocketError socketError)
setSocketIntern(int socket )
setSocketState(SocketState state)
setSort(const QSqlIndex& sort )
setSort(const QSqlIndex& sort)
setSort(const QStringList& sort )
setSort(const QStringList& sort)
setSort(int column, Qt::SortOrder order)
setSortCaseSensitivity(Qt::CaseSensitivity cs)
setSortColumn(int column)
setSortIndicator(int logicalIndex, Qt::SortOrder order)
setSortIndicator(int section, bool ascending = true) // obsolete, do not use
setSortIndicatorShown(bool show)
setSortOrder(Qt::SortOrder order)
setSortRole(int role)
setSorting(QDir::SortFlags sort)
setSorting(SortFlags sort)
setSorting(bool b)
setSorting(bool sort, bool ascending = true)
setSorting(int column, bool ascending = true)
setSortingEnabled(bool enable)
setSource(QWidget *source)
setSource(const QString& name)
setSource(const QUrl &name)
setSourceModel(QAbstractItemModel *sourceModel)
setSourceModel(const QModelIndex &proxy_index) const
setSpacing(int sp)
setSpacing(int space)
setSpacing(int)
setSpan(int row, int column, int rowSpan, int columnSpan)
setSpan(int rs, int cs)
setSpanAngle(int angle)
setSpecialValueText(const QString &txt)
setSpeed(int percentSpeed)
setSpread(Spread spread)
setSqlCursor(Q3SqlCursor* cursor = 0, bool autoPopulate = false, bool autoDelete = false )
setSqlCursor(Q3SqlCursor* cursor, bool autoDelete = false)
setSqlType(int type)
setStack(QUndoStack *stack)
setStackSize(uint stackSize)
setStandardButtons(StandardButtons buttons)
setStandardColor(int, QRgb)
setStandardErrorFile(const QString &fileName, OpenMode mode = Truncate)
setStandardInputFile(const QString &fileName)
setStandardOutputFile(const QString &fileName, OpenMode mode = Truncate)
setStandardOutputProcess(QProcess *destination)
setStart(const QPointF &start)
setStartAngle(int angle)
setStartDragDistance(int l)
setStartDragTime(int ms)
setStartFrame(int frame)
setStartQueryTimer()
setState(Q3NetworkProtocol::State state )
setState(State state)
setState(ToggleState s)
setState(ToggleState s, bool update, bool store)
setState(int )
setStaticBackground(bool y )
setStatus(Status status)
setStatus(int)
setStatusBar(QStatusBar *)
setStatusBar(QStatusBar *statusbar)
setStatusLine(int code, const QString &text = QString(), int majorVer = 1, int minorVer = 1)
setStatusLine(int code, const QString& text = QString(), int majorVer = 1, int minorVer = 1 )
setStatusTip(const QString &)
setStatusTip(const QString &statusTip)
setStatusTip(const QString&)
setStatusTip(int column, const QString &statusTip)
setStencil(bool enable)
setStencilBufferSize(int size)
setStep(qreal x)
setSteps(int line, int page)
setStereo(bool enable)
setStops(const QGradientStops &stops)
setStoredState(ToggleState newState, Q3CheckListItem *key)
setStretch(int)
setStretchEnabled(bool b, int section)
setStretchFactor(QLayout *l, int stretch)
setStretchFactor(QWidget *w, int stretch)
setStretchFactor(QWidget*, int stretch)
setStretchFactor(int index, int stretch)
setStretchLastSection(bool stretch)
setStretchableWidget(QWidget *)
setStrikeOut(bool)
setString(QString *string, QIODevice::OpenMode openMode = QIODevice::ReadWrite)
setStringList(const QStringList &l)
setStringList(const QStringList &strings)
setStyle(QStyle *)
setStyle(QStyle*)
setStyle(Qt::BrushStyle)
setStyle(Qt::PenStyle)
setStyle(Style style)
setStyle(const QString&)
setStyleHint(StyleHint, StyleStrategy = PreferDefault)
setStyleSheet(Q3StyleSheet* styleSheet)
setStyleSheet(const QString& sheet)
setStyleSheet(const QString& styleSheet)
setStyleStrategy(StyleStrategy s)
setSubmitPolicy(SubmitPolicy policy)
setSubtype(const QString &)
setSuffix(const QString &suffix)
setSupportedDragActions(Qt::DropActions)
setSwapInterval(int interval)
setSymLink(bool b)
setSystemClip(const QRegion &baseClip)
setSystemIniPath(const QString &dir) // ### remove in 5.0(use setPath() instead)
setSystemRect(const QRect &rect)
setTabArray(QList<qreal> tabStops)
setTabBar(QTabBar *)
setTabBar(QTabBar*)
setTabChangesFocus(bool b)
setTabData(int index, const QVariant &data)
setTabEnabled(QWidget *, bool)
setTabEnabled(const char*, bool) // compatibility
setTabEnabled(int index, bool)
setTabIcon(int index, const QIcon & icon)
setTabIcon(int index, const QIcon &icon)
setTabKeyNavigation(bool enable)
setTabOrder(QWidget *, QWidget *)
setTabOrder(const QList<QWidget*> &tabOrder)
setTabPosition(TabPosition)
setTabShape(TabShape s)
setTabStop(qreal tabStop)
setTabStopWidth(int ts)
setTabStopWidth(int width)
setTabText(int index, const QString &)
setTabText(int index, const QString &text)
setTabTextColor(int index, const QColor &color)
setTabToolTip(int index, const QString & tip)
setTabToolTip(int index, const QString &tip)
setTabWhatsThis(int index, const QString &text)
setTable(const QString &tableName)
setTableCellColumnSpan(int tableCellColumnSpan)
setTableCellRowSpan(int tableCellRowSpan)
setTagName(const QString& name) // Qt extension
setTearOffEnabled(bool)
setTerminationEnabled(bool enabled = true)
setText(Text t, int child, const QString &text)
setText(const QString &)
setText(const QString &, Mode mode = Clipboard)
setText(const QString &key, const QString &text)
setText(const QString &key, const QString &value)
setText(const QString &t)
setText(const QString &text)
setText(const QString &text, bool recalc, bool redraw = true)
setText(const QString &txt, const QString &context)
setText(const QString& abs_name, const QString& text)
setText(const QString& string)
setText(const QString&)
setText(const char* key, const char* lang, const QString&)
setText(int column, const QString &text)
setText(int row, int col, const QString &text)
setText(int, const QString &)
setTextAlignment(Qt::Alignment textAlignment)
setTextColor(const QColor &c)
setTextCursor(const QTextCursor &cursor)
setTextDirection(QProgressBar::Direction textDirection)
setTextElideMode(Qt::TextElideMode mode)
setTextFlags(int)
setTextFormat(Qt::TextFormat f)
setTextFormat(Qt::TextFormat format)
setTextFormat(Qt::TextFormat)
setTextInteractionFlags(Qt::TextInteractionFlags flags)
setTextModeEnabled(bool enabled)
setTextOption(const QTextOption &option)
setTextRect(const QRect &r)
setTextVisible(bool visible)
setTextWidth(qreal width)
setTexture(const QPixmap &pixmap)
setTextureCacheLimit(int size)
setTextureImage(const QImage &image)
setTickInterval(int ti)
setTickPosition(TickPosition position)
setTile(int x, int y, int tilenum)
setTiles(QPixmap tiles, int h, int v, int tilewidth, int tileheight)
setTime(const QTime &time)
setTime(const QTime& time)
setTimeLine(QTimeLine *timeLine)
setTimeRange(const QTime &min, const QTime &max)
setTimeSpec(Qt::TimeSpec spec)
setTime_t(uint secsSince1Jan1970UTC)
setTitle(QWidget *, const QString & )
setTitle(const QString &title)
setTitleFont(const QFont & )
setToggleAction(bool toggle)
setToggleAction(bool)
setToolBarsMovable(bool)
setToolButtonStyle(Qt::ToolButtonStyle style)
setToolButtonStyle(Qt::ToolButtonStyle toolButtonStyle)
setToolTip(const QString &)
setToolTip(const QString &tip)
setToolTip(const QString &toolTip)
setToolTip(const QString&)
setToolTip(int column, const QString &toolTip)
setTop(double)
setTop(int pos)
setTop(int)
setTop(qreal pos)
setTopItem(int index)
setTopLeft(const QPoint &p)
setTopLeft(const QPointF &p)
setTopLevel(QWidget *topLevel)
setTopMargin(int m)
setTopRight(const QPoint &p)
setTopRight(const QPointF &p)
setTotalSteps(int totalSteps)
setTracking(bool enable)
setTransferMode(TransferMode mode)
setTransformationAnchor(ViewportAnchor anchor)
setTransformationMode(Qt::TransformationMode mode)
setTranslationAt(qreal step, qreal dx, qreal dy)
setTreeStepSize(int)
setTrimmed(const QString& name, bool trim)
setTristate(bool tristate)
setTristate(bool y = true)
setTristate(bool)
setTrueText(const QString& trueText )
setType(ErrorType type)
setType(QNetworkProxy::ProxyType type)
setType(QVariant::Type type)
setUnchanged(const QRect& area)
setUnderline(bool b)
setUnderline(bool)
setUnderlineStyle(UnderlineStyle style)
setUndoDepth(int d)
setUndoRedoEnabled(bool b)
setUndoRedoEnabled(bool enable)
setUnicode(const QChar *unicode, int size)
setUnicodeUris(const QStringList & uuris)
setUniformItemSizes(bool enable)
setUniformRowHeights(bool uniform)
setUpEnabled(bool on)
setUpLayout()
setUpLayout(bool = false)
setUpLineEdit()
setUpListBox()
setUpdateInterval(int interval)
setUpdatePeriod(int ms)
setUpdatesEnabled(bool enable)
setUris(const QList<QByteArray> &uris)
setUrl(Q3UrlOperator *u )
setUrl(const Q3UrlOperator &url)
setUrl(const QString &url)
setUrl(const QString &url, ParsingMode mode)
setUrlHandler(const QString &scheme, QObject *receiver, const char *method)
setUrls(const QList<QUrl> &urls)
setUseDesignMetrics(bool b)
setUseHighlightColors(bool)
setUser(const QString &userName)
setUser(const QString &username, const QString &password = QString())
setUser(const QString& user )
setUserData(QTextBlockUserData *data)
setUserData(uint id, QObjectUserData* data)
setUserInfo(const QString &userInfo)
setUserIniPath(const QString &dir) // ### remove in 5.0(use setPath() instead)
setUserName(const QString &userName)
setUserName(const QString& name)
setUserState(int state)
setUsesBigPixmaps(bool)
setUsesDropDown(bool enable)
setUsesScrollButtons(bool useButtons)
setUsesTextLabel(bool)
setUtf16(const ushort *utf16, int size)
setVBarGeometry(QScrollBar& vbar, int x, int y, int w, int h)
setVScrollBarMode(ScrollBarMode )
setValid(bool )
setValid(bool valid)
setValid(bool)
setValidator(const QValidator * )
setValidator(const QValidator *)
setValidator(const QValidator *v)
setValue(const QString &key, const QString &value)
setValue(const QString &key, const QVariant &value)
setValue(const QString &value)
setValue(const QString& key, const QString& value )
setValue(const QString& name, const QVariant& val)
setValue(const QString&)
setValue(const QVariant &value)
setValue(const QVariant& value)
setValue(const T &value)
setValue(double val)
setValue(int i, const QVariant &val)
setValue(int i, const QVariant& val)
setValue(int progress)
setValue(int val)
setValue(int value)
setValue(int)
setValues(const QList<QPair<QString, QString> > &values)
setVariableHeight(bool)
setVariableWidth(bool)
setVariant(const QVariant &variant)
setVelocity(double vx, double vy)
setVersion(int)
setVerticalAlignment(Q3TextEdit::VerticalAlignment a)
setVerticalAlignment(VerticalAlignment valign)
setVerticalHeader(QHeaderView *header)
setVerticalHeaderFormat(VerticalHeaderFormat format)
setVerticalHeaderItem(int row, QStandardItem *item)
setVerticalHeaderItem(int row, QTableWidgetItem *item)
setVerticalHeaderLabels(const QStringList &labels)
setVerticalScrollBar(QScrollBar *scrollbar)
setVerticalScrollBarPolicy(Qt::ScrollBarPolicy)
setVerticalScrollMode(ScrollMode mode)
setVerticalStepsPerItem(int steps)
setVerticallyStretchable(bool b)
setView(QAbstractItemView *itemView)
setViewBox(const QRect &viewbox)
setViewBox(const QRectF &viewbox)
setViewMode(ViewMode m)
setViewMode(ViewMode mode)
setViewTransformEnabled(bool enable)
setViewport(QWidget *widget)
setViewport(const QRect &viewport)
setViewport(int x, int y, int w, int h)
setViewportMargins(int left, int top, int right, int bottom)
setVisible(bool b)
setVisible(bool visible)
setVisible(bool yes)
setVisible(bool)
setVisible(int index, bool b)
setWeekdayTextFormat(Qt::DayOfWeek dayOfWeek, const QTextCharFormat &format)
setWeight(int)
setWhatsThis(const QString &)
setWhatsThis(const QString &text)
setWhatsThis(const QString &what)
setWhatsThis(const QString &whatsThis)
setWhatsThis(const QString&)
setWhatsThis(int column, const QString &whatsThis)
setWhatsThis(int id, const QString& )
setWheelScrollLines(int)
setWhiteSpaceMode(WhiteSpaceMode m)
setWidget(QWidget *w)
setWidget(QWidget *widget)
setWidgetBox(QDesignerWidgetBoxInterface *widgetBox)
setWidgetDataBase(QDesignerWidgetDataBaseInterface *widgetDataBase)
setWidgetFactory(QDesignerWidgetFactoryInterface *widgetFactory)
setWidgetProperty(QWidget *widget, const QString &name, const QVariant &value)
setWidgetResizable(bool resizable)
setWidth(QPainter*, int)
setWidth(int w)
setWidth(int width)
setWidth(int)
setWidth(qreal w)
setWidth(qreal width)
setWidthF(qreal width)
setWinPageSize(int winPageSize)
setWinding(bool)
setWindow(const QRect &window)
setWindow(int x, int y, int w, int h)
setWindowCreated(bool on)
setWindowFlags(Qt::WindowFlags type)
setWindowIcon(const QIcon &icon)
setWindowIconText(const QString &)
setWindowModality(Qt::WindowModality windowModality)
setWindowModified(bool)
setWindowOpacity(qreal level)
setWindowRole(const QString &)
setWindowState(Qt::WindowStates state)
setWindowSurface(QWindowSurface *surface)
setWindowTitle(const QString &)
setWindowTitle(const QString &title)
setWordWrap(Q3TextEdit::WordWrap mode)
setWordWrap(bool b)
setWordWrap(bool on)
setWordWrapIconText(bool b)
setWordWrapMode(QTextOption::WrapMode policy)
setWorkingDirectory(const QDir &dir)
setWorkingDirectory(const QDir &directory)
setWorkingDirectory(const QDir& dir )
setWorkingDirectory(const QString &dir)
setWorkingDirectory(const QString &workingDirectory)
setWorldMatrix(const QMatrix &)
setWorldMatrix(const QMatrix &matrix, bool combine = false)
setWorldMatrixEnabled(bool enabled)
setWrapColumnOrWidth(int)
setWrapPolicy(Q3TextEdit::WrapPolicy policy)
setWrapping(bool enable)
setWrapping(bool on)
setWrapping(bool w)
setWritable(bool b)
setWritingSystem(QFontDatabase::WritingSystem)
setWroteStdinConnected(bool value )
setX(int x)
setX(qreal x)
setX11Data(const QX11InfoData *)
setY(int y)
setY(qreal y)
setYMD(int y, int m, int d)
setYear(int year)
setZValue(qreal z)
setf(int bits )
setf(int bits, int mask )
setup()
setup(QWidget *parent = 0)
setupBrush(DomBrush *brush)
setupChildProcess()
setupColorGroup(QPalette &palette, QPalette::ColorGroup colorGroup, DomColorGroup *group)
setupViewport(QWidget *viewport)
setupViewport(QWidget *widget)
shape() const
shapeMode() const
shear(qreal sh, qreal sv)
shortDayName(int weekday)
shortMonthName(int month)
shortcut() const
shortcutContext() const
shortcutKey(const QString & )
shortcuts() const
show()
showColumn(int col )
showColumn(int col)
showColumn(int column)
showCustom(bool=true)
showDockMenu(const QPoint &globalPos)
showDropIndicator() const
showEvent(QShowEvent *)
showEvent(QShowEvent *e)
showEvent(QShowEvent *event)
showExtension(bool)
showFullScreen()
showGrid() const
showHiddenFiles() const
showMaximized()
showMenu()
showMessage(const QString &message)
showMessage(const QString &message, int alignment = Qt::AlignLeft, const QColor &color = Qt::black)
showMessage(const QString &text, int timeout = 0)
showMessage(const QString &title, const QString &msg, MessageIcon icon = Information, int msecs = 10000)
showMinimized()
showNextMonth()
showNextYear()
showNormal()
showPage(QWidget * )
showPage(QWidget *)
showPage(const QString &page )
showPopup()
showPreviousMonth()
showPreviousYear()
showRow(int row)
showSection(int logicalIndex)
showSelectedDate()
showSortIndicator() const
showStatusText(QWidget *widget=0)
showStatusText(const QString&)
showText(const QPoint &pos, const QString &text, QWidget *w = 0)
showText(const QPoint &pos, const QString &text, QWidget *w, const QRect &rect)
showToday()
showToolTips() const
showbase(QTextStream &s)
sibling(int row, int column) const
signal(const QVariant&)
signalValue() const
signals
signature() const
signature(int index) const = 0
signatureToType(const char *signature)
simplified() const
simplify()
simplifySelection(QList<QWidget*> *widgets) const = 0
simulate(QWidget *w)
singleShot(int msec, QObject *receiver, const char *member)
singleStep() const
size()
size() const
size(int flags, const QString& str, int tabstops=0, int *tabarray=0) const
sizeAdjustPolicy() const
sizeChange(int section, int oldSize, int newSize)
sizeConstraint() const
sizeFromContents(ContentsType ct, const QStyleOption *opt, const QSize &contentsSize, const QWidget *w = 0) const = 0
sizeFromContents(ContentsType ct, const QStyleOption *opt, const QSize &contentsSize, const QWidget *widget = 0) const
sizeFromContents(ContentsType ct, const QStyleOption *option, const QSize &contentsSize, const QWidget *widget = 0) const
sizeFromContents(ContentsType type, const QStyleOption *option, const QSize &size, const QWidget *widget) const
sizeHint() const
sizeHint() const = 0
sizeHint(const QStyleOptionViewItem &option, const QModelIndex &index) const
sizeHint(const QStyleOptionViewItem &option, const QModelIndex &index) const = 0
sizeHintForColumn(int column) const
sizeHintForIndex(const QModelIndex &index) const
sizeHintForRow(int row) const
sizeIncrement() const
sizeLimit() const
sizePolicy() const
size_type
sizes() const
skip()
skipRawData(int len)
skipWhiteSpace()
skippedEntity(const QString& name)
sleep(unsigned long)
sliderChange(SliderChange change)
sliderMoved(int position)
sliderPosition() const
sliderPositionFromValue(int min, int max, int val, int space, bool upsideDown = false)
sliderPressed()
sliderReleased()
sliderValueFromPosition(int min, int max, int pos, int space, bool upsideDown = false)
slotBytesWritten(int )
slotClosed()
slotConnected()
slotError(int )
slotItemChanged(Q3NetworkOperation *op )
slotPlaceChanged()
slotReadyRead()
slotUpdate()
slots
smallDecimalPoint() const
smoothSizes(const QString &family, const QString &style)
sn_read(bool force=false )
sn_write()
socket() const
socketConnected()
socketConnectionClosed()
socketDescriptor() const
socketDevice()
socketError()
socketRead(int fd )
socketType() const
socketWrite(int fd )
sort()
sort() // sort all items
sort() // sort vector
sort() const
sort(bool ascending = true)
sort(int column, Qt::SortOrder order = Qt::AscendingOrder)
sort(int column, Qt::SortOrder order)
sort(uint sz)
sortAscending(int col )
sortByColumn(int column)
sortByColumn(int column, Qt::SortOrder order)
sortCaseSensitivity() const
sortChildItems(int, bool)
sortChildren(int column, Qt::SortOrder order = Qt::AscendingOrder)
sortChildren(int column, Qt::SortOrder order, bool climb)
sortColumn() const
sortColumn(int col, bool ascending = true, bool wholeRows = false )
sortColumn(int col, bool ascending = true, bool wholeRows = false)
sortDescending(int col )
sortDirection() const
sortIndicatorOrder() const
sortIndicatorSection() const
sortItems(Qt::SortOrder order = Qt::AscendingOrder)
sortItems(int column, Qt::SortOrder order = Qt::AscendingOrder)
sortItems(int column, Qt::SortOrder order)
sortOrder() const
sortRole() const
sorting() const
source()
source() const
source() const = 0
sourceChanged(const QString&)
sourceChanged(const QUrl &)
sourceModel() const
spacePressed(Q3ListViewItem *)
spacerItem()
spacing() const
span(const QModelIndex &index) const
spanAngle() const
specialValueText() const
specified() const
speed() const
split(char sep) const
split(const QChar &sep, const QString &str, bool allowEmptyEntries = false)
split(const QItemSelectionRange &range, const QItemSelectionRange &other, QItemSelection *result)
split(const QRegExp &sep, const QString &str, bool allowEmptyEntries = false)
split(const QString &sep, const QString &str, bool allowEmptyEntries = false)
splitCell(int row, int col, int numRows, int numCols)
splitDockWidget(QDockWidget *after, QDockWidget *dockwidget, Qt::Orientation orientation)
splitName(const QString&, QString&, QString&) const
splitPath(const QString &path) const
splitText(int offset)
splitter() const
splitterMoved(int pos, int index)
sprintf(const char *format, ...)
sqlCursor() const
sqlStatement(StatementType type, const QString &tableName, const QSqlRecord &rec, bool preparedStatement) const
squeeze()
stack() const
stackSize() const
stackUnder(QWidget*)
stacks() const
standardButton(QAbstractButton *button) const
standardButtons() const
standardFormat(StandardFormat s) const
standardIcon(Icon icon)
standardIcon(Icon icon, Qt::GUIStyle)
standardIcon(StandardPixmap standardIcon, const QStyleOption *option = 0, const QWidget *widget = 0) const
standardIconImplementation(StandardPixmap standardIcon, const QStyleOption *opt = 0, const QWidget *widget = 0) const
standardIconImplementation(StandardPixmap standardIcon, const QStyleOption *option, const QWidget *widget = 0) const
standardPalette() const
standardPixmap(StandardPixmap sp, const QStyleOption *opt = 0, const QWidget *widget = 0) const
standardPixmap(StandardPixmap standardIcon, const QStyleOption *option, const QWidget *widget = 0) const
standardPixmap(StandardPixmap standardPixmap, const QStyleOption *opt = 0, const QWidget *widget = 0) const = 0
standardPixmap(StandardPixmap standardPixmap, const QStyleOption *opt, const QWidget *widget = 0) const
standardSizes()
start()
start() const
start(Priority = InheritPriority)
start(Q3NetworkOperation *res )
start(QStringList *env=0 )
start(Qt::DropActions supportedActions = Qt::CopyAction)
start(const QString &program, OpenMode mode = ReadWrite)
start(const QString &program, const QStringList &arguments, OpenMode mode = ReadWrite)
start(int msec)
start(int msec, QObject *obj)
start(int msec, bool sshot)
startAngle() const
startAutoScroll()
startCDAT()
startDTD(const QString& name, const QString& publicId, const QString& systemId)
startDetached(const QString &program)
startDetached(const QString &program, const QStringList &arguments)
startDocument()
startDrag()
startDrag(Qt::DropActions supportedActions)
startDragAutoScroll()
startDragDistance()
startDragTime()
startElement(const QString& namespaceURI, const QString& localName, const QString& qName, const QXmlAttributes& atts)
startEntity(const QString& name)
startFrame() const
startNextCommand()
startNextRequest()
startOperation(Q3NetworkOperation *op )
startOps()
startPrefixMapping(const QString& prefix, const QString& uri)
startQuery()
startRectDraw(const QPoint &so, bool drawRect)
startRename()
startRename(int col)
startService(const QString &name)
startTimer(int interval)
started()
startedNextCopy(const Q3PtrList<Q3NetworkOperation> &lst )
startingUp()
startsWith(char c) const
startsWith(const QByteArray &a) const
startsWith(const QChar &c, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
startsWith(const QLatin1String &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
startsWith(const QString &s, Qt::CaseSensitivity cs = Qt::CaseSensitive) const
startsWith(const char *c) const
state() const
state(int child) const
state(int child) const = 0
stateChange(ToggleState s)
stateChange(bool)
stateChanged(QAbstractSocket::SocketState)
stateChanged(QMovie::MovieState state)
stateChanged(QProcess::ProcessState state)
stateChanged(QTimeLine::State newState)
stateChanged(int )
stateChanged(int)
staticInstances()
staticInterfaceName()
statistics() const
status() const
statusBar() const
statusCode() const
statusTip() const
stencil() const
stencilBufferSize() const
stepBy(int steps)
stepChange()
stepDown()
stepDownPressed()
stepEnabled() const
stepUp()
stepUpPressed()
stereo() const
stop()
stopAutoScroll()
stopCopy()
stopDragAutoScroll()
stops() const
store(const char *d, uint len)
storedState(Q3CheckListItem *key) const
stretch() const
stretchLastSection() const
stretchSectionCount() const
strikeOut() const
strikeOutPos() const
string() const
stringList() const
stringProperty(int propertyId) const
stringToKey(const QString & )
strokePath(const QPainterPath &path, const QPen &pen)
style()
style() const
styleChange(QStyle & )
styleChange(QStyle &)
styleChange(QStyle& )
styleChange(QStyle&)
styleChange(QStyle&) // compat
styleHint() const
styleHint(StyleHint hint, const QStyleOption *opt = 0, const QWidget *widget = 0, QStyleHintReturn *returnData = 0) const
styleHint(StyleHint hint, const QStyleOption *option = 0, const QWidget *widget = 0, QStyleHintReturn *returnData = 0) const
styleHint(StyleHint sh, const QStyleOption *opt = 0, const QWidget *w = 0, QStyleHintReturn *shret = 0) const
styleHint(StyleHint stylehint, const QStyleOption *opt = 0, const QWidget *widget = 0, QStyleHintReturn* returnData = 0) const = 0
styleSheet()
styleSheet() const
styleStrategy() const
styleString(const QFont &font)
styleString(const QFontInfo &fontInfo)
styles(const QString &family) const
subControlRect(ComplexControl cc, const QStyleOptionComplex *opt, SubControl sc, const QWidget *w = 0) const
subControlRect(ComplexControl cc, const QStyleOptionComplex *opt, SubControl sc, const QWidget *widget = 0) const
subControlRect(ComplexControl cc, const QStyleOptionComplex *opt, SubControl sc, const QWidget *widget = 0) const = 0
subControlRect(ComplexControl cc, const QStyleOptionComplex *opt, SubControl sc, const QWidget *widget) const
subControlRect(ComplexControl cc, const QStyleOptionComplex *option, SubControl sc, const QWidget *widget = 0) const
subElementRect(SubElement element, const QStyleOption *option, const QWidget *widget) const
subElementRect(SubElement r, const QStyleOption *opt, const QWidget *widget = 0) const
subElementRect(SubElement r, const QStyleOption *option, const QWidget *widget = 0) const
subElementRect(SubElement subElement, const QStyleOption *option, const QWidget *widget = 0) const = 0
submit()
submitAll()
submitPolicy() const
substitute(const QString &)
substitutes(const QString &)
substitutions()
substringData(unsigned long offset, unsigned long count)
subtract(const QRegion &r) const
subtract(const QSet<T> &other)
subtractLine()
subtractPage()
suffix() const
superClass() const
superClassName() const
supportedDragActions() const
supportedDropActions() const
supportedFormats()
supportedImageFormats()
supportedOperations() const
supportedResolutions() const
supportsAnimation() const
supportsExtension(Extension extension) const
supportsFindBuffer() const
supportsMessages()
supportsMode(Mode mode) const
supportsOption(ImageOption option) const
supportsOption(QImageIOHandler::ImageOption option) const
supportsSelection() const
swap(int i, int j)
swapBuffers()
swapBuffers() const
swapCells(int row1, int col1, int row2, int col2)
swapColumns(int col1, int col2, bool swapHeader = false)
swapColumns(int col1, int col2, bool swapHeaders = false )
swapInterval() const
swapRect(QRect &r, Qt::Orientation o, const QPoint &offset, Q3DockArea *area)
swapRows(int row1, int row2, bool swapHeader = false)
swapSections(int first, int second)
sync()
syncX()
syntaxHighlighter() const
system()
systemBitOrder()
systemBus()
systemClip() const
systemEnvironment()
systemId() const
systemRect() const
t()
tabArray() const
tabBar() const
tabChangesFocus() const
tabData(int index) const
tabIcon(int index) const
tabInserted(int index)
tabKeyNavigation() const
tabLabel(QWidget *)
tabLayoutChange()
tabOrder() const = 0
tabPosition() const
tabRect(int index) const
tabRemoved(int index)
tabShape() const
tabSizeHint(int index) const
tabStopWidth() const
tabText(int index) const
tabTextColor(int index) const
tabToolTip(int index) const
tabWhatsThis(int index) const
tabifyDockWidget(QDockWidget *first, QDockWidget *second)
tableName() const
tableSize() const
tables(QSql::TableType tableType) const
tables(QSql::TableType type = QSql::Tables) const
tables(QSql::TableType) const
tabletEvent(QTabletEvent *)
tag() const
tagName() const
take() // take out current item
take(const Key &key)
take(uint index ) // take out item
takeAt(int i)
takeAt(int index)
takeAt(int)
takeAt(uint index ) // take out item at i'th pos
takeChild(int index)
takeChild(int row, int column = 0)
takeChildren()
takeColumn(int column)
takeCurrent()
takeDefaultFactory()
takeFirst()
takeFirst() // take out first item
takeHorizontalHeaderItem(int column)
takeItem(Q3IconViewItem *item)
takeItem(Q3ListViewItem *)
takeItem(Q3TableItem * i )
takeItem(Q3TableItem *i)
takeItem(const Q3ListBoxItem *)
takeItem(int row)
takeItem(int row, int column = 0)
takeItem(int row, int column)
takeLast()
takeLast() // take out last item
takeNode(Q3LNode * ) // take out node
takeRow(int row)
takeTopLevelItem(int index)
takeVerticalHeaderItem(int row)
takeWidget()
take_ascii(const char *key )
take_int(long key )
take_other(const char *key)
take_ptr(void *key )
take_string(const QString &key )
take_string(const QString &key)
target()
target() const
targetChanged(QWidget *newTarget)
taskActions() const = 0
tempPath()
tempText() const
terminate()
terminated()
testAttribute(Qt::ApplicationAttribute attribute)
testAttribute(Qt::WidgetAttribute) const
testAttribute_helper(Qt::WidgetAttribute) const
testBit(int i) const
testDirty(DirtyFlags df)
testObject()
testOption(QGL::FormatOptions opt) const
testPair(Q3ListViewItemIterator::IteratorFlag, Q3ListViewItemIterator::IteratorFlag, bool) const
text() const
text(Mode mode = Clipboard) const
text(QString& subtype, Mode mode = Clipboard) const
text(Text t, int child) const
text(Text t, int child) const = 0
text(const QImageTextKeyLang&) const
text(const QPoint &)
text(const QString &key = QString()) const
text(const QString &key) const
text(const char* key, const char* lang=0) const
text(int idx) const
text(int index ) const
text(int index) const
text(int para) const
text(int row, int col ) const
text(int row, int col) const
text(int) const
textChanged()
textChanged(const QString &)
textColor() const
textCursor() const
textDirection()
textDirection() const
textEdited(const QString &)
textElideMode() const
textFormat() const
textFromDateTime(const QDateTime &dt) const
textFromValue(double val) const
textFromValue(int val) const
textInteractionFlags() const
textKeys() const
textLanguages() const
textLength() const
textLine(int line) const
textList() const
textOption() const
textPosition() const
textRect(bool relative = true) const
textRectangle(QPainter *painter, const QRect &rect, const QFont &font, const QString &text) const
textStart() const
textWidth() const
texts() const
texture() const
textureCacheLimit()
textureImage() const
thread() const
tickInterval() const
tickPosition() const
tile()
time() const
timeChanged(const QTime &date)
timeFormat(FormatType format = LongFormat) const
timeLine() const
timeSpec() const
timeout()
timerDone()
timerDoneEx()
timerEvent(QTimerEvent * )
timerEvent(QTimerEvent *)
timerEvent(QTimerEvent *e)
timerEvent(QTimerEvent *event)
title() const
title(QWidget * ) const
titleFont() const
toAce(const QString &)
toAscii() const
toAttr() const
toBase64() const
toBitArray() const
toBlockFormat() const
toBool() const
toBool(const QString &str)
toByteArray() const
toByteArray(int = 1) const
toCDATASection() const
toChar() const
toCharFormat() const
toCharacterData() const
toCmyk() const
toComment() const
toDate() const
toDateTime() const
toDocument() const
toDocumentFragment() const
toDocumentType() const
toDouble(bool *ok = 0) const
toDouble(bool *ok=0) const
toDouble(const QString &s, bool *ok = 0) const
toElement() const
toEncoded(FormattingOptions options = None) const
toEntity() const
toEntityReference() const
toFillPolygon(const QMatrix &matrix = QMatrix()) const
toFillPolygons(const QMatrix &matrix = QMatrix()) const
toFirst()
toFirst() // move to first item
toFloat(bool *ok = 0) const
toFloat(bool *ok=0) const
toFloat(const QString &s, bool *ok = 0) const
toFrameFormat() const
toHsv() const
toHtml() const
toHtml(const QByteArray &encoding = QByteArray()) const
toHtml(const QByteArray &encoding) const
toIPv4Address() const
toIPv6Address() const
toImage() const
toImageFormat() const
toInAddrArpaDomain(const QHostAddress &address )
toInt(bool *ok = 0) const
toInt(bool *ok = 0, int base = 10) const
toInt(bool *ok=0) const
toInt(bool *ok=0, int base=10) const
toInt(const QString &s, bool *ok = 0, int base = 0) const
toLast()
toLast() // move to last item
toLatin1() const
toLine() const
toLineF() const
toList() const
toList(Q3GList * ) const // put items in list
toListFormat() const
toLocalFile() const
toLocale() const
toLong(bool *ok = 0, int base = 10) const
toLong(bool *ok=0) const
toLong(bool *ok=0, int base=10) const
toLongLong(bool *ok = 0) const
toLongLong(bool *ok = 0, int base = 10) const
toLongLong(bool *ok=0, int base=10) const
toLongLong(const QString &s, bool *ok = 0, int base = 0) const
toLower() const
toMacCGImageRef() const
toMap() const
toNativeSeparators(const QString &pathName)
toNext()
toNotation() const
toPage() const
toPercentEncoding(const QString &, const QByteArray &exclude = QByteArray(), const QByteArray &include = QByteArray())
toPlainText() const
toPoint() const
toPointF() const
toPolygon() const
toPrevious()
toProcessingInstruction() const
toPunycode(const QString &)
toRecord() const
toRect() const
toRectF() const
toRegExp() const
toReversed() const
toRgb() const
toSet() const
toShort(bool *ok = 0, int base = 10) const
toShort(bool *ok=0) const
toShort(bool *ok=0, int base=10) const
toShort(const QString &s, bool *ok = 0, int base = 0) const
toSize() const
toSizeF() const
toStdMap() const
toStdString() const
toStdWString() const
toString() const
toString(FormattingOptions options = None) const
toString(QSqlRecord* rec, const QString& prefix, const QString& fieldSep, const QString& sep) const
toString(Qt::DateFormat f = Qt::TextDate) const
toString(SequenceFormat format = PortableText) const
toString(bool encodedPath = false, bool forcePrependProtocol = true ) const
toString(const DomString *str)
toString(const QDate &date, FormatType format = LongFormat) const
toString(const QDate &date, const QString &formatStr) const
toString(const QSqlIndex& i, QSqlRecord* rec, const QString& prefix, const QString& fieldSep, const QString& sep) const
toString(const QString &format) const
toString(const QString &prefix = QString(), const QString &sep = QLatin1String(","), bool verbose = true) const
toString(const QString& prefix = QString(), const QString& sep = ",") const
toString(const QString& prefix = QString(), const QString& sep = QLatin1String(",")) const
toString(const QString& prefix, QSqlField* field, const QString& fieldSep) const
toString(const QTime &time, FormatType format = LongFormat) const
toString(const QTime &time, const QString &formatStr) const
toString(const char *)
toString(const void *)
toString(double i, char f = 'g', int prec = 6) const
toString(float i, char f = 'g', int prec = 6) const
toString(int = 1) const
toString(int i) const
toString(qlonglong i) const
toString(qulonglong i) const
toString(short i) const
toString(uint i) const
toString(ushort i) const
toStringList() const
toStringList(const QString& prefix = QString()) const
toStringList(const QString& prefix = QString(), bool verbose = true) const
toSubpathPolygons(const QMatrix &matrix = QMatrix()) const
toTableFormat() const
toText() const
toTime() const
toTimeSpec(Qt::TimeSpec spec) const
toTime_t() const
toUInt(bool *ok = 0) const
toUInt(bool *ok = 0, int base = 10) const
toUInt(bool *ok=0) const
toUInt(bool *ok=0, int base=10) const
toUInt(const QString &s, bool *ok = 0, int base = 0) const
toULong(bool *ok = 0, int base = 10) const
toULong(bool *ok=0) const
toULong(bool *ok=0, int base=10) const
toULongLong(bool *ok = 0) const
toULongLong(bool *ok = 0, int base = 10) const
toULongLong(bool *ok=0, int base=10) const
toULongLong(const QString &s, bool *ok = 0, int base = 0) const
toUShort(bool *ok = 0, int base = 10) const
toUShort(bool *ok=0) const
toUShort(bool *ok=0, int base=10) const
toUShort(const QString &s, bool *ok = 0, int base = 0) const
toUnicode(const QByteArray &ba)
toUnicode(const QByteArray&) const
toUnicode(const QByteArray&, int len) const
toUnicode(const char* chars) const
toUnicode(const char* chars, int len)
toUpper() const
toUrl() const
toVariant(const QMetaObject *meta, DomProperty *property)
toVector() const
toVector(Q3GVector * ) const // put items in vector
toWCharArray(wchar_t *array) const
toWinHBITMAP(HBitmapFormat format = NoAlpha) const
toggle()
toggleBit(int i)
toggleCurrentItem()
toggleDirection()
toggleViewAction() const
toggled(bool checked)
toggled(bool)
tool(int index) const = 0
toolBarArea(QToolBar *toolbar) const
toolBarPositionChanged(Q3ToolBar *)
toolBars(Qt::Dock dock) const
toolBarsMovable() const
toolButtonStyle() const
toolButtonStyleChanged(Qt::ToolButtonStyle toolButtonStyle)
toolButtonToggled(bool)
toolChanged(int toolIndex)
toolCount() const = 0
toolTip() const
toolTip() const = 0
top()
top() const
topDock() const
topEdge() const
topEdge(int ny) const
topItem() const
topLeft() const
topLevel() const
topLevelAt(const QPoint &p)
topLevelChanged(bool topLevel)
topLevelItem() const
topLevelItem(int index) const
topLevelItemCount() const
topLevelWidgets()
topMargin() const
topRight() const
total() const
totalHeight() const
totalHeightForWidth(int w) const
totalMaximumSize() const
totalMinimumSize() const
totalSizeHint() const
totalSteps() const
trUtf8(const char *s, const char *c) const
trUtf8(const char *s, const char *c, int n) const
trUtf8(const char *sourceText, const char *comment = 0, int n = -1)
tracking() const
transaction()
transformationAnchor() const
transformationMode() const
transformed(const QMatrix &) const
transformed(const QMatrix &, Qt::TransformationMode mode = Qt::FastTransformation) const
transformed(const QMatrix &matrix, Qt::TransformationMode mode = Qt::FastTransformation) const
translate(const QPoint &offset)
translate(const QPoint &p)
translate(const QPointF &offset)
translate(const QPointF &p)
translate(const char * context, const char * key, const char * comment = 0, Encoding encoding = CodecForTr)
translate(const char * context, const char * key, const char * comment, Encoding encoding, int n)
translate(const char *context, const char *sourceText, const char *comment = 0) const
translate(const char *context, const char *sourceText, const char *comment, int n) const
translate(int dx, int dy)
translate(qreal dx, qreal dy)
translated(const QPoint &p) const
translated(const QPointF &p) const
translated(int dx, int dy) const
translated(qreal dx, qreal dy) const
translationX() const
translationY() const
transpose()
treeStepSize() const
triggerAction(SliderAction action)
triggerLayout(bool deleteLayout = true)
triggerUpdate()
triggerUpdate(bool doLayout)
triggered(QAction *)
triggered(QAction *action)
triggered(bool checked = false)
trim(int m)
trimmed() const
tring tr(const char *s, const char *c) const
tring tr(const char *s, const char *c, int n) const
tring tr(const char *sourceText, const char *comment = 0, int n = -1)
trueMatrix(const QMatrix &, int w, int h)
trueMatrix(const QMatrix &m, int w, int h)
trueText() const
truncate(int pos)
tryAccess(int)
tryAcquire(int n = 1)
tryConnecting()
tryConnection()
tryGeometry(int, int) const
tryLock()
tryLockForRead()
tryLockForWrite()
trySetSelection(bool isDir, const Q3UrlOperator &, bool)
tryTerminate() const
tryVisual(const QGLFormat& f, int bufDepth = 1)
ts_getbuf(QChar*, uint )
ts_getc()
ts_getline(QChar* )
ts_isdigit(QChar)
ts_isspace(QChar)
ts_putc(QChar)
ts_putc(int)
ts_ungetc(QChar )
turnOffChild()
type()
type() const
type() const = 0
type(const QFileInfo &info) const
type(const QString& qName) const
type(const QString& uri, const QString& localName) const
type(const char *typeName)
type(int index) const
typeID() const
typeName() const
typeName(int type)
typeToName(Type type)
typeToSignature(int type)
uchar
uint
ulong
unMarkLine(int idx)
underMouse() const
underline() const
underlinePos() const
undo()
undo(QTextCursor *cursor)
undoAvailable(bool b)
undoAvailable(bool yes)
undoAvailable(bool)
undoDepth() const
undoText() const
undoTextChanged(const QString &undoText)
undock(QWidget *w)
ungetChar(char c)
ungetch(int)
unicode() const
unicodeUriToUri(const QString&)
unicodeVersion() const
uniformItemSizes() const
uniformRowHeights() const
uniqueKeys() const
unitVector() const
unite(const QHash<Key, T> &other)
unite(const QMap<Key, T> &other)
unite(const QRect &r) const // ### Qt 5: make QT4_SUPPORT
unite(const QRectF &r) const // ### Qt 5: make QT4_SUPPORT
unite(const QRegion &r) const
unite(const QSet<T> &other)
united(const QRect &other) const
united(const QRectF &other) const
unixSignal(int)
unlink() // unlink node
unlink_ascii(const char *, Q3PtrCollection::Item item = 0 )
unlink_common(int, Q3BaseBucket *, Q3BaseBucket * )
unlink_int(long, Q3PtrCollection::Item item = 0 )
unlink_ptr(void *, Q3PtrCollection::Item item = 0 )
unlink_string(const QString &, Q3PtrCollection::Item item = 0 )
unload()
unlock()
unmanageAction(QAction *action)
unmanageWidget(QWidget *widget)
unparsedEntityDecl(const QString& name, const QString& publicId, const QString& systemId, const QString& notationName)
unpolish(QApplication *)
unpolish(QApplication *app)
unpolish(QApplication*)
unpolish(QWidget *)
unpolish(QWidget *widget)
unpolish(QWidget*)
unregisterCallback(Callback, qInternalCallback)
unregisterExtensions(QAbstractExtensionFactory *factory, const QString &iid = QString())
unregisterExtensions(QAbstractExtensionFactory *factory, const QString &iid)
unregisterObject(const QString &path, UnregisterMode mode = UnregisterNode)
unregisterResource(const QString &rccFilename, const QString &resourceRoot=QString())
unregisterService(const QString &serviceName)
unregisterSocketNotifier(QSocketNotifier *notifier)
unregisterTimer(int timerId)
unregisterTimers(QObject *object)
unsetCursor()
unsetDevice()
unsetError()
unsetLayoutDirection()
unsetUrlHandler(const QString &scheme)
unsetf(int bits )
upRect() const
update()
update(bool invalidate = true)
update(const QRect&)
update(const QRectF & = QRectF(0., 0., 1000000000., 1000000000.))
update(const QRectF &rect = QRectF())
update(const QRegion&)
update(const QString & filter, bool invalidate = true)
update(int x, int y, int w, int h)
update(qreal x, qreal y, qreal width, qreal height)
updateAccessibility(QObject *, int who, Event reason)
updateBoundary()
updateButtons()
updateCell(int row, int col)
updateCell(int row, int column)
updateColWidgets(int col)
updateContents()
updateContents(const QRect& r )
updateContents(int x, int y, int w, int h )
updateContentsSize()
updateController(bool update = true , bool store = false)
updateCurrent()
updateCurrentFormat()
updateCurrentSelection()
updateCursor(const QPoint & pos)
updateCustomWidgets()
updateDirtyItems()
updateDisplay()
updateDynamicTexture(GLuint texture_id) const
updateEditor(int oldRow, int oldCol)
updateEditorData()
updateEditorGeometries()
updateEditorGeometry(QWidget *editor, const QStyleOptionViewItem &option, const QModelIndex &index) const
updateFamilies()
updateFileNameEdit(Q3ListBoxItem *)
updateFileNameEdit(Q3ListViewItem *)
updateGL()
updateGeometries()
updateGeometriesSlot()
updateGeometry()
updateGrid()
updateGui()
updateHeaderAndResizeContents(Q3TableHeader *header, int num, int colRow, int width, bool &updateBefore)
updateHeaderStates()
updateInterval() const
updateItem(Q3ListBoxItem *)
updateItem(int index)
updateItemContainer(Q3IconViewItem *item)
updateLayout()
updateMask()
updateMicroFocus()
updateOverlayGL()
updatePaintDevice()
updatePosition(const QPoint &globalPos )
updatePreviews(const Q3Url &u)
updateProperties() const
updateRow(int row )
updateRowInTable(int row, const QSqlRecord &values)
updateRowWidgets(int row)
updateScene(const QList<QRectF> &rects)
updateSceneRect(const QRectF &rect)
updateScrollBars() // ### virtual in 4.0
updateSection(int logicalIndex)
updateSelection()
updateSizes()
updateSplitterVisibility(bool visible)
updateState(const QPaintEngineState &state)
updateStoredState(Q3CheckListItem *key)
updateStyles()
updateX11Region() const
updated(const QRect &rect)
updatesEnabled() const
upperBound(const Key &key)
upperBound(const Key &key) const
uppercasebase(QTextStream &s)
uppercasedigits(QTextStream &s)
uri(const QString&) const
uri(int index) const
uriToLocalFile(const char*)
uriToUnicodeUri(const char*)
url() const
urlFinished(Q3NetworkOperation *op)
urlStart(Q3NetworkOperation *op)
urls() const
useDesignMetrics() const
useHighlightColors() const
user() const
userActionCount(int child) const
userActionCount(int child) const = 0
userData() const
userData(uint id) const
userInfo() const
userName() const
userProperty() const
userState() const
userType() const
usesBigPixmaps() const
usesDropDown() const
usesScrollButtons() const
usesTextLabel() const
usesTextLabelChanged(bool)
ushort
usleep(unsigned long)
utf16() const
vScrollBarMode() const
valid() const
valid(const QPoint &pt) const
valid(int x, int y) const
validate(QString &, int &) const
validate(QString &, int &) const = 0
validate(QString &input, int &pos) const
validate(QString& input, int& pos) const
validateAndSet(const QString &, int, int, int)
validator() const
value() const
value(const Key &key) const
value(const Key &key, const T &defaultValue) const
value(const QString &key) const
value(const QString &key, const QVariant &defaultValue = QVariant()) const
value(const QString& key ) const
value(const QString& name) const
value(const QString& qName) const
value(const QString& uri, const QString& localName) const
value(int i) const
value(int i, const T &defaultValue) const
value(int index) const
value(int row, int col ) const
valueChange()
valueChanged(const QDate& date)
valueChanged(const QDateTime& datetime)
valueChanged(const QString &)
valueChanged(const QTime& time)
valueChanged(double)
valueChanged(int row, int col)
valueChanged(int value)
valueChanged(int)
valueChanged(qreal x)
valueF() const
valueForTime(int msec) const
valueFromPosition(int pos, int space) const
valueFromText(const QString &text) const
valuePropertyName() const = 0
valuePropertyName(QVariant::Type type) const
valueToKey(int value) const
valueToKeys(int value) const
value_type
values() const
values(const Key &key) const
variableHeight() const
variableWidth() const
variant() const
vbarIsPressed()
vbarIsReleased()
version() const
verticalAlignment() const
verticalHeader() const
verticalHeaderFormat() const
verticalHeaderItem(int row) const
verticalOffset() const
verticalOffset() const = 0
verticalScaleAt(qreal step) const
verticalScrollBar() const
verticalScrollBarPolicy() const
verticalScrollMode() const
verticalScrollbarAction(int action)
verticalScrollbarValueChanged(int value)
verticalShearAt(qreal step) const
verticalSliderPressed()
verticalSliderReleased()
verticalStepsPerItem() const
view() const
viewBox() const
viewBoxF() const
viewMode() const
viewOptions() const
viewTransformEnabled() const
viewport() const
viewportContextMenuEvent(QContextMenuEvent * )
viewportDragEnterEvent(QDragEnterEvent * )
viewportDragLeaveEvent(QDragLeaveEvent * )
viewportDragMoveEvent(QDragMoveEvent * )
viewportDropEvent(QDropEvent * )
viewportEntered()
viewportEvent(QEvent *)
viewportEvent(QEvent *e)
viewportEvent(QEvent *event)
viewportMouseDoubleClickEvent(QMouseEvent* )
viewportMouseMoveEvent(QMouseEvent* )
viewportMousePressEvent(QMouseEvent* )
viewportMouseReleaseEvent(QMouseEvent* )
viewportPaintEvent(QPaintEvent *)
viewportPaintEvent(QPaintEvent* )
viewportResizeEvent(QResizeEvent *)
viewportResizeEvent(QResizeEvent *e)
viewportResizeEvent(QResizeEvent* )
viewportResizeEvent(QResizeEvent*)
viewportSize(int, int ) const
viewportToContents(const QPoint& ) const
viewportToContents(int vx, int vy, int& x, int& y ) const
viewportToContents2(const QPoint &p)
viewportToContents2(int vx, int vy, int& x, int& y)
viewportWheelEvent(QWheelEvent * )
views() const
virtual_hook(const QVariant &data)
virtual_hook(int id, void *data)
visibilityChanged(bool)
visibleHeight() const
visibleRect() const
visibleRegion() const
visibleWidget() const
visibleWidth() const
visual() const
visualAlignment(Qt::LayoutDirection direction, Qt::Alignment alignment)
visualColumn(int logicalColumn) const
visualIndex(int logicalIndex) const
visualIndexAt(int position) const
visualItemRect(const QListWidgetItem *item) const
visualItemRect(const QTableWidgetItem *item) const
visualItemRect(const QTreeWidgetItem *item) const
visualPos(Qt::LayoutDirection direction, const QRect &boundingRect, const QPoint &logicalPos)
visualRect(Qt::LayoutDirection direction, const QRect &boundingRect, const QRect &logicalRect)
visualRect(const QModelIndex &index) const
visualRect(const QModelIndex &index) const = 0
visualRegionForSelection(const QItemSelection &selection) const
visualRegionForSelection(const QItemSelection &selection) const = 0
visualRow(int logicalRow) const
vslide(int)
vsprintf(const char *format, va_list ap)
wait(QMutex *mutex, unsigned long time = ULONG_MAX)
wait(unsigned long time = ULONG_MAX)
waitForBytesWritten(int msecs = 30000)
waitForBytesWritten(int msecs)
waitForConnected(int msecs = 30000)
waitForDisconnected(int msecs = 30000)
waitForFinished(int msecs = 30000)
waitForMore(int msecs ) const // ### Qt 4.0: merge the two overloads
waitForMore(int msecs, bool *timeout ) const
waitForMore(int msecs, bool *timeout=0 ) const
waitForNewConnection(int msec = 0, bool *timedOut = 0)
waitForReadyRead(int msecs = 30000)
waitForReadyRead(int msecs)
waitForStarted(int msecs = 30000)
wakeAll()
wakeOne()
wakeUp()
warning(QWidget *parent, const QString &title, const QString &text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton)
warning(QWidget *parent, const QString &title, const QString& text, const QString& button0Text, const QString& button1Text = QString(), const QString& button2Text = QString(), int defaultButtonNumber = 0, int escapeButtonNumber = -1)
warning(QWidget *parent, const QString &title, const QString& text, int button0, int button1, int button2 = 0)
warning(const QXmlParseException& exception)
warningIndexRange(uint )
wasCanceled() const
wasCancelled() const
watchUnixSignal(int signal, bool watch)
weekNumber(int *yearNum = 0) const
weekdayTextFormat(Qt::DayOfWeek dayOfWeek) const
weight() const
weight(const QString &family, const QString &style) const
whatsThis()
whatsThis() const
whatsThis() const = 0
whatsThis(int id ) const
whatsThisButton(QWidget * parent)
whatsThisButton(QWidget *parent)
wheelEvent(QGraphicsSceneWheelEvent *event)
wheelEvent(QWheelEvent * )
wheelEvent(QWheelEvent *)
wheelEvent(QWheelEvent *e )
wheelEvent(QWheelEvent *e)
wheelEvent(QWheelEvent *event)
wheelScrollLines()
whiteSpaceMode() const
widget()
widget() const
widget() const = 0
widget(int cat_idx, int wgt_idx) const = 0
widget(int i) const
widget(int index) const
widget(int index) const = 0
widget(int) const
widgetAt(const QPoint &p)
widgetBox() const
widgetByName(QWidget *topLevel, const QString &name)
widgetCount() const = 0
widgetCount(int cat_idx) const = 0
widgetDataBase() const
widgetDestroyed(QWidget *w)
widgetEvent(QEvent *)
widgetFactory() const
widgetForAction(QAction *action) const
widgetManaged(QWidget *widget)
widgetOfContainer(QWidget *w) const = 0
widgetRemoved(QWidget *w)
widgetRemoved(int index)
widgetResizable() const
widgetToField(QWidget * widget) const
widgetUnmanaged(QWidget *widget)
widgets(QLayout *layout) const = 0
width() const
width(QChar) const
width(const Q3ListBox *) const
width(const QFontMetrics&, const Q3ListView*, int column) const
width(const QString &, int len = -1) const
width(const QString &string) const
width(int )
widthChanged(const Q3ListViewItem*, int c)
widthChanged(int column=-1) const
widthF() const
widthForHeight(int) const
widthUsed() const
winCombine(const QRegion &r, int num) const
winEvent(MSG *message, long *result)
winEventFilter(MSG *message, long *result)
winFocus(QWidget *, bool)
winGetExistingDirectory(const QString &initialDirectory, QWidget* parent = 0, const char* name = 0, const QString& caption = QString())
winGetOpenFileName(const QString &initialSelection, const QString &filter, QString* workingDirectory, QWidget *parent = 0, const char* name = 0, const QString& caption = QString(), QString* selectedFilter = 0)
winGetOpenFileNames(const QString &filter, QString* workingDirectory, QWidget *parent = 0, const char* name = 0, const QString& caption = QString(), QString* selectedFilter = 0)
winGetSaveFileName(const QString &initialSelection, const QString &filter, QString* workingDirectory, QWidget *parent = 0, const char* name = 0, const QString& caption = QString(), QString* selectedFilter = 0)
winId() const
winMouseButtonUp()
winPageSize() const
winding() const
window() const
windowActivated(QWidget* w)
windowActivationChange(bool)
windowActivationChange(bool) // compat
windowCreated() const
windowFlags() const
windowIcon()
windowIcon() const
windowIconText() const
windowList(WindowOrder order = CreationOrder) const
windowModality() const
windowOpacity() const
windowRole() const
windowState() const
windowSurface() const
windowTitle() const
windowType() const
wmapper()
wordWrap() const
wordWrapIconText() const
wordWrapMode() const
workAreaResized(int)
workingDirectory() const
worldMatrix() const
worldMatrixEnabled() const
wrapColumnOrWidth() const
wrapPolicy() const
wrapping() const
write()
write(QDataStream & ) const
write(QDataStream & ) const // write list to stream
write(QDataStream & ) const // write vector to stream
write(QDataStream &, Item ) const
write(QDataStream &, Q3PtrCollection::Item ) const
write(QDataStream &, Q3PtrCollection::Item) const
write(QDataStream &out) const
write(QDataStream &s, Q3PtrCollection::Item d ) const
write(QDataStream&, Q3PtrCollection::Item ) const
write(QObject *obj, const QVariant &value) const
write(const QImage &image)
write(const char *data, qint64 len)
writeBlock(const QChar* p, uint len )
writeBlock(const char *data, Q_ULONG len, const QHostAddress & host, Q_UINT16 port )
writeBlock(const char* p, uint len )
writeBytes(const char *, uint len)
writeData(const char *data, qint64 len)
writeDatagram(const char *data, qint64 len, const QHostAddress &host, quint16 port)
writeField(QWidget * widget)
writeFields()
writeRawBytes(const char* , uint len )
writeRawData(const char *, int len)
writeToStdin(const QByteArray& buf )
writeToStdin(const QString& buf )
writingSystem() const
writingSystemName(WritingSystem writingSystem)
writingSystemSample(WritingSystem writingSystem)
writingSystems() const
writingSystems(const QString &family) const
wroteToStdin()
ws(Q3TextStream &s ) // eat whitespace on input
ws(QTextStream &s)
x() const
x1() const
x11AppCells(int screen = -1)
x11AppColormap(int screen = -1)
x11AppDefaultColormap(int screen =-1)
x11AppDefaultVisual(int screen =-1)
x11AppDepth(int screen = -1)
x11AppDisplay()
x11AppDpiX(int screen = -1)
x11AppDpiY(int screen = -1)
x11AppRootWindow(int screen = -1)
x11AppScreen()
x11AppVisual(int screen = -1)
x11Cells() const
x11ClientMessage(QWidget*, XEvent*, bool passive_only)
x11Colormap() const
x11DefaultColormap() const
x11DefaultVisual() const
x11Depth() const
x11Display() const
x11Event(XEvent *)
x11EventFilter(XEvent *)
x11FilterEvent(QWidget *keywidget, XEvent *event )
x11Info() const
x11PictureHandle() const
x11ProcessEvent(XEvent*)
x11Screen()
x11Screen() const
x11SetAppDpiX(int, int)
x11SetAppDpiY(int, int)
x11SetDefaultScreen(int screen)
x11SetScreen(int screen = -1)
x11SetScreen(int screen)
x11Visual() const
x2() const
xForm(const QPoint &) const // map virtual -> deviceb
xForm(const QPolygon &) const
xForm(const QPolygon &, int index, int npoints) const
xForm(const QRect &) const
xFormDev(const QPoint &) const // map device -> virtual
xFormDev(const QPolygon &) const
xFormDev(const QPolygon &, int index, int npoints) const
xFormDev(const QRect &) const
xHeight() const
xToCursor(qreal x, CursorPosition = CursorBetweenCharacters) const
xTranslationAt(qreal step) const
xVelocity() const
y() const
y1() const
y2() const
yTranslationAt(qreal step) const
yVelocity() const
year() const
yearShown() const
yellow() const
yellowF() const
zValue() const
zeroDigit() const
zoomIn(int range = 1)
zoomIn(int range)
zoomOut(int range = 1)
zoomOut(int range)
zoomTo(int size)
~Q3Accel()
~Q3Action()
~Q3ActionGroup()
~Q3Button()
~Q3ButtonGroup()
~Q3Canvas()
~Q3CanvasEllipse()
~Q3CanvasItem()
~Q3CanvasLine()
~Q3CanvasPixmap()
~Q3CanvasPixmapArray()
~Q3CanvasPolygon()
~Q3CanvasPolygonalItem()
~Q3CanvasRectangle()
~Q3CanvasSpline()
~Q3CanvasSprite()
~Q3CanvasText()
~Q3CanvasView()
~Q3CheckListItem()
~Q3ComboBox()
~Q3ComboTableItem()
~Q3DataBrowser()
~Q3DataTable()
~Q3DataView()
~Q3DateEdit()
~Q3DateTimeEdit()
~Q3Dns()
~Q3DnsSocket()
~Q3DockArea()
~Q3DockWindow()
~Q3DragObject()
~Q3DropSite()
~Q3EditorFactory()
~Q3FileDialog()
~Q3Frame()
~Q3Ftp()
~Q3GArray()
~Q3GCache()
~Q3GCacheIterator()
~Q3GDict()
~Q3GDictIterator()
~Q3GList()
~Q3GListIterator()
~Q3GVector()
~Q3GridView()
~Q3GroupBox()
~Q3HGroupBox()
~Q3Header()
~Q3Http()
~Q3HttpHeader()
~Q3IconDrag()
~Q3IconDragItem()
~Q3IconView()
~Q3IconViewItem()
~Q3ImageDrag()
~Q3ListBox()
~Q3ListBoxItem()
~Q3ListBoxPixmap()
~Q3ListBoxText()
~Q3ListView()
~Q3ListViewItem()
~Q3ListViewItemIterator()
~Q3MainWindow()
~Q3MimeSourceFactory()
~Q3MultiLineEdit()
~Q3NetworkOperation()
~Q3NetworkProtocol()
~Q3Process()
~Q3ProgressDialog()
~Q3RangeControl()
~Q3ScrollView()
~Q3Semaphore()
~Q3ServerSocket()
~Q3Signal()
~Q3SimpleRichText()
~Q3Socket()
~Q3SocketDevice()
~Q3SpinWidget()
~Q3SqlCursor()
~Q3SqlEditorFactory()
~Q3SqlForm()
~Q3SqlPropertyMap()
~Q3SqlSelectCursor()
~Q3StoredDrag()
~Q3StyleSheet()
~Q3StyleSheetItem()
~Q3SyntaxHighlighter()
~Q3TabDialog()
~Q3Table()
~Q3TableItem()
~Q3TextBrowser()
~Q3TextDrag()
~Q3TextEdit()
~Q3TextStream()
~Q3TextView()
~Q3TimeEdit()
~Q3ToolBar()
~Q3UriDrag()
~Q3Url()
~Q3UrlOperator()
~Q3VGroupBox()
~Q3WhatsThis()
~Q3WidgetStack()
~Q3Wizard()
~QAbstractButton()
~QAbstractEventDispatcher()
~QAbstractFileEngine()
~QAbstractFileEngineHandler()
~QAbstractFormBuilder()
~QAbstractGraphicsShapeItem()
~QAbstractItemDelegate()
~QAbstractItemModel()
~QAbstractItemView()
~QAbstractListModel()
~QAbstractProxyModel()
~QAbstractScrollArea()
~QAbstractSlider()
~QAbstractSocket()
~QAbstractSpinBox()
~QAbstractTableModel()
~QAbstractTextDocumentLayout()
~QAbstractUndoItem()
~QAccessibleBridgePlugin()
~QAccessibleObject()
~QAccessibleObjectEx()
~QAccessiblePlugin()
~QAccessibleWidget()
~QAccessibleWidgetEx()
~QAction()
~QActionEvent()
~QActionGroup()
~QApplication()
~QAssistantClient()
~QBitmap()
~QBoxLayout()
~QBrush()
~QBuffer()
~QButtonGroup()
~QByteArray()
~QByteArrayMatcher()
~QCDEStyle()
~QCalendarWidget()
~QChildEvent()
~QCleanlooksStyle()
~QClipboard()
~QClipboardEvent()
~QCloseEvent()
~QColorDialog()
~QColormap()
~QComboBox()
~QCommonStyle()
~QCompleter()
~QContextMenuEvent()
~QCoreApplication()
~QCursor()
~QCustomEvent()
~QDBusAbstractAdaptor()
~QDBusAbstractInterface()
~QDBusArgument()
~QDBusConnection()
~QDBusConnectionInterface()
~QDBusInterface()
~QDBusMessage()
~QDataStream()
~QDataWidgetMapper()
~QDateTime()
~QDesignerActionEditorInterface()
~QDesignerFormEditorInterface()
~QDesignerFormWindowInterface()
~QDesignerFormWindowManagerInterface()
~QDesignerFormWindowToolInterface()
~QDesignerMetaDataBaseInterface()
~QDesignerObjectInspectorInterface()
~QDesignerPropertyEditorInterface()
~QDesignerWidgetBoxInterface()
~QDesignerWidgetDataBaseInterface()
~QDesignerWidgetFactoryInterface()
~QDesktopWidget()
~QDial()
~QDialog()
~QDialogButtonBox()
~QDir()
~QDirModel()
~QDockWidget()
~QDomDocument()
~QDomImplementation()
~QDomNamedNodeMap()
~QDomNode()
~QDomNodeList()
~QDoubleValidator()
~QDrag()
~QDragEnterEvent()
~QDragLeaveEvent()
~QDragMoveEvent()
~QDragResponseEvent()
~QDropEvent()
~QDynamicPropertyChangeEvent()
~QErrorMessage()
~QEvent()
~QEventLoop()
~QExtensionManager()
~QFSFileEngine()
~QFile()
~QFileDialog()
~QFileIconProvider()
~QFileInfo()
~QFileOpenEvent()
~QFileSystemWatcher()
~QFocusEvent()
~QFocusFrame()
~QFont()
~QFontComboBox()
~QFontDialog()
~QFontInfo()
~QFontMetrics()
~QFontMetricsF()
~QFormBuilder()
~QFrame()
~QFtp()
~QGLColormap()
~QGLContext()
~QGLFormat()
~QGLFramebufferObject()
~QGLPixelBuffer()
~QGLWidget()
~QGraphicsEllipseItem()
~QGraphicsItem()
~QGraphicsItemAnimation()
~QGraphicsItemGroup()
~QGraphicsLineItem()
~QGraphicsPathItem()
~QGraphicsPixmapItem()
~QGraphicsPolygonItem()
~QGraphicsRectItem()
~QGraphicsScene()
~QGraphicsSceneContextMenuEvent()
~QGraphicsSceneDragDropEvent()
~QGraphicsSceneEvent()
~QGraphicsSceneHelpEvent()
~QGraphicsSceneHoverEvent()
~QGraphicsSceneMouseEvent()
~QGraphicsSceneWheelEvent()
~QGraphicsSimpleTextItem()
~QGraphicsTextItem()
~QGraphicsView()
~QGridLayout()
~QGroupBox()
~QHBoxLayout()
~QHeaderView()
~QHelpEvent()
~QHideEvent()
~QHostAddress()
~QHostInfo()
~QHoverEvent()
~QHttp()
~QHttpHeader()
~QIBaseDriver()
~QIBaseResult()
~QIODevice()
~QIcon()
~QIconDragEvent()
~QIconEngine()
~QIconEnginePlugin()
~QImage()
~QImageIOHandler()
~QImageIOPlugin()
~QImageReader()
~QImageWriter()
~QInputContext()
~QInputContextPlugin()
~QInputDialog()
~QInputEvent()
~QIntValidator()
~QItemDelegate()
~QItemEditorFactory()
~QItemSelectionModel()
~QKeyEvent()
~QKeySequence()
~QLCDNumber()
~QLabel()
~QLayout()
~QLayoutItem()
~QLibrary()
~QLineEdit()
~QLinkedList()
~QList()
~QListView()
~QListWidget()
~QListWidgetItem()
~QMYSQLDriver()
~QMYSQLResult()
~QMacPasteboardMime()
~QMainWindow()
~QMenu()
~QMenuBar()
~QMessageBox()
~QMimeData()
~QMimeSource()
~QMotifStyle()
~QMouseEvent()
~QMoveEvent()
~QMovie()
~QMutex()
~QNetworkAddressEntry()
~QNetworkInterface()
~QNetworkProxy()
~QODBCDriver()
~QODBCResult()
~QObject()
~QObjectCleanupHandler()
~QObjectData()
~QObjectUserData()
~QPSQLDriver()
~QPSQLResult()
~QPaintDevice()
~QPaintEngine()
~QPaintEvent()
~QPainter()
~QPainterPath()
~QPainterPathStroker()
~QPalette()
~QPen()
~QPersistentModelIndex()
~QPicture()
~QPictureFormatPlugin()
~QPictureIO()
~QPixmap()
~QPlastiqueStyle()
~QPluginLoader()
~QPrintDialog()
~QPrinter()
~QProcess()
~QProgressDialog()
~QProxyModel()
~QPushButton()
~QReadWriteLock()
~QRegExp()
~QRegExpValidator()
~QRegion()
~QResizeEvent()
~QResource()
~QRubberBand()
~QSQLite2Driver()
~QSQLite2Result()
~QSQLiteDriver()
~QSQLiteResult()
~QScrollArea()
~QScrollBar()
~QSemaphore()
~QSessionManager()
~QSettings()
~QShortcut()
~QShortcutEvent()
~QShowEvent()
~QSignalMapper()
~QSizeGrip()
~QSlider()
~QSocketNotifier()
~QSortFilterProxyModel()
~QSound()
~QSplashScreen()
~QSplitter()
~QSqlDatabase()
~QSqlDriver()
~QSqlDriverPlugin()
~QSqlError()
~QSqlField()
~QSqlIndex()
~QSqlQuery()
~QSqlQueryModel()
~QSqlRecord()
~QSqlRelationalTableModel()
~QSqlResult()
~QSqlTableModel()
~QStackedLayout()
~QStackedWidget()
~QStandardItem()
~QStandardItemModel()
~QStatusBar()
~QStatusTipEvent()
~QString()
~QStringMatcher()
~QStyle()
~QStyleHintReturn()
~QStyleOption()
~QStylePlugin()
~QSvgRenderer()
~QSvgWidget()
~QSyntaxHighlighter()
~QSystemLocale()
~QSystemTrayIcon()
~QTabBar()
~QTabWidget()
~QTableView()
~QTableWidget()
~QTableWidgetItem()
~QTableWidgetSelectionRange()
~QTabletEvent()
~QTcpServer()
~QTcpSocket()
~QTemporaryFile()
~QTestData()
~QTextBlockGroup()
~QTextBlockUserData()
~QTextBrowser()
~QTextCodec()
~QTextCodecPlugin()
~QTextCursor()
~QTextDecoder()
~QTextDocument()
~QTextDocumentFragment()
~QTextEdit()
~QTextEncoder()
~QTextFormat()
~QTextFrame()
~QTextFrameLayoutData()
~QTextLayout()
~QTextList()
~QTextObject()
~QTextOption()
~QTextStream()
~QTextTable()
~QThread()
~QThreadStorageData()
~QTimeLine()
~QTimer()
~QTimerEvent()
~QToolBar()
~QToolBarChangeEvent()
~QToolBox()
~QToolButton()
~QTranslator()
~QTreeView()
~QTreeWidget()
~QTreeWidgetItem()
~QTreeWidgetItemIterator()
~QUdpSocket()
~QUiLoader()
~QUndoCommand()
~QUndoStack()
~QUndoView()
~QUpdateLaterEvent()
~QUrl()
~QUrlInfo()
~QVBoxLayout()
~QValidator()
~QVariant()
~QWaitCondition()
~QWhatsThisClickedEvent()
~QWheelEvent()
~QWidget()
~QWidgetAction()
~QWindowStateChangeEvent()
~QWindowsMime()
~QWindowsStyle()
~QWindowsXPStyle()
~QWorkspace()
~QX11EmbedContainer()
~QX11EmbedWidget()
~QX11Info()
~QXmlInputSource()
~QXmlLocator()
~QXmlNamespaceSupport()
~QXmlParseException()
~QXmlSimpleReader()
~UndoRedoInfo()
